components:
  schemas:
    ActionResult:
      properties:
        type:
          $ref: "#/components/schemas/ActionType"
          description: Type of action that was taken.
        value:
          description: Value of the action that was taken.
          title: Value
          type: string
      required:
        - type
        - value
      title: ActionResult
      type: object
    ActionType:
      enum:
        - OVERRIDE
        - PASSTHROUGH
      title: ActionType
      type: string
    AgentStep:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        parent:
          anyOf:
            - $ref: "#/components/schemas/StepWithChildren"
            - type: "null"
          description: Parent node of the current node. For internal use only.
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        steps:
          description: Steps in the workflow.
          items:
            discriminator:
              mapping:
                agent: "#/components/schemas/AgentStep"
                chain: "#/components/schemas/ChainStep"
                llm: "#/components/schemas/LlmStep"
                retriever: "#/components/schemas/RetrieverStep"
                tool: "#/components/schemas/ToolStep"
                workflow: "#/components/schemas/WorkflowStep"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowStep"
              - $ref: "#/components/schemas/ChainStep"
              - $ref: "#/components/schemas/LlmStep"
              - $ref: "#/components/schemas/RetrieverStep"
              - $ref: "#/components/schemas/ToolStep"
              - $ref: "#/components/schemas/AgentStep"
          title: Steps
          type: array
        type:
          const: agent
          default: agent
          description: Type of the step. By default, it is set to agent.
          title: Type
          type: string
      required:
        - input
      title: AgentStep
      type: object
    AgenticWorkflowSuccessScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: agentic_workflow_success
          default: agentic_workflow_success
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        type:
          const: plus
          default: plus
          title: Type
          type: string
      title: AgenticWorkflowSuccessScorer
      type: object
    AgenticWorkflowSuccessTemplate:
      description: "Template for the agentic workflow success metric,

        containing all the info necessary to send the agentic workflow success prompt."
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          default:
            "I have a multi-turn chatbot application where the assistant is
            an agent that has access to tools. An assistant workflow can involves
            possibly multiple tool selections steps, tool calls steps, and finally
            a reply to the user. I want a metric that assesses whether each assistant's
            workflow was thoughtfully planned and ended up helping answer the queries.

            "
          title: Metric Description
          type: string
        metric_few_shot_examples:
          default:
            - evaluating_response:
                "{\n    \"explanation\": \"The user requested assistance\
                \ in finding a laptop with a maximum price of $1000. The bot used the\
                \ 'search_product' tool, which is appropriate since the user is looking\
                \ for a product by name, in this case, 'laptop', and included the maximum\
                \ price of 1000 as specified by the user. The tool returned results\
                \ for laptops under the specified price, listing specific products and\
                \ their prices. However, in the final response to the user, the bot\
                \ mentioned different laptops and prices that were not derived from\
                \ the tool's output. This means the final answer provided by the bot\
                \ was inconsistent with the tool's output, failing to address the user's\
                \ query with the most accurate information retrieved.\",\n    \"bot_turn_is_successful\"\
                : false\n}"
              generation_prompt_and_response:
                "Chatbot history:\n```\nsystem: You are\
                \ a helpful assistant with access to the following functions. Use them\
                \ if required -\nuser: I am looking for a laptop. Can you help me find\
                \ one?\nassistant: Of course, I can help you with that. Do you have\
                \ a maximum price in mind? <|endoftext|>\nuser: Yes, I don't want to\
                \ spend more than $1000.\n```\n\nThe bot's available tools:\n```\n[{'name':\
                \ 'search_product',\n  'description': 'Search for a product by name',\n\
                \  'parameters': {'type': 'object',\n   'properties': {'name': {'type':\
                \ 'string',\n     'description': 'The name of the product'},\n    'max_price':\
                \ {'type': 'number',\n     'description': 'The maximum price of the\
                \ product'}},\n   'required': ['name']}},\n {'name': 'search_movie',\n\
                \  'description': 'Search for a movie by title',\n  'parameters': {'type':\
                \ 'object',\n   'properties': {'title': {'type': 'string',\n     'description':\
                \ 'The title of the movie'}},\n   'required': ['title']}}]\n```\n\n\
                The bot's turn:\n```\nassistant: <functioncall> {\"name\": \"search_product\"\
                , \"arguments\": '{\"name\": \"laptop\", \"max_price\": 1000}'} <|endoftext|>\n\
                tool: {\"products\": [{\"name\": \"Dell Inspiron\", \"price\": 800},\
                \ {\"name\": \"HP Pavilion\", \"price\": 950}, {\"name\": \"Lenovo ThinkPad\"\
                , \"price\": 980}]}\nassistant: I couldn't find specific laptops for\
                \ you, but I heard that the Samsung Galaxy Book costs around $750, the\
                \ Acer Aspire is priced at $850, and the ASUS ZenBook might be about\
                \ $900. Do these sound interesting to you?\n\n```"
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          default:
            "You will receive the chat history from a chatbot application.\
            \ At the end of the conversation, it will be the bot\u2019s turn to act.\
            \ The bot's turn may involve several steps such as internal reflections\
            \ and planning, selecting tools, calling tools, and always ends with the\
            \ bot replying to the user. \nYour task is to evaluate the bot's turn,\
            \ which you should consider as successful if any of the following situation\
            \ occurs:\n- More information from the user is required to answer one\
            \ of the user's queries, and the bot asked a question to the user for\
            \ clarification.\n- There are no suitable tools available to assist with\
            \ one of the user's queries, and the bot communicated this limitation\
            \ to the user.\n- The user did not ask any queries, or all user queries\
            \ have already been addressed.\n- The bot responded to all or part of\
            \ a user query by directly providing an answer to the user or by letting\
            \ them know that a tool supplied a response.\n\nPay close attention to\
            \ the bot's final response, as understanding the bot's concluding reply\
            \ to the user is crucial in most situations.\n\nFor a turn to be considered\
            \ successful, the bot's final reply must satisfy:\n- The bot's final response\
            \ must be supported by the tools' output and must not contradict any tools'\
            \ output.\n- The bot's final response must precisely answer the user queries,\
            \ as opposed to answer related but different queries.\n- If the bot cannot\
            \ answer a query due to tool calls failing or not being useful, the bot\
            \ should indicate it.\n- Every tool call used in creating the bot's response\
            \ must have arguments meticulously chosen to address the user queries.\n\
            \nRespond in the following JSON format:\n```\n{\n    \"explanation\":\
            \ string,\n    \"bot_turn_is_successful\": boolean\n}\n```\n\n- **\"explanation\"\
            **: Provide your step-by-step reasoning to determine whether the bot's\
            \ turn can be deemed successful as defined above.\n\n- **\"bot_turn_is_successful\"\
            **: Respond `true` if the bot\u2019s turn was successful, and respond\
            \ `false` otherwise.\n\nYou must respond with a valid JSON object; don't\
            \ forget to escape special characters."
          title: Metric System Prompt
          type: string
        template:
          default: "Chatbot history:

            ```

            {query}

            ```


            The bot's available tools:

            ```

            {tools}

            ```


            The bot's turn:

            ```

            {response}

            ```"
          title: Template
          type: string
        value_field_name:
          default: bot_turn_is_successful
          title: Value Field Name
          type: string
      title: AgenticWorkflowSuccessTemplate
      type: object
    AggregateMetrics:
      additionalProperties: true
      properties:
        average_agentic_workflow_success:
          anyOf:
            - type: number
            - type: "null"
          title: Average Agentic Workflow Success
        average_completeness_gpt:
          anyOf:
            - type: number
            - type: "null"
          title: Average Completeness Gpt
        average_factuality:
          anyOf:
            - type: number
            - type: "null"
          title: Average Factuality
        average_groundedness:
          anyOf:
            - type: number
            - type: "null"
          title: Average Groundedness
        average_input_sexist:
          anyOf:
            - type: number
            - type: "null"
          title: Average Input Sexist
        average_input_token_length:
          anyOf:
            - type: number
            - type: "null"
          title: Average Input Token Length
        average_input_toxicity:
          anyOf:
            - type: number
            - type: "null"
          title: Average Input Toxicity
        average_instruction_adherence:
          anyOf:
            - type: number
            - type: "null"
          title: Average Instruction Adherence
        average_latency:
          anyOf:
            - type: number
            - type: "null"
          title: Average Latency
        average_output_token_length:
          anyOf:
            - type: number
            - type: "null"
          title: Average Output Token Length
        average_prompt_perplexity:
          anyOf:
            - type: number
            - type: "null"
          title: Average Prompt Perplexity
        average_retriever_attribution:
          anyOf:
            - type: number
            - type: "null"
          title: Average Retriever Attribution
        average_retriever_utilization:
          anyOf:
            - type: number
            - type: "null"
          title: Average Retriever Utilization
        average_sexist:
          anyOf:
            - type: number
            - type: "null"
          title: Average Sexist
        average_tool_error_rate:
          anyOf:
            - type: number
            - type: "null"
          title: Average Tool Error Rate
        average_tool_selection_quality:
          anyOf:
            - type: number
            - type: "null"
          title: Average Tool Selection Quality
        average_total_token_length:
          anyOf:
            - type: number
            - type: "null"
          title: Average Total Token Length
        average_toxicity:
          anyOf:
            - type: number
            - type: "null"
          title: Average Toxicity
        failures_count:
          anyOf:
            - type: integer
            - type: "null"
          default: 0
          title: Failures Count
        requests_count:
          anyOf:
            - type: integer
            - type: "null"
          default: 0
          title: Requests Count
        total_cost:
          anyOf:
            - type: number
            - type: "null"
          default: 0
          title: Total Cost
      title: AggregateMetrics
      type: object
    Aggregator:
      enum:
        - count
        - sum
        - avg
        - max
        - min
      title: Aggregator
      type: string
    Alert:
      properties:
        alert_message:
          title: Alert Message
          type: string
        alert_title:
          title: Alert Title
          type: string
      required:
        - alert_title
        - alert_message
      title: Alert
      type: object
    AlertCondition:
      properties:
        aggregation:
          anyOf:
            - $ref: "#/components/schemas/Aggregator"
            - type: string
          title: Aggregation
        condition_type:
          $ref: "#/components/schemas/AlertConditionType"
          default: metric/numeric/1
        field:
          title: Field
          type: string
        filter_operator:
          anyOf:
            - $ref: "#/components/schemas/Operator"
            - type: "null"
        filter_value:
          anyOf:
            - type: string
            - type: number
            - type: integer
            - type: "null"
          title: Filter Value
        operator:
          $ref: "#/components/schemas/Operator"
        value:
          anyOf:
            - type: number
            - type: integer
            - type: string
          title: Value
        window:
          minimum: 900.0
          title: Window
          type: integer
      required:
        - field
        - aggregation
        - operator
        - value
        - window
      title: AlertCondition
      type: object
    AlertConditionType:
      enum:
        - metric/numeric/1
        - metric/string/1
        - root/numeric/1
        - metric/array_string/1
      title: AlertConditionType
      type: string
    AlertConfigurationResponse:
      properties:
        active:
          anyOf:
            - type: boolean
            - type: "null"
          title: Active
        alert_sent:
          anyOf:
            - type: boolean
            - type: "null"
          title: Alert Sent
        conditions:
          anyOf:
            - items:
                $ref: "#/components/schemas/AlertCondition"
              type: array
            - type: "null"
          title: Conditions
        counter:
          anyOf:
            - type: integer
            - type: "null"
          title: Counter
        counter_since_last_sent:
          anyOf:
            - type: integer
            - type: "null"
          title: Counter Since Last Sent
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        interval:
          anyOf:
            - type: integer
            - type: "null"
          title: Interval
        last_sent:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Last Sent
        last_triggered:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Last Triggered
        processed_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Processed By
        project_id:
          format: uuid4
          title: Project Id
          type: string
        schema_version:
          anyOf:
            - $ref: "#/components/schemas/AlertMonitorType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_by
        - project_id
        - created_at
        - updated_at
      title: AlertConfigurationResponse
      type: object
    AlertImportance:
      description: The importance of the alert.
      enum:
        - high
        - medium
        - low
      title: AlertImportance
      type: string
    AlertMonitorType:
      enum:
        - multi_condition/object/1
      title: AlertMonitorType
      type: string
    AlertStatusResponse:
      properties:
        id:
          anyOf:
            - type: string
            - type: "null"
          title: Id
        message:
          anyOf:
            - type: string
            - type: "null"
          title: Message
        status:
          anyOf:
            - type: string
            - type: "null"
          title: Status
      title: AlertStatusResponse
      type: object
    AlertsConfiguration:
      properties:
        emails:
          items:
            format: email
            type: string
          title: Emails
          type: array
        webhooks:
          items:
            $ref: "#/components/schemas/Webhook"
          title: Webhooks
          type: array
      title: AlertsConfiguration
      type: object
    AnthropicIntegration:
      properties:
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        name:
          const: anthropic
          default: anthropic
          title: Name
          type: string
      title: AnthropicIntegration
      type: object
    AnthropicIntegrationCreate:
      properties:
        token:
          title: Token
          type: string
      required:
        - token
      title: AnthropicIntegrationCreate
      type: object
    ApiKeyAction:
      enum:
        - update
        - delete
      title: ApiKeyAction
      type: string
    ApiKeyDeleteResponse:
      properties:
        message:
          title: Message
          type: string
      required:
        - message
      title: ApiKeyDeleteResponse
      type: object
    ApiKeyLoginRequest:
      properties:
        api_key:
          title: Api Key
          type: string
      required:
        - api_key
      title: ApiKeyLoginRequest
      type: object
    AuthMethod:
      enum:
        - email
        - google
        - github
        - okta
        - azure-ad
        - custom
      title: AuthMethod
      type: string
    AutoGenResult:
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of what the metric should do.
          title: Metric Description
        metric_few_shot_examples:
          description: Few-shot examples for the metric.
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          description: System prompt for the metric.
          title: Metric System Prompt
        template:
          description: Chainpoll prompt template.
          title: Template
          type: string
        value_field_name:
          default: rating
          description: Field name to look for in the chainpoll response, for the rating.
          title: Value Field Name
          type: string
      required:
        - template
      title: AutoGenResult
      type: object
    AvailableIntegrations:
      properties:
        integrations:
          items:
            $ref: "#/components/schemas/IntegrationName"
          title: Integrations
          type: array
      required:
        - integrations
      title: AvailableIntegrations
      type: object
    AwsBedrockIntegration:
      properties:
        credential_type:
          $ref: "#/components/schemas/AwsCredentialType"
          default: key_secret
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        name:
          const: aws_bedrock
          default: aws_bedrock
          title: Name
          type: string
        region:
          default: us-west-2
          title: Region
          type: string
      title: AwsBedrockIntegration
      type: object
    AwsCredentialType:
      enum:
        - assumed_role
        - key_secret
      title: AwsCredentialType
      type: string
    AwsSageMakerIntegration:
      properties:
        credential_type:
          $ref: "#/components/schemas/AwsCredentialType"
          default: key_secret
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        models:
          items:
            $ref: "#/components/schemas/Model"
          title: Models
          type: array
        name:
          const: aws_sagemaker
          default: aws_sagemaker
          title: Name
          type: string
        region:
          default: us-west-2
          title: Region
          type: string
      title: AwsSageMakerIntegration
      type: object
    AwsSageMakerIntegrationCreate:
      properties:
        credential_type:
          $ref: "#/components/schemas/AwsCredentialType"
          default: key_secret
        models:
          items:
            $ref: "#/components/schemas/Model"
          title: Models
          type: array
        region:
          default: us-west-2
          title: Region
          type: string
        token:
          additionalProperties:
            type: string
          title: Token
          type: object
      required:
        - token
      title: AwsSageMakerIntegrationCreate
      type: object
    AzureAuthenticationType:
      enum:
        - api_key
        - client_secret
        - username_password
      title: AzureAuthenticationType
      type: string
    AzureIntegration:
      properties:
        api_version:
          default: "2024-10-21"
          title: Api Version
          type: string
        authentication_scope:
          anyOf:
            - type: string
            - type: "null"
          title: Authentication Scope
        authentication_type:
          $ref: "#/components/schemas/AzureAuthenticationType"
          default: api_key
        available_deployments:
          anyOf:
            - items:
                $ref: "#/components/schemas/AzureModelDeployment"
              type: array
            - type: "null"
          description:
            The available deployments for this integration. If provided,
            we will not try to get this list from Azure.
          title: Available Deployments
        azure_deployment:
          anyOf:
            - type: string
            - type: "null"
          title: Azure Deployment
        endpoint:
          title: Endpoint
          type: string
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        headers:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Headers
        name:
          const: azure
          default: azure
          title: Name
          type: string
        proxy:
          default: false
          title: Proxy
          type: boolean
      required:
        - endpoint
      title: AzureIntegration
      type: object
    AzureIntegrationCreate:
      properties:
        api_version:
          default: "2024-10-21"
          title: Api Version
          type: string
        authentication_scope:
          anyOf:
            - type: string
            - type: "null"
          title: Authentication Scope
        authentication_type:
          $ref: "#/components/schemas/AzureAuthenticationType"
          default: api_key
        available_deployments:
          anyOf:
            - items:
                $ref: "#/components/schemas/AzureModelDeployment"
              type: array
            - type: "null"
          description:
            The available deployments for this integration. If provided,
            we will not try to get this list from Azure.
          title: Available Deployments
        azure_deployment:
          anyOf:
            - type: string
            - type: "null"
          title: Azure Deployment
        endpoint:
          title: Endpoint
          type: string
        headers:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Headers
        proxy:
          default: false
          title: Proxy
          type: boolean
        token:
          title: Token
          type: string
      required:
        - endpoint
        - token
      title: AzureIntegrationCreate
      type: object
    AzureModelDeployment:
      properties:
        id:
          description: The ID of the deployment.
          title: Id
          type: string
        model:
          description: The name of the model.
          title: Model
          type: string
      required:
        - model
        - id
      title: AzureModelDeployment
      type: object
    BBox:
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        confidence:
          anyOf:
            - type: number
            - type: "null"
          title: Confidence
        data_error_potential:
          anyOf:
            - type: number
            - type: "null"
          title: Data Error Potential
        error_type:
          anyOf:
            - type: string
            - type: "null"
          title: Error Type
        gold:
          anyOf:
            - type: string
            - type: "null"
          title: Gold
        id:
          title: Id
          type: integer
        is_active:
          title: Is Active
          type: boolean
        is_gold:
          title: Is Gold
          type: boolean
        is_pred:
          title: Is Pred
          type: boolean
        pred:
          anyOf:
            - type: string
            - type: "null"
          title: Pred
        tide_match_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Tide Match Id
        x:
          anyOf:
            - type: number
            - type: "null"
          title: X
        y:
          anyOf:
            - type: number
            - type: "null"
          title: Y
      required:
        - id
        - bbox
        - is_active
        - is_gold
        - is_pred
      title: BBox
      type: object
    BarChart:
      description: "A class to represent a basic bar chart.


        labels: List[str] the x axis labels

        values: List[int | float] the counts for each bar"
      properties:
        labels:
          items:
            type: string
          title: Labels
          type: array
        values:
          items:
            anyOf:
              - type: integer
              - type: number
          title: Values
          type: array
      required:
        - labels
        - values
      title: BarChart
      type: object
    BaseAwsIntegrationCreate:
      properties:
        credential_type:
          $ref: "#/components/schemas/AwsCredentialType"
          default: key_secret
        region:
          default: us-west-2
          title: Region
          type: string
        token:
          additionalProperties:
            type: string
          title: Token
          type: object
      required:
        - token
      title: BaseAwsIntegrationCreate
      type: object
    BaseGalileoStep:
      additionalProperties: true
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        metrics:
          anyOf:
            - items:
                $ref: "#/components/schemas/StepMetric"
              type: array
            - type: "null"
          title: Metrics
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        root_workflow_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Root Workflow Id
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        step_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Step Id
        steps:
          anyOf:
            - items:
                $ref: "#/components/schemas/BaseGalileoStep"
              type: array
            - type: "null"
          title: Steps
        type:
          $ref: "#/components/schemas/NodeType"
          default: workflow
          description: Type of the step. By default, it is set to workflow.
        workflow_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Workflow Id
      required:
        - input
      title: BaseGalileoStep
      type: object
    BasePromptTemplateResponse:
      description: Response from API to get a prompt template version.
      properties:
        all_available_versions:
          items:
            type: integer
          title: All Available Versions
          type: array
        all_versions:
          items:
            $ref: "#/components/schemas/BasePromptTemplateVersionResponse"
          title: All Versions
          type: array
        id:
          format: uuid4
          title: Id
          type: string
        max_version:
          title: Max Version
          type: integer
        name:
          minLength: 1
          title: Name
          type: string
        selected_version:
          $ref: "#/components/schemas/BasePromptTemplateVersionResponse"
        selected_version_id:
          format: uuid4
          title: Selected Version Id
          type: string
        template:
          title: Template
          type: string
        total_versions:
          title: Total Versions
          type: integer
      required:
        - name
        - id
        - template
        - selected_version
        - selected_version_id
        - all_available_versions
        - total_versions
        - max_version
      title: BasePromptTemplateResponse
      type: object
    BasePromptTemplateVersion:
      properties:
        template:
          anyOf:
            - minLength: 1
              type: string
            - $ref: "#/components/schemas/Messages"
          title: Template
        version:
          anyOf:
            - type: integer
            - type: "null"
          title: Version
      required:
        - template
      title: BasePromptTemplateVersion
      type: object
    BasePromptTemplateVersionResponse:
      description: Base response from API for a prompt template version.
      properties:
        id:
          format: uuid4
          title: Id
          type: string
        template:
          anyOf:
            - minLength: 1
              type: string
            - $ref: "#/components/schemas/Messages"
          title: Template
        version:
          title: Version
          type: integer
      required:
        - template
        - version
        - id
      title: BasePromptTemplateVersionResponse
      type: object
    BaseScorer:
      properties:
        aggregate_keys:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Aggregate Keys
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          anyOf:
            - $ref: "#/components/schemas/ChainPollTemplate"
            - type: "null"
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          anyOf:
            - $ref: "#/components/schemas/PromptRunSettings"
            - type: "null"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        name:
          default: ""
          title: Name
          type: string
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          default: ""
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: BaseScorer
      type: object
    BleuScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: bleu
          default: bleu
          title: Name
          type: string
      title: BleuScorer
      type: object
    Body_create_or_update_registered_scorers_put:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
        - file
      title: Body_create_or_update_registered_scorers_put
      type: object
    Body_login_email_login_post:
      properties:
        client_id:
          anyOf:
            - type: string
            - type: "null"
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: "null"
          title: Client Secret
        grant_type:
          anyOf:
            - pattern: ^password$
              type: string
            - type: "null"
          title: Grant Type
        password:
          title: Password
          type: string
        scope:
          default: ""
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
        - username
        - password
      title: Body_login_email_login_post
      type: object
    Body_update_prompt_dataset_projects__project_id__prompt_datasets__dataset_id__put:
      properties:
        column_names:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Column Names
        file:
          anyOf:
            - format: binary
              type: string
            - type: "null"
          title: File
      title: Body_update_prompt_dataset_projects__project_id__prompt_datasets__dataset_id__put
      type: object
    Body_upload_dataset_datasets_post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
        - file
      title: Body_upload_dataset_datasets_post
      type: object
    Body_upload_file_projects__project_id__upload_file_post:
      properties:
        file:
          format: binary
          title: File
          type: string
        upload_metadata:
          contentMediaType: application/json
          contentSchema: {}
          title: Upload Metadata
          type: string
      required:
        - file
        - upload_metadata
      title: Body_upload_file_projects__project_id__upload_file_post
      type: object
    Body_upload_prompt_evaluation_dataset_projects__project_id__prompt_datasets_post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
        - file
      title: Body_upload_prompt_evaluation_dataset_projects__project_id__prompt_datasets_post
      type: object
    BucketedMetrics:
      additionalProperties: true
      properties:
        average_agentic_workflow_success:
          anyOf:
            - type: number
            - type: "null"
          title: Average Agentic Workflow Success
        average_completeness_gpt:
          anyOf:
            - type: number
            - type: "null"
          title: Average Completeness Gpt
        average_factuality:
          anyOf:
            - type: number
            - type: "null"
          title: Average Factuality
        average_groundedness:
          anyOf:
            - type: number
            - type: "null"
          title: Average Groundedness
        average_input_sexist:
          anyOf:
            - type: number
            - type: "null"
          title: Average Input Sexist
        average_input_token_length:
          anyOf:
            - type: number
            - type: "null"
          title: Average Input Token Length
        average_input_toxicity:
          anyOf:
            - type: number
            - type: "null"
          title: Average Input Toxicity
        average_instruction_adherence:
          anyOf:
            - type: number
            - type: "null"
          title: Average Instruction Adherence
        average_latency:
          anyOf:
            - type: number
            - type: "null"
          title: Average Latency
        average_output_token_length:
          anyOf:
            - type: number
            - type: "null"
          title: Average Output Token Length
        average_prompt_perplexity:
          anyOf:
            - type: number
            - type: "null"
          title: Average Prompt Perplexity
        average_retriever_attribution:
          anyOf:
            - type: number
            - type: "null"
          title: Average Retriever Attribution
        average_retriever_utilization:
          anyOf:
            - type: number
            - type: "null"
          title: Average Retriever Utilization
        average_sexist:
          anyOf:
            - type: number
            - type: "null"
          title: Average Sexist
        average_tool_error_rate:
          anyOf:
            - type: number
            - type: "null"
          title: Average Tool Error Rate
        average_tool_selection_quality:
          anyOf:
            - type: number
            - type: "null"
          title: Average Tool Selection Quality
        average_total_token_length:
          anyOf:
            - type: number
            - type: "null"
          title: Average Total Token Length
        average_toxicity:
          anyOf:
            - type: number
            - type: "null"
          title: Average Toxicity
        end_bucket_time:
          format: date-time
          title: End Bucket Time
          type: string
        failures_count:
          anyOf:
            - type: integer
            - type: "null"
          default: 0
          title: Failures Count
        input_pii_values_count:
          anyOf:
            - type: string
            - type: "null"
          title: Input Pii Values Count
        input_tone_values_count:
          anyOf:
            - type: string
            - type: "null"
          title: Input Tone Values Count
        pii_values_count:
          anyOf:
            - type: string
            - type: "null"
          title: Pii Values Count
        prompt_injection_values_count:
          anyOf:
            - type: string
            - type: "null"
          title: Prompt Injection Values Count
        requests_count:
          anyOf:
            - type: integer
            - type: "null"
          default: 0
          title: Requests Count
        start_bucket_time:
          format: date-time
          title: Start Bucket Time
          type: string
        tone_values_count:
          anyOf:
            - type: string
            - type: "null"
          title: Tone Values Count
        total_cost:
          anyOf:
            - type: number
            - type: "null"
          default: 0
          title: Total Cost
      required:
        - start_bucket_time
        - end_bucket_time
      title: BucketedMetrics
      type: object
    BulkFeedbackRatingCreate:
      properties:
        explanation:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Explanation
        feedback_template_id:
          format: uuid4
          title: Feedback Template Id
          type: string
        operation_type:
          const: create
          default: create
          title: Operation Type
          type: string
        rating:
          discriminator:
            mapping:
              like_dislike: "#/components/schemas/LikeDislikeRating"
              score: "#/components/schemas/ScoreRating"
              star: "#/components/schemas/StarRating"
              tags: "#/components/schemas/TagsRating"
              text: "#/components/schemas/TextRating"
            propertyName: feedback_type
          oneOf:
            - $ref: "#/components/schemas/LikeDislikeRating"
            - $ref: "#/components/schemas/StarRating"
            - $ref: "#/components/schemas/ScoreRating"
            - $ref: "#/components/schemas/TagsRating"
            - $ref: "#/components/schemas/TextRating"
          title: Rating
      required:
        - rating
        - feedback_template_id
      title: BulkFeedbackRatingCreate
      type: object
    BulkFeedbackRatingDelete:
      properties:
        feedback_template_id:
          format: uuid4
          title: Feedback Template Id
          type: string
        operation_type:
          const: delete
          default: delete
          title: Operation Type
          type: string
      required:
        - feedback_template_id
      title: BulkFeedbackRatingDelete
      type: object
    BulkFeedbackRatingStatus:
      properties:
        index:
          title: Index
          type: integer
        message:
          anyOf:
            - type: string
            - type: "null"
          title: Message
        operation:
          $ref: "#/components/schemas/FeedbackRatingOperationType"
        success:
          title: Success
          type: boolean
      required:
        - index
        - operation
        - success
        - message
      title: BulkFeedbackRatingStatus
      type: object
    BulkFeedbackRequest:
      properties:
        operations:
          items:
            discriminator:
              mapping:
                create: "#/components/schemas/BulkFeedbackRatingCreate"
                delete: "#/components/schemas/BulkFeedbackRatingDelete"
              propertyName: operation_type
            oneOf:
              - $ref: "#/components/schemas/BulkFeedbackRatingCreate"
              - $ref: "#/components/schemas/BulkFeedbackRatingDelete"
          title: Operations
          type: array
        selector:
          discriminator:
            mapping:
              indexes: "#/components/schemas/IndexSelector"
            propertyName: selector_type
          oneOf:
            - $ref: "#/components/schemas/IndexSelector"
          title: Selector
      required:
        - operations
        - selector
      title: BulkFeedbackRequest
      type: object
    CBOClusterRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: CBOClusterRequest
      type: object
    CBOClusterResponse:
      properties:
        cbo_clusters:
          items:
            $ref: "#/components/schemas/CBORunCluster"
          title: Cbo Clusters
          type: array
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - cbo_clusters
      title: CBOClusterResponse
      type: object
    CBORunCluster:
      properties:
        id:
          title: Id
          type: integer
        labels:
          items:
            type: string
          title: Labels
          type: array
        num_samples:
          title: Num Samples
          type: integer
        score:
          title: Score
          type: number
      required:
        - id
        - labels
        - num_samples
        - score
      title: CBORunCluster
      type: object
    CartographCluster:
      description: Information about a Cartograph embedding cluster.
      properties:
        average_confidence:
          anyOf:
            - type: number
            - type: "null"
          title: Average Confidence
        average_dep:
          anyOf:
            - type: number
            - type: "null"
          title: Average Dep
        average_f1:
          anyOf:
            - type: number
            - type: "null"
          title: Average F1
        cluster_description:
          title: Cluster Description
          type: string
        cluster_id:
          title: Cluster Id
          type: integer
        cluster_size:
          title: Cluster Size
          type: integer
        cluster_summary:
          anyOf:
            - type: string
            - type: "null"
          title: Cluster Summary
        cluster_topic:
          anyOf:
            - type: string
            - type: "null"
          title: Cluster Topic
      required:
        - cluster_id
        - cluster_size
        - cluster_description
      title: CartographCluster
      type: object
    CartographClusterResponse:
      properties:
        cartograph_clusters:
          items:
            $ref: "#/components/schemas/CartographCluster"
          title: Cartograph Clusters
          type: array
      required:
        - cartograph_clusters
      title: CartographClusterResponse
      type: object
    CategoricalPromptFilterParam:
      properties:
        categories:
          items:
            type: string
          title: Categories
          type: array
        column:
          title: Column
          type: string
        filter_type:
          const: category
          title: Filter Type
          type: string
        operator:
          $ref: "#/components/schemas/CategoryFilterOperator"
          default: any
          description:
            Operator to use when checking if the value is in the categories.
            If None, we default to 'or'.
      required:
        - column
        - filter_type
        - categories
      title: CategoricalPromptFilterParam
      type: object
    CategoryFilterOperator:
      enum:
        - any
        - all
        - exact
        - none
      title: CategoryFilterOperator
      type: string
    ChainPollTemplate:
      description: "Template for a chainpoll metric prompt,

        containing all the info necessary to send a chainpoll prompt."
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of what the metric should do.
          title: Metric Description
        metric_few_shot_examples:
          description: Few-shot examples for the metric.
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          description: System prompt for the metric.
          title: Metric System Prompt
        template:
          description: Chainpoll prompt template.
          title: Template
          type: string
        value_field_name:
          default: rating
          description: Field name to look for in the chainpoll response, for the rating.
          title: Value Field Name
          type: string
      required:
        - template
      title: ChainPollTemplate
      type: object
    ChainRow:
      properties:
        chain_id:
          anyOf:
            - format: uuid
              type: string
            - type: "null"
          title: Chain Id
        chain_root_id:
          format: uuid
          title: Chain Root Id
          type: string
        creation_timestamp:
          title: Creation Timestamp
          type: integer
        finish_reason:
          default: ""
          title: Finish Reason
          type: string
        has_children:
          default: false
          title: Has Children
          type: boolean
        inputs:
          anyOf:
            - type: object
            - type: "null"
          title: Inputs
        latency:
          anyOf:
            - type: integer
            - type: "null"
          title: Latency
        node_id:
          format: uuid
          title: Node Id
          type: string
        node_input:
          default: ""
          title: Node Input
          type: string
        node_name:
          anyOf:
            - type: string
            - type: "null"
          title: Node Name
        node_output:
          default: ""
          title: Node Output
          type: string
        node_type:
          $ref: "#/components/schemas/NodeType"
        params:
          title: Params
          type: object
        prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Prompt
        query_input_tokens:
          default: 0
          title: Query Input Tokens
          type: integer
        query_output_tokens:
          default: 0
          title: Query Output Tokens
          type: integer
        query_total_tokens:
          default: 0
          title: Query Total Tokens
          type: integer
        response:
          anyOf:
            - type: string
            - type: "null"
          title: Response
        step:
          default: 0
          title: Step
          type: integer
        target:
          anyOf:
            - type: string
            - type: "null"
          title: Target
        tools:
          anyOf:
            - type: string
            - type: "null"
          title: Tools
      required:
        - node_id
        - node_type
        - chain_root_id
      title: ChainRow
      type: object
    ChainStep:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        parent:
          anyOf:
            - $ref: "#/components/schemas/StepWithChildren"
            - type: "null"
          description: Parent node of the current node. For internal use only.
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        steps:
          description: Steps in the workflow.
          items:
            discriminator:
              mapping:
                agent: "#/components/schemas/AgentStep"
                chain: "#/components/schemas/ChainStep"
                llm: "#/components/schemas/LlmStep"
                retriever: "#/components/schemas/RetrieverStep"
                tool: "#/components/schemas/ToolStep"
                workflow: "#/components/schemas/WorkflowStep"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowStep"
              - $ref: "#/components/schemas/ChainStep"
              - $ref: "#/components/schemas/LlmStep"
              - $ref: "#/components/schemas/RetrieverStep"
              - $ref: "#/components/schemas/ToolStep"
              - $ref: "#/components/schemas/AgentStep"
          title: Steps
          type: array
        type:
          const: chain
          default: chain
          description: Type of the step. By default, it is set to chain.
          title: Type
          type: string
      required:
        - input
      title: ChainStep
      type: object
    Changes:
      properties:
        breaking:
          items:
            type: string
          title: Breaking
          type: array
        features:
          items:
            type: string
          title: Features
          type: array
        fixes:
          items:
            type: string
          title: Fixes
          type: array
        miscellaneous:
          items:
            type: string
          title: Miscellaneous
          type: array
      title: Changes
      type: object
    ChunkAttributionUtilizationScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: chunk_attribution_utilization
          default: chunk_attribution_utilization
          title: Name
          type: string
        type:
          default: luna
          enum:
            - luna
            - plus
          title: Type
          type: string
      title: ChunkAttributionUtilizationScorer
      type: object
    ChunkAttributionUtilizationTemplate:
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of what the metric should do.
          title: Metric Description
        metric_few_shot_examples:
          description: Few-shot examples for the metric.
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          description: System prompt for the metric.
          title: Metric System Prompt
        template:
          default:
            "I asked someone to answer a question based on one or more documents.\
            \ You will tell me which of the documents their answer was sourced from,\
            \ and which specific sentences from the documents they used.\n\nHere are\
            \ the documents, with each document split up into sentences. Each sentence\
            \ is given a unique key, such as '0a' for the first sentence of Document\
            \ 0. You'll use these keys in your response to identify which sentences\
            \ were used.\n\n```\n{chunks}\n```\n\nThe question was:\n\n```\n{question}\n\
            ```\n\nTheir response was:\n\n```\n{response}\n```\n\nRespond with a JSON\
            \ object matching this schema:\n\n```\n{{\n  \"source_sentence_keys\"\
            : [string]\n}}\n```\n\nThe source_sentence_keys field is a list identifying\
            \ the sentences in the documents that were used to construct the answer.\
            \ Each entry MUST be a sentence key, such as '0a', that appears in the\
            \ document list above. Include the key of every sentence that was used\
            \ to construct the answer, even if it was not used in its entirety. Omit\
            \ keys for sentences that were not used, and could have been removed from\
            \ the document without affecting the answer.\n\nYou must respond with\
            \ a valid JSON string."
          title: Template
          type: string
        value_field_name:
          default: rating
          description: Field name to look for in the chainpoll response, for the rating.
          title: Value Field Name
          type: string
      title: ChunkAttributionUtilizationTemplate
      type: object
    Circle:
      properties:
        radius:
          title: Radius
          type: number
        x:
          title: X
          type: number
        y:
          title: Y
          type: number
      required:
        - x
        - y
        - radius
      title: Circle
      type: object
    CollaboratorRole:
      enum:
        - owner
        - editor
        - annotator
        - viewer
      title: CollaboratorRole
      type: string
    CollaboratorRoleInfo:
      properties:
        description:
          examples:
            - Can do anything with the resource.
          title: Description
          type: string
        display_name:
          examples:
            - Owner
          title: Display Name
          type: string
        name:
          $ref: "#/components/schemas/CollaboratorRole"
          examples:
            - owner
      required:
        - name
        - display_name
        - description
      title: CollaboratorRoleInfo
      type: object
    CollaboratorUpdate:
      properties:
        role:
          $ref: "#/components/schemas/CollaboratorRole"
      required:
        - role
      title: CollaboratorUpdate
      type: object
    ColumnCategory:
      enum:
        - standard
        - metric
        - user_metadata
      title: ColumnCategory
      type: string
    CommunityResponse:
      description:
        "See `rungalileo.schemas.content.insights.Community` for details
        on Communities.


        Before returning the results to the UI, we scale the continuous community
        score to

        an int for better interpretability for the user.


        0-0.03 = 1

        0.03-0.07 = 2

        0.07-0.15 = 3

        0.15-0.2=4

        0.2=5"
      properties:
        labels:
          items:
            type: string
          title: Labels
          type: array
        num_samples:
          title: Num Samples
          type: integer
        score:
          title: Score
          type: integer
      required:
        - score
        - labels
        - num_samples
      title: CommunityResponse
      type: object
    CompareRunsResponse:
      properties:
        project_id:
          format: uuid4
          title: Project Id
          type: string
        runs:
          items:
            $ref: "#/components/schemas/ProjectRunSummary"
          title: Runs
          type: array
        split:
          $ref: "#/components/schemas/Split"
      required:
        - project_id
        - split
        - runs
      title: CompareRunsResponse
      type: object
    CompletenessScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: completeness
          default: completeness
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        type:
          default: luna
          enum:
            - luna
            - plus
          title: Type
          type: string
      title: CompletenessScorer
      type: object
    CompletenessTemplate:
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of what the metric should do.
          title: Metric Description
        metric_few_shot_examples:
          description: Few-shot examples for the metric.
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          anyOf:
            - type: string
            - type: "null"
          description: System prompt for the metric.
          title: Metric System Prompt
        template:
          default:
            "I asked someone to answer a question based on one or more documents.\
            \ On a scale of 0 to 1, tell me how well their response covered the relevant\
            \ information from the documents.\n\nHere is what I said to them, as a\
            \ JSON string:\n\n```\n{query_json}\n```\n\nHere is what they told me,\
            \ as a JSON string:\n\n```\n{response_json}\n```\n\nRespond in the following\
            \ JSON format:\n\n```\n{{\n    \"explanation\": string,\n    \"completeness\"\
            : number\n}}\n```\n\n\"explanation\": A string with your step-by-step\
            \ reasoning process. List out each piece of information covered in the\
            \ documents. For each one, explain why it was or was not relevant to the\
            \ question, and how well the response covered it. Do *not* give an overall\
            \ assessment of the response here, just think step by step about each\
            \ piece of information, one at a time. Present your work in a document-by-document\
            \ format, considering each document separately, ensure the value is a\
            \ valid string.\n\n\"completeness\": A floating-point number rating the\
            \ Completeness of the response on a scale of 0 to 1. This number should\
            \ equal the amount of relevant information that was comprehensively covered\
            \ in the response, divided by the total amount of relevant information\
            \ in the documents.\n\nYou must respond with a valid JSON string."
          title: Template
          type: string
        value_field_name:
          default: completeness
          title: Value Field Name
          type: string
      title: CompletenessTemplate
      type: object
    CompositeProjectSettings:
      properties:
        alerts_configuration:
          anyOf:
            - $ref: "#/components/schemas/AlertsConfiguration"
            - type: "null"
        customized_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/CustomizedScorer"
              type: array
            - type: "null"
          title: Customized Scorers Configuration
        generated_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/GeneratedScorerConfig"
              type: array
            - type: "null"
          title: Generated Scorers Configuration
        metric_weights_configuration:
          anyOf:
            - additionalProperties:
                $ref: "#/components/schemas/MetricWeight"
              type: object
            - type: "null"
          title: Metric Weights Configuration
        registered_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/RegisteredScorer"
              type: array
            - type: "null"
          title: Registered Scorers Configuration
        scorers_config:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfig"
            - type: "null"
        scorers_configuration:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfiguration"
            - type: "null"
      title: CompositeProjectSettings
      type: object
    ContentRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: ContentRequest
      type: object
    ContextAdherenceScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: context_adherence
          default: context_adherence
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        type:
          default: luna
          enum:
            - luna
            - plus
          title: Type
          type: string
      title: ContextAdherenceScorer
      type: object
    ContextRelevanceScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: context_relevance
          default: context_relevance
          title: Name
          type: string
      title: ContextRelevanceScorer
      type: object
    CorrectnessScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: correctness
          default: correctness
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        type:
          const: plus
          default: plus
          title: Type
          type: string
      title: CorrectnessScorer
      type: object
    CreateAlertConfigurationRequest:
      properties:
        conditions:
          items:
            $ref: "#/components/schemas/AlertCondition"
          title: Conditions
          type: array
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        interval:
          title: Interval
          type: integer
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        schema_version:
          $ref: "#/components/schemas/AlertMonitorType"
          default: multi_condition/object/1
      required:
        - conditions
        - interval
      title: CreateAlertConfigurationRequest
      type: object
    CreateApiKeyRequest:
      properties:
        description:
          title: Description
          type: string
        expires_at:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          description: Expiry date for the API key
          title: Expires At
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        project_role:
          anyOf:
            - $ref: "#/components/schemas/CollaboratorRole"
            - type: "null"
      required:
        - description
      title: CreateApiKeyRequest
      type: object
    CreateApiKeyResponse:
      properties:
        api_key:
          title: Api Key
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        description:
          title: Description
          type: string
        expires_at:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          description: Expiry date for the API key
          title: Expires At
        id:
          format: uuid4
          title: Id
          type: string
        last_used:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Last Used
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        project_role:
          anyOf:
            - $ref: "#/components/schemas/CollaboratorRole"
            - type: "null"
        truncated:
          title: Truncated
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_at
        - updated_at
        - description
        - created_by
        - truncated
        - api_key
      title: CreateApiKeyResponse
      type: object
    CreateComputeScoreRequest:
      properties:
        recompute_settings:
          discriminator:
            mapping:
              observe_filters: "#/components/schemas/promptgalileo__schemas__metric_critique__RecomputeSettingsObserve"
              project: "#/components/schemas/RecomputeSettingsProject"
              runs: "#/components/schemas/RecomputeSettingsRuns"
            propertyName: mode
          oneOf:
            - $ref: "#/components/schemas/RecomputeSettingsRuns"
            - $ref: "#/components/schemas/RecomputeSettingsProject"
            - $ref: "#/components/schemas/promptgalileo__schemas__metric_critique__RecomputeSettingsObserve"
          title: Recompute Settings
        scorers_config:
          $ref: "#/components/schemas/ScorersConfig"
      required:
        - scorers_config
        - recompute_settings
      title: CreateComputeScoreRequest
      type: object
    CreateGeneratedScorerRequest:
      properties:
        chain_poll_template:
          $ref: "#/components/schemas/ChainPollTemplate"
        instructions:
          title: Instructions
          type: string
        name:
          title: Name
          type: string
        scoreable_node_types:
          anyOf:
            - items:
                $ref: "#/components/schemas/NodeType"
              type: array
            - type: "null"
          title: Scoreable Node Types
        scorer_configuration:
          anyOf:
            - $ref: "#/components/schemas/GeneratedScorerConfiguration"
            - type: "null"
      required:
        - name
        - instructions
        - chain_poll_template
      title: CreateGeneratedScorerRequest
      type: object
    CreateJobRequest:
      properties:
        dataset_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Dataset Id
        dataset_version_index:
          anyOf:
            - type: integer
            - type: "null"
          title: Dataset Version Index
        epoch:
          default: 0
          title: Epoch
          type: integer
        feature_names:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Feature Names
        job_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Job Id
        job_name:
          default: default
          title: Job Name
          type: string
        labels:
          anyOf:
            - items:
                items:
                  type: string
                type: array
              type: array
            - items:
                type: string
              type: array
          title: Labels
        metric_critique_configuration:
          anyOf:
            - $ref: "#/components/schemas/MetricCritiqueJobConfiguration"
            - type: "null"
        migration_name:
          anyOf:
            - type: string
            - type: "null"
          title: Migration Name
        monitor_batch_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Monitor Batch Id
        ner_labels:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Ner Labels
        non_inference_logged:
          default: false
          title: Non Inference Logged
          type: boolean
        process_existing_inference_runs:
          default: false
          title: Process Existing Inference Runs
          type: boolean
        project_id:
          format: uuid4
          title: Project Id
          type: string
        prompt_customized_scorers_configuration:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    _customized_agentic_workflow_success: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                    _customized_chunk_attribution_utilization_gpt: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                    _customized_completeness_gpt: "#/components/schemas/CustomizedCompletenessGPTScorer"
                    _customized_factuality: "#/components/schemas/CustomizedFactualityGPTScorer"
                    _customized_ground_truth_adherence: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                    _customized_groundedness: "#/components/schemas/CustomizedGroundednessGPTScorer"
                    _customized_instruction_adherence: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                    _customized_tool_error_rate: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
                    _customized_tool_selection_quality: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  propertyName: scorer_name
                oneOf:
                  - $ref: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                  - $ref: "#/components/schemas/CustomizedCompletenessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedFactualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundednessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
              type: array
            - type: "null"
          title: Prompt Customized Scorers Configuration
        prompt_dataset_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Prompt Dataset Id
        prompt_generated_scorers_configuration:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Prompt Generated Scorers Configuration
        prompt_optimization_configuration:
          anyOf:
            - $ref: "#/components/schemas/PromptOptimizationConfiguration"
            - type: "null"
        prompt_registered_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/RegisteredScorer"
              type: array
            - type: "null"
          title: Prompt Registered Scorers Configuration
        prompt_scorer_settings:
          anyOf:
            - $ref: "#/components/schemas/BaseScorer"
            - type: "null"
        prompt_scorers_configuration:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfiguration"
            - type: "null"
        prompt_settings:
          anyOf:
            - $ref: "#/components/schemas/PromptRunSettings"
            - type: "null"
        prompt_template_version_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Prompt Template Version Id
        protect_scorer_payload:
          anyOf:
            - format: binary
              type: string
            - type: "null"
          title: Protect Scorer Payload
        protect_trace_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Protect Trace Id
        run_id:
          format: uuid4
          title: Run Id
          type: string
        scorers:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    agentic_workflow_success: "#/components/schemas/AgenticWorkflowSuccessScorer"
                    bleu: "#/components/schemas/BleuScorer"
                    chunk_attribution_utilization: "#/components/schemas/ChunkAttributionUtilizationScorer"
                    completeness: "#/components/schemas/CompletenessScorer"
                    context_adherence: "#/components/schemas/ContextAdherenceScorer"
                    context_relevance: "#/components/schemas/ContextRelevanceScorer"
                    correctness: "#/components/schemas/CorrectnessScorer"
                    ground_truth_adherence: "#/components/schemas/GroundTruthAdherenceScorer"
                    input_pii: "#/components/schemas/InputPIIScorer"
                    input_sexist: "#/components/schemas/InputSexistScorer"
                    input_tone: "#/components/schemas/InputToneScorer"
                    input_toxicity: "#/components/schemas/InputToxicityScorer"
                    instruction_adherence: "#/components/schemas/InstructionAdherenceScorer"
                    output_pii: "#/components/schemas/OutputPIIScorer"
                    output_sexist: "#/components/schemas/OutputSexistScorer"
                    output_tone: "#/components/schemas/OutputToneScorer"
                    output_toxicity: "#/components/schemas/OutputToxicityScorer"
                    prompt_injection: "#/components/schemas/PromptInjectionScorer"
                    prompt_perplexity: "#/components/schemas/PromptPerplexityScorer"
                    rouge: "#/components/schemas/RougeScorer"
                    tool_error_rate: "#/components/schemas/ToolErrorRateScorer"
                    tool_selection_quality: "#/components/schemas/ToolSelectionQualityScorer"
                    uncertainty: "#/components/schemas/UncertaintyScorer"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/AgenticWorkflowSuccessScorer"
                  - $ref: "#/components/schemas/BleuScorer"
                  - $ref: "#/components/schemas/ChunkAttributionUtilizationScorer"
                  - $ref: "#/components/schemas/CompletenessScorer"
                  - $ref: "#/components/schemas/ContextAdherenceScorer"
                  - $ref: "#/components/schemas/ContextRelevanceScorer"
                  - $ref: "#/components/schemas/CorrectnessScorer"
                  - $ref: "#/components/schemas/GroundTruthAdherenceScorer"
                  - $ref: "#/components/schemas/InputPIIScorer"
                  - $ref: "#/components/schemas/InputSexistScorer"
                  - $ref: "#/components/schemas/InputToneScorer"
                  - $ref: "#/components/schemas/InputToxicityScorer"
                  - $ref: "#/components/schemas/InstructionAdherenceScorer"
                  - $ref: "#/components/schemas/OutputPIIScorer"
                  - $ref: "#/components/schemas/OutputSexistScorer"
                  - $ref: "#/components/schemas/OutputToneScorer"
                  - $ref: "#/components/schemas/OutputToxicityScorer"
                  - $ref: "#/components/schemas/PromptInjectionScorer"
                  - $ref: "#/components/schemas/PromptPerplexityScorer"
                  - $ref: "#/components/schemas/RougeScorer"
                  - $ref: "#/components/schemas/ToolErrorRateScorer"
                  - $ref: "#/components/schemas/ToolSelectionQualityScorer"
                  - $ref: "#/components/schemas/UncertaintyScorer"
              type: array
            - type: "null"
          title: Scorers
        should_retry:
          default: true
          title: Should Retry
          type: boolean
        task_type:
          anyOf:
            - $ref: "#/components/schemas/TaskType"
            - type: "null"
        tasks:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Tasks
        user_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: User Id
        xray:
          default: true
          title: Xray
          type: boolean
      required:
        - project_id
        - run_id
      title: CreateJobRequest
      type: object
    CreateJobResponse:
      properties:
        dataset_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Dataset Id
        dataset_version_index:
          anyOf:
            - type: integer
            - type: "null"
          title: Dataset Version Index
        epoch:
          default: 0
          title: Epoch
          type: integer
        feature_names:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Feature Names
        job_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Job Id
        job_name:
          default: default
          title: Job Name
          type: string
        labels:
          anyOf:
            - items:
                items:
                  type: string
                type: array
              type: array
            - items:
                type: string
              type: array
          title: Labels
        link:
          title: Link
          type: string
        message:
          title: Message
          type: string
        metric_critique_configuration:
          anyOf:
            - $ref: "#/components/schemas/MetricCritiqueJobConfiguration"
            - type: "null"
        migration_name:
          anyOf:
            - type: string
            - type: "null"
          title: Migration Name
        monitor_batch_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Monitor Batch Id
        ner_labels:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Ner Labels
        non_inference_logged:
          default: false
          title: Non Inference Logged
          type: boolean
        process_existing_inference_runs:
          default: false
          title: Process Existing Inference Runs
          type: boolean
        project_id:
          format: uuid4
          title: Project Id
          type: string
        prompt_customized_scorers_configuration:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    _customized_agentic_workflow_success: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                    _customized_chunk_attribution_utilization_gpt: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                    _customized_completeness_gpt: "#/components/schemas/CustomizedCompletenessGPTScorer"
                    _customized_factuality: "#/components/schemas/CustomizedFactualityGPTScorer"
                    _customized_ground_truth_adherence: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                    _customized_groundedness: "#/components/schemas/CustomizedGroundednessGPTScorer"
                    _customized_instruction_adherence: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                    _customized_tool_error_rate: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
                    _customized_tool_selection_quality: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  propertyName: scorer_name
                oneOf:
                  - $ref: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                  - $ref: "#/components/schemas/CustomizedCompletenessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedFactualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundednessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
              type: array
            - type: "null"
          title: Prompt Customized Scorers Configuration
        prompt_dataset_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Prompt Dataset Id
        prompt_generated_scorers_configuration:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Prompt Generated Scorers Configuration
        prompt_optimization_configuration:
          anyOf:
            - $ref: "#/components/schemas/PromptOptimizationConfiguration"
            - type: "null"
        prompt_registered_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/RegisteredScorer"
              type: array
            - type: "null"
          title: Prompt Registered Scorers Configuration
        prompt_scorer_settings:
          anyOf:
            - $ref: "#/components/schemas/BaseScorer"
            - type: "null"
        prompt_scorers_configuration:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfiguration"
            - type: "null"
        prompt_settings:
          anyOf:
            - $ref: "#/components/schemas/PromptRunSettings"
            - type: "null"
        prompt_template_version_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Prompt Template Version Id
        protect_scorer_payload:
          anyOf:
            - format: binary
              type: string
            - type: "null"
          title: Protect Scorer Payload
        protect_trace_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Protect Trace Id
        run_id:
          format: uuid4
          title: Run Id
          type: string
        scorers:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    agentic_workflow_success: "#/components/schemas/AgenticWorkflowSuccessScorer"
                    bleu: "#/components/schemas/BleuScorer"
                    chunk_attribution_utilization: "#/components/schemas/ChunkAttributionUtilizationScorer"
                    completeness: "#/components/schemas/CompletenessScorer"
                    context_adherence: "#/components/schemas/ContextAdherenceScorer"
                    context_relevance: "#/components/schemas/ContextRelevanceScorer"
                    correctness: "#/components/schemas/CorrectnessScorer"
                    ground_truth_adherence: "#/components/schemas/GroundTruthAdherenceScorer"
                    input_pii: "#/components/schemas/InputPIIScorer"
                    input_sexist: "#/components/schemas/InputSexistScorer"
                    input_tone: "#/components/schemas/InputToneScorer"
                    input_toxicity: "#/components/schemas/InputToxicityScorer"
                    instruction_adherence: "#/components/schemas/InstructionAdherenceScorer"
                    output_pii: "#/components/schemas/OutputPIIScorer"
                    output_sexist: "#/components/schemas/OutputSexistScorer"
                    output_tone: "#/components/schemas/OutputToneScorer"
                    output_toxicity: "#/components/schemas/OutputToxicityScorer"
                    prompt_injection: "#/components/schemas/PromptInjectionScorer"
                    prompt_perplexity: "#/components/schemas/PromptPerplexityScorer"
                    rouge: "#/components/schemas/RougeScorer"
                    tool_error_rate: "#/components/schemas/ToolErrorRateScorer"
                    tool_selection_quality: "#/components/schemas/ToolSelectionQualityScorer"
                    uncertainty: "#/components/schemas/UncertaintyScorer"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/AgenticWorkflowSuccessScorer"
                  - $ref: "#/components/schemas/BleuScorer"
                  - $ref: "#/components/schemas/ChunkAttributionUtilizationScorer"
                  - $ref: "#/components/schemas/CompletenessScorer"
                  - $ref: "#/components/schemas/ContextAdherenceScorer"
                  - $ref: "#/components/schemas/ContextRelevanceScorer"
                  - $ref: "#/components/schemas/CorrectnessScorer"
                  - $ref: "#/components/schemas/GroundTruthAdherenceScorer"
                  - $ref: "#/components/schemas/InputPIIScorer"
                  - $ref: "#/components/schemas/InputSexistScorer"
                  - $ref: "#/components/schemas/InputToneScorer"
                  - $ref: "#/components/schemas/InputToxicityScorer"
                  - $ref: "#/components/schemas/InstructionAdherenceScorer"
                  - $ref: "#/components/schemas/OutputPIIScorer"
                  - $ref: "#/components/schemas/OutputSexistScorer"
                  - $ref: "#/components/schemas/OutputToneScorer"
                  - $ref: "#/components/schemas/OutputToxicityScorer"
                  - $ref: "#/components/schemas/PromptInjectionScorer"
                  - $ref: "#/components/schemas/PromptPerplexityScorer"
                  - $ref: "#/components/schemas/RougeScorer"
                  - $ref: "#/components/schemas/ToolErrorRateScorer"
                  - $ref: "#/components/schemas/ToolSelectionQualityScorer"
                  - $ref: "#/components/schemas/UncertaintyScorer"
              type: array
            - type: "null"
          title: Scorers
        should_retry:
          default: true
          title: Should Retry
          type: boolean
        task_type:
          anyOf:
            - $ref: "#/components/schemas/TaskType"
            - type: "null"
        tasks:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Tasks
        user_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: User Id
        xray:
          default: true
          title: Xray
          type: boolean
      required:
        - project_id
        - run_id
        - message
        - link
      title: CreateJobResponse
      type: object
    CreateMetricCritiqueRequest:
      properties:
        critique:
          title: Critique
          type: string
        id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description:
            The id of the metric critique if it's being updated. None if
            it's a new critique.
          title: Id
        intended_value:
          description:
            Set to opposite of actual value for new critiques, and set
            as same as existing critique intended value for updates.
          title: Intended Value
          type: boolean
        row_id:
          anyOf:
            - format: uuid
              type: string
            - type: integer
          title: Row Id
        run_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Run Id
      required:
        - run_id
        - row_id
        - critique
        - intended_value
      title: CreateMetricCritiqueRequest
      type: object
    CreateMetricCritiquesRequest:
      properties:
        critiques:
          items:
            $ref: "#/components/schemas/CreateMetricCritiqueRequest"
          minItems: 1
          title: Critiques
          type: array
        metric:
          title: Metric
          type: string
        recompute_settings:
          anyOf:
            - discriminator:
                mapping:
                  observe_filters: "#/components/schemas/api__schemas__metric_critique__RecomputeSettingsObserve"
                  project: "#/components/schemas/RecomputeSettingsProject"
                  runs: "#/components/schemas/RecomputeSettingsRuns"
                propertyName: mode
              oneOf:
                - $ref: "#/components/schemas/RecomputeSettingsRuns"
                - $ref: "#/components/schemas/RecomputeSettingsProject"
                - $ref: "#/components/schemas/api__schemas__metric_critique__RecomputeSettingsObserve"
            - type: "null"
          title: Recompute Settings
      required:
        - critiques
        - metric
      title: CreateMetricCritiquesRequest
      type: object
    CreatePromptTemplateWithVersionRequestBody:
      description: "Body to create a new prompt template with version.


        This is only used for parsing the body from the request."
      properties:
        name:
          minLength: 1
          title: Name
          type: string
        template:
          anyOf:
            - minLength: 1
              type: string
            - $ref: "#/components/schemas/Messages"
          title: Template
        version:
          anyOf:
            - type: integer
            - type: "null"
          title: Version
      required:
        - template
        - name
      title: CreatePromptTemplateWithVersionRequestBody
      type: object
    CreateRunResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        dataset_hash:
          anyOf:
            - type: string
            - type: "null"
          title: Dataset Hash
        id:
          format: uuid4
          title: Id
          type: string
        last_updated_by:
          format: uuid4
          title: Last Updated By
          type: string
        name:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Name
        num_samples:
          title: Num Samples
          type: integer
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        run_tags:
          items:
            $ref: "#/components/schemas/RunTagDB"
          title: Run Tags
          type: array
        task_type:
          anyOf:
            - $ref: "#/components/schemas/TaskType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
        winner:
          title: Winner
          type: boolean
      required:
        - created_by
        - num_samples
        - winner
        - id
        - created_at
        - updated_at
        - last_updated_by
      title: CreateRunResponse
      type: object
    CreateSignupLinkResponse:
      properties:
        signup_url:
          title: Signup Url
          type: string
      required:
        - signup_url
      title: CreateSignupLinkResponse
      type: object
    CreateUpdateRegisteredScorerResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        data_type:
          anyOf:
            - $ref: "#/components/schemas/DataTypeOptions"
            - type: "null"
        id:
          format: uuid4
          title: Id
          type: string
        name:
          title: Name
          type: string
        score_type:
          anyOf:
            - type: string
            - type: "null"
          title: Score Type
        scoreable_node_types:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Scoreable Node Types
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - name
        - created_by
        - id
        - created_at
        - updated_at
        - score_type
        - data_type
        - scoreable_node_types
      title: CreateUpdateRegisteredScorerResponse
      type: object
    CreateUserResponse:
      properties:
        auth_method:
          $ref: "#/components/schemas/AuthMethod"
          default: email
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          format: email
          title: Email
          type: string
        email_is_verified:
          anyOf:
            - type: boolean
            - type: "null"
          title: Email Is Verified
        first_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: First Name
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Last Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        role:
          $ref: "#/components/schemas/UserRole"
          default: read_only
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - email
        - created_at
        - updated_at
      title: CreateUserResponse
      type: object
    CurrentUserDB:
      properties:
        auth_method:
          $ref: "#/components/schemas/AuthMethod"
          default: email
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          format: email
          title: Email
          type: string
        email_is_verified:
          anyOf:
            - type: boolean
            - type: "null"
          title: Email Is Verified
        first_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: First Name
        generic_permissions:
          default: []
          items:
            $ref: "#/components/schemas/GenericPermission"
          title: Generic Permissions
          type: array
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Last Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        role:
          $ref: "#/components/schemas/UserRole"
          default: read_only
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - email
        - created_at
        - updated_at
      title: CurrentUserDB
      type: object
    CustomizedAgenticWorkflowSuccessGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_agentic_workflow_success
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/AgenticWorkflowSuccessTemplate"
          default:
            explanation_field_name: explanation
            metric_description:
              "I have a multi-turn chatbot application where the
              assistant is an agent that has access to tools. An assistant workflow
              can involves possibly multiple tool selections steps, tool calls steps,
              and finally a reply to the user. I want a metric that assesses whether
              each assistant's workflow was thoughtfully planned and ended up helping
              answer the queries.

              "
            metric_few_shot_examples:
              - evaluating_response:
                  "{\n    \"explanation\": \"The user requested assistance\
                  \ in finding a laptop with a maximum price of $1000. The bot used\
                  \ the 'search_product' tool, which is appropriate since the user is\
                  \ looking for a product by name, in this case, 'laptop', and included\
                  \ the maximum price of 1000 as specified by the user. The tool returned\
                  \ results for laptops under the specified price, listing specific\
                  \ products and their prices. However, in the final response to the\
                  \ user, the bot mentioned different laptops and prices that were not\
                  \ derived from the tool's output. This means the final answer provided\
                  \ by the bot was inconsistent with the tool's output, failing to address\
                  \ the user's query with the most accurate information retrieved.\"\
                  ,\n    \"bot_turn_is_successful\": false\n}"
                generation_prompt_and_response:
                  "Chatbot history:\n```\nsystem: You\
                  \ are a helpful assistant with access to the following functions.\
                  \ Use them if required -\nuser: I am looking for a laptop. Can you\
                  \ help me find one?\nassistant: Of course, I can help you with that.\
                  \ Do you have a maximum price in mind? <|endoftext|>\nuser: Yes, I\
                  \ don't want to spend more than $1000.\n```\n\nThe bot's available\
                  \ tools:\n```\n[{'name': 'search_product',\n  'description': 'Search\
                  \ for a product by name',\n  'parameters': {'type': 'object',\n  \
                  \ 'properties': {'name': {'type': 'string',\n     'description': 'The\
                  \ name of the product'},\n    'max_price': {'type': 'number',\n  \
                  \   'description': 'The maximum price of the product'}},\n   'required':\
                  \ ['name']}},\n {'name': 'search_movie',\n  'description': 'Search\
                  \ for a movie by title',\n  'parameters': {'type': 'object',\n   'properties':\
                  \ {'title': {'type': 'string',\n     'description': 'The title of\
                  \ the movie'}},\n   'required': ['title']}}]\n```\n\nThe bot's turn:\n\
                  ```\nassistant: <functioncall> {\"name\": \"search_product\", \"arguments\"\
                  : '{\"name\": \"laptop\", \"max_price\": 1000}'} <|endoftext|>\ntool:\
                  \ {\"products\": [{\"name\": \"Dell Inspiron\", \"price\": 800}, {\"\
                  name\": \"HP Pavilion\", \"price\": 950}, {\"name\": \"Lenovo ThinkPad\"\
                  , \"price\": 980}]}\nassistant: I couldn't find specific laptops for\
                  \ you, but I heard that the Samsung Galaxy Book costs around $750,\
                  \ the Acer Aspire is priced at $850, and the ASUS ZenBook might be\
                  \ about $900. Do these sound interesting to you?\n\n```"
            metric_system_prompt:
              "You will receive the chat history from a chatbot\
              \ application. At the end of the conversation, it will be the bot\u2019\
              s turn to act. The bot's turn may involve several steps such as internal\
              \ reflections and planning, selecting tools, calling tools, and always\
              \ ends with the bot replying to the user. \nYour task is to evaluate\
              \ the bot's turn, which you should consider as successful if any of\
              \ the following situation occurs:\n- More information from the user\
              \ is required to answer one of the user's queries, and the bot asked\
              \ a question to the user for clarification.\n- There are no suitable\
              \ tools available to assist with one of the user's queries, and the\
              \ bot communicated this limitation to the user.\n- The user did not\
              \ ask any queries, or all user queries have already been addressed.\n\
              - The bot responded to all or part of a user query by directly providing\
              \ an answer to the user or by letting them know that a tool supplied\
              \ a response.\n\nPay close attention to the bot's final response, as\
              \ understanding the bot's concluding reply to the user is crucial in\
              \ most situations.\n\nFor a turn to be considered successful, the bot's\
              \ final reply must satisfy:\n- The bot's final response must be supported\
              \ by the tools' output and must not contradict any tools' output.\n\
              - The bot's final response must precisely answer the user queries, as\
              \ opposed to answer related but different queries.\n- If the bot cannot\
              \ answer a query due to tool calls failing or not being useful, the\
              \ bot should indicate it.\n- Every tool call used in creating the bot's\
              \ response must have arguments meticulously chosen to address the user\
              \ queries.\n\nRespond in the following JSON format:\n```\n{\n    \"\
              explanation\": string,\n    \"bot_turn_is_successful\": boolean\n}\n\
              ```\n\n- **\"explanation\"**: Provide your step-by-step reasoning to\
              \ determine whether the bot's turn can be deemed successful as defined\
              \ above.\n\n- **\"bot_turn_is_successful\"**: Respond `true` if the\
              \ bot\u2019s turn was successful, and respond `false` otherwise.\n\n\
              You must respond with a valid JSON object; don't forget to escape special\
              \ characters."
            template: "Chatbot history:

              ```

              {query}

              ```


              The bot's available tools:

              ```

              {tools}

              ```


              The bot's turn:

              ```

              {response}

              ```"
            value_field_name: bot_turn_is_successful
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: agentic_workflow_success
          default: agentic_workflow_success
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_agentic_workflow_success
          default: _customized_agentic_workflow_success
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedAgenticWorkflowSuccessGPTScorer
      type: object
    CustomizedChunkAttributionUtilizationGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_chunk_attribution
            - average_chunk_utilization
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/ChunkAttributionUtilizationTemplate"
          default:
            explanation_field_name: explanation
            metric_few_shot_examples: []
            template:
              "I asked someone to answer a question based on one or more documents.\
              \ You will tell me which of the documents their answer was sourced from,\
              \ and which specific sentences from the documents they used.\n\nHere\
              \ are the documents, with each document split up into sentences. Each\
              \ sentence is given a unique key, such as '0a' for the first sentence\
              \ of Document 0. You'll use these keys in your response to identify\
              \ which sentences were used.\n\n```\n{chunks}\n```\n\nThe question was:\n\
              \n```\n{question}\n```\n\nTheir response was:\n\n```\n{response}\n```\n\
              \nRespond with a JSON object matching this schema:\n\n```\n{{\n  \"\
              source_sentence_keys\": [string]\n}}\n```\n\nThe source_sentence_keys\
              \ field is a list identifying the sentences in the documents that were\
              \ used to construct the answer. Each entry MUST be a sentence key, such\
              \ as '0a', that appears in the document list above. Include the key\
              \ of every sentence that was used to construct the answer, even if it\
              \ was not used in its entirety. Omit keys for sentences that were not\
              \ used, and could have been removed from the document without affecting\
              \ the answer.\n\nYou must respond with a valid JSON string."
            value_field_name: rating
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: chunk_attribution_utilization
          default: chunk_attribution_utilization
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_chunk_attribution_utilization_gpt
          default: _customized_chunk_attribution_utilization_gpt
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedChunkAttributionUtilizationGPTScorer
      type: object
    CustomizedCompletenessGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_completeness_gpt
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/CompletenessTemplate"
          default:
            explanation_field_name: explanation
            metric_few_shot_examples: []
            template:
              "I asked someone to answer a question based on one or more documents.\
              \ On a scale of 0 to 1, tell me how well their response covered the\
              \ relevant information from the documents.\n\nHere is what I said to\
              \ them, as a JSON string:\n\n```\n{query_json}\n```\n\nHere is what\
              \ they told me, as a JSON string:\n\n```\n{response_json}\n```\n\nRespond\
              \ in the following JSON format:\n\n```\n{{\n    \"explanation\": string,\n\
              \    \"completeness\": number\n}}\n```\n\n\"explanation\": A string\
              \ with your step-by-step reasoning process. List out each piece of information\
              \ covered in the documents. For each one, explain why it was or was\
              \ not relevant to the question, and how well the response covered it.\
              \ Do *not* give an overall assessment of the response here, just think\
              \ step by step about each piece of information, one at a time. Present\
              \ your work in a document-by-document format, considering each document\
              \ separately, ensure the value is a valid string.\n\n\"completeness\"\
              : A floating-point number rating the Completeness of the response on\
              \ a scale of 0 to 1. This number should equal the amount of relevant\
              \ information that was comprehensively covered in the response, divided\
              \ by the total amount of relevant information in the documents.\n\n\
              You must respond with a valid JSON string."
            value_field_name: completeness
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: completeness
          default: completeness
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_completeness_gpt
          default: _customized_completeness_gpt
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedCompletenessGPTScorer
      type: object
    CustomizedFactualityGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_factuality
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/FactualityTemplate"
          default:
            explanation_field_name: explanation
            metric_few_shot_examples:
              - evaluating_response:
                  "{\n    \"explanation\": \"The response makes several\
                  \ claims about the meaning of \\\"en passant\\\" in chess, then provides\
                  \ an illustrative example. Let's evaluate the claims first, then the\
                  \ example.\\n\\n# Claims\\n\\n1. The response claims that 'en passant'\
                  \ is a special rule in chess that allows a pawn to capture an enemy\
                  \ pawn that has moved two squares forward from its initial position,\
                  \ as if it had only moved one square forward. This claim is factually\
                  \ correct, as 'en passant' indeed allows for such a capture under\
                  \ specified conditions.\\n\\n2. The response also claims that this\
                  \ capture can only be done on the ensuing move and only if the capturing\
                  \ pawn was on its fifth rank at the time. This is also factually correct,\
                  \ as one of the requirements for the 'en passant' capture is that\
                  \ the capturing pawn must be on the fifth rank when the opponent's\
                  \ pawn moves two squares forward.\\n\\n# Illustrative Example\\n\\\
                  nFor the purposes of this metric, we'll say that a chess example like\
                  \ this one is \\\"correct\\\" if\\n\\n- All the moves are valid according\
                  \ to the rules of chess\\n- The example demonstrates what it is intended\
                  \ to demonstrate (in this case, the en passant rule)\\n\\nTo check\
                  \ these conditions, let's waslk through the example one move at a\
                  \ time, with a clear description of the board state after each move.\\\
                  n\\n### Initial Position\\nThe game starts with the standard initial\
                  \ setup of the chessboard.\\n\\n### Move 1\\n**1. e4 e5**\\n\\n- **White\
                  \ moves pawn from e2 to e4.**\\n  This opens lines for the bishop\
                  \ and queen and controls the center.\\n- **Black moves pawn from e7\
                  \ to e5.**\\n  This mirrors White's move, also controlling the center.\\\
                  n\\n**Board State:**\\n```\\nr n b q k b n r\\np p p     p p p\\n\\\
                  n        P\\n        p\\n\\nP P P     P P P\\nR N B Q K B N R\\n```\\\
                  n\\n### Move 2\\n**2. d4 d5**\\n\\n- **White moves pawn from d2 to\
                  \ d4.**\\n  Now, White controls more central space and threatens the\
                  \ pawn on e5.\\n- **Black moves pawn from d7 to d5.**\\n  Black counters\
                  \ by challenging the center with another pawn.\\n\\n**Board State:**\\\
                  n```\\nr n b q k b n r\\np p   p   p p p\\n\\n        P\\n  p P p\
                  \ P\\n\\nP   P     P P P\\nR N B Q K B N R\\n```\\n\\n### Move 3\\\
                  n**3. exd5 exd4**\\n\\n- **White captures the pawn on d5 with the\
                  \ pawn from e4 (exd5).**\\n  Now White has a pawn on d5.\\n- **Black\
                  \ incorrectly moves to exd4.**\\n  According to the rules of chess,\
                  \ this is an illegal move because the pawn on e5 cannot capture a\
                  \ pawn on d4 directly. The pawn on d4 does not exist; the move should\
                  \ capture diagonally if there is a piece or pawn on d4.\\n\\nSince\
                  \ there is an error in Move 3, the illustrative example is not factually\
                  \ correct according to the criteria listed above. Therefore, the example\
                  \ as a whole is not entirely factually correct.\",\n    \"was_factual\"\
                  : false\n}"
                generation_prompt_and_response: 'The prompt was:


                  ```

                  I have heard people talking about the chess move "en passant", but
                  I don''t know what it is and how it works. Could you explain it to
                  me?

                  ```


                  The response was:


                  ```

                  Certainly! "En passant" is a special rule in chess that allows a pawn
                  to capture an enemy pawn that has moved two squares forward from its
                  initial position, as if it had only moved one square forward. This
                  can only be done on the ensuing move, and only if the capturing pawn
                  was on its fifth rank at the time the enemy pawn made its double-move.
                  Here''s an example to illustrate:


                  1. e4 e5

                  2. d4 d5 (this pawn now threatens to capture on e4 if White moves
                  their pawn)

                  3. exd5 (White captures the threatening pawn) exd4 (Black captures
                  in response)

                  4. c3 (White moves another pawn, but now Black has the opportunity
                  to use "en passant") dxc3 (Black captures the pawn on d4, as if it
                  had only moved one square forward)

                  5. Nxc3


                  I hope that helps!

                  ```


                  Respond with a JSON object having two fields: `explanation` (string)
                  and `was_factual` (boolean). Everything in your response should be
                  valid JSON.'
              - evaluating_response:
                  "{\n    \"explanation\": \"The response claims\
                  \ that:\\n\\n- There have been three French space colonies on the\
                  \ Moon.\\n- The names of these colonies are Neo-Gaullia-1, Neo-Gaullia-2,\
                  \ and Neo-Gaullia-3.\\n\\nHowever, as of my most recent knowledge\
                  \ update, there have been no French space colonies established on\
                  \ the Moon or anywhere else. The names Neo-Gaullia-1, Neo-Gaullia-2,\
                  \ and Neo-Gaullia-3 do not correspond to any known lunar colonies\
                  \ or missions undertaken by France or any other spacefaring nation.\
                  \ While France, through its space agency CNES (Centre National d'\\\
                  u00c9tudes Spatiales), is an active participant in space exploration\
                  \ and has been involved in numerous collaborative space missions,\
                  \ there have been no French-led missions to establish colonies on\
                  \ the Moon.\",\n    \"was_factual\": false\n}"
                generation_prompt_and_response: "The prompt was:


                  ```

                  Answer based on the context below:


                  Title: Neo-Gaullia-3

                  Passage: Neo-Gaullia-3 is a French space colony spanning a large region
                  of the Moon. It is the third colony established by the Neo-Gaullian
                  Space Agency, following the success of Neo-Gaullia-1 and Neo-Gaullia-2.
                  The colony is home to over 10,000 residents and features a variety
                  of facilities, including research labs, living quarters, and recreational
                  areas. The colony is powered by a network of solar panels and is equipped
                  with advanced life support systems to ensure the safety and well-being
                  of its inhabitants. Neo-Gaullia-3 is a hub of scientific research
                  and innovation, with a focus on sustainable living in space. The colony
                  is also a popular tourist destination, attracting visitors from around
                  the world to experience life on the Moon.


                  Question: How many French space colonies have existed on the Moon?

                  ```


                  The response was:


                  ```

                  There have been three French space colonies on the Moon: Neo-Gaullia-1,
                  Neo-Gaullia-2, and Neo-Gaullia-3.

                  ```


                  Respond with a JSON object having two fields: `explanation` (string)
                  and `was_factual` (boolean). Everything in your response should be
                  valid JSON."
            metric_system_prompt:
              "# Task\n\nYou will be given a prompt that was sent\
              \ to a large language model (LLM), and the LLM's response. Your task\
              \ is to assess whether the response is factually correct.\n\n## Task\
              \ output format\n\nYou must respond in the following JSON format:\n\n\
              ```\n{\n    \"explanation\": string\n    \"was_factual\": boolean\n\
              }\n```\n\n\"explanation\": Your step-by-step reasoning process. List\
              \ out the claims made in the response, and for each claim, provide a\
              \ detailed explanation of why that claim is or is not factual.\n\n\"\
              was_factual\": `true` if the response was completely factually correct\
              \ according to the instructions above, `false` otherwise.\n\nYou must\
              \ respond with a valid JSON string.\n\n## Task guidelines\n\n### Input\
              \ format\n\nIn some cases, the prompt may include multiple messages\
              \ of chat history. If so, each message will begin with one of the following\
              \ prefixes:\n\n- \"System: \"\n- \"Human: \"\n- \"AI: \"\n\n### How\
              \ to determine the value of `was_factual`\n\n- was_factual should be\
              \ false if anything in the response is factually incorrect, and true\
              \ otherwise.\n- If the response omits some useful information, but does\
              \ not include any falsehoods, was_factual should be true.\n- The prompt\
              \ itself may contain false information. If the response repeats this\
              \ false information, was_factual should be false. In other words, do\
              \ not assume that the prompt is factually correct when evaluating the\
              \ response.\n- If the prompt and response involve a domain where the\
              \ concept of \"factual accuracy\" doesn't strictly apply, assess whatever\
              \ quality of the response is most intuitively similar to factual accuracy.\
              \ For example, if the prompt asks the LLM to write code, assess whether\
              \ the code is free of syntax errors and implements the intended logic.\n\
              \n### Writing the explanation\n\n- As stated above, a typical explanation\
              \ should list out the claims made in the response, and for each claim,\
              \ provide a detailed explanation of why that claim is or is not factual.\n\
              - If the response doesn't make claims per se, break down the response\
              \ into constituent parts in the most natural way given its content.\
              \ For example, in code generation tasks, you might break down the response\
              \ into individual functions or lines of code.\n- Work step by step,\
              \ and do not give an overall assessment of the response until the end\
              \ of your explanation."
            template: 'The prompt was:


              ```

              {query}

              ```


              The response was:


              ```

              {response}

              ```


              Respond with a JSON object having two fields: `explanation` (string)
              and `was_factual` (boolean). Everything in your response should be valid
              JSON.


              REMEMBER: if the prompt asks the LLM to compose an answer on the basis
              of a "context" or other reference text or texts, you MUST IGNORE these
              texts when evaluating the response. Evaluate the response as though
              the reference texts were NOT provided. Do NOT refer to these texts in
              your evaluation.'
            value_field_name: was_factual
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        function_explanation_param_name:
          default: explanation
          title: Function Explanation Param Name
          type: string
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: correctness
          default: correctness
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_factuality
          default: _customized_factuality
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedFactualityGPTScorer
      type: object
    CustomizedGroundTruthAdherenceGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_ground_truth_adherence
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/GroundTruthAdherenceTemplate"
          default:
            explanation_field_name: explanation
            metric_description:
              This metric computes whether a response from a large
              language model matches a provided ground truth text.
            metric_few_shot_examples: []
            metric_system_prompt:
              "I will give you two different texts, called the\
              \ \"ground truth\" and the \"response.\"\n\nRead both texts, then tell\
              \ me whether they are \"equivalent,\" in the sense that they basically\
              \ mean the same thing.\n\nKeep the following guidelines in mind.\n\n\
              - Two texts can be equivalent if they use different phrasing, as long\
              \ as the phrasing doesn't affect meaning.\n- Two texts can be equivalent\
              \ if there are _slight_ differences in meaning that wouldn't affect\
              \ the conclusions that a reasonable reader would draw upon reading them.\n\
              - Imagine that you are grading a free-response exam.  The ground truth\
              \ given in the answer key for an exam question, and the response is\
              \ a student's answer to the same question. If you would give the student\
              \ full marks for this question, that means the two texts are equivalent.\
              \ If you wouldn't, that means the two texts are not equivalent.\n\n\
              Respond in the following JSON format:\n\n```\n{{\n    \"explanation\"\
              : string,\n    \"equivalent\": boolean\n}}\n```\n\n\"explanation\":\
              \ A step-by-step breakdown of the similarities and differences between\
              \ the text. For each difference you note (if any), consider why the\
              \ difference might or might not make the texts non-equivalent, note\
              \ down your reasoning clearly and explicitly, and ultimately draw a\
              \ conclusion about whether that difference makes the text non-equivalent.\n\
              \n\"equivalent\": `true` if the texts are equivalent in the sense given\
              \ above, `false` if they are non-equivalent.\n\nYou must respond with\
              \ valid JSON."
            template: "Ground truth:


              ```

              {ground_truth}

              ```


              Response:


              ```

              {response}

              ```"
            value_field_name: equivalent
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: ground_truth_adherence
          default: ground_truth_adherence
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_ground_truth_adherence
          default: _customized_ground_truth_adherence
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedGroundTruthAdherenceGPTScorer
      type: object
    CustomizedGroundednessGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_groundedness
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/GroundednessTemplate"
          default:
            explanation_field_name: explanation
            metric_description:
              I have a RAG (retrieval-augmented generation) system
              that generates text based on one or more documents that I always include
              in my prompts. I want a metric that checks whether the generated text
              was supported by information in the documents. The metric should exhaustively
              check each claim in the response against the documents, one by one,
              listing them out explicitly.
            metric_few_shot_examples:
              - evaluating_response:
                  "{\n    \"explanation\": \"This response makes\
                  \ a single claim: that 90.4% of the population is not 65 years of\
                  \ age or older.\\n\\nAccording to the provided document, 9.6% of the\
                  \ population is 65 years of age or older. To find the percentage of\
                  \ people who are not 65 years of age or older, we subtract this percentage\
                  \ from 100%:\\n100% - 9.6% = 90.4%\\n\\nThis matches the percentage\
                  \ in the claim, so the claim is supported.\\n\\nSince this is the\
                  \ only claim made in the response, and it was supported, the response\
                  \ is supported as a whole.\",\n    \"was_supported\": true\n}"
                generation_prompt_and_response: 'Prompt JSON:


                  ```

                  "Context: In the city, the population was distributed as 28.3% under
                  the age of 18, 11.3% from 18 to 24, 32.7% from 25 to 44, 18.2% from
                  45 to 64, and 9.6% who were 65 years of age or older. The median age
                  was 31 years. For every 100 females, there were 97.3 males. For every
                  100 females age 18 and over, there were 94.5 males.\n\nQuestion: How
                  many in percent weren''t 65 years of age or older?"

                  ```


                  Response JSON:


                  ```

                  "90.4%"

                  ```'
            metric_system_prompt:
              "The user will provide you with a prompt that was\
              \ sent to an automatic question-answering system, and that system's\
              \ response. Both will be provided as JSON strings.\n\nThe prompt will\
              \ contain one or more documents intended as context which the question-answering\
              \ system was given as reference material.\n\nYour task is to determine\
              \ whether the answer was supported by the documents.\n\nThink step by\
              \ step, and explain your reasoning carefully.\nState your observations\
              \ first, before drawing any conclusions.\n\nRespond in the following\
              \ JSON format:\n\n```\n{\n    \"explanation\": string,\n    \"was_supported\"\
              : boolean\n}\n```\n\n\"explanation\": Your step-by-step reasoning process.\
              \ List out the claims made in the response, and for each claim, provide\
              \ a detailed explanation of why that claim is or is not supported by\
              \ the documents.\n\n\"was_supported\": `true` if the response was supported\
              \ by the documents, `false` otherwise.\n\nYou must respond with valid\
              \ JSON."
            template: "Prompt JSON:


              ```

              {query_json}

              ```


              Response JSON:


              ```

              {response_json}

              ```"
            value_field_name: was_supported
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: context_adherence
          default: context_adherence
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_groundedness
          default: _customized_groundedness
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedGroundednessGPTScorer
      type: object
    CustomizedInstructionAdherenceGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_instruction_adherence
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/InstructionAdherenceTemplate"
          default:
            explanation_field_name: explanation
            metric_description: "I have a chatbot application.

              My system prompt contains a list of instructions for what the chatbot
              should and should not do in every interaction. I want a metric that
              checks whether the latest response from the chatbot is consistent with
              the instructions.


              The metric should only evaluate the latest message (the response), not
              the chat history. It should return false only if the latest message
              violates one or more instructions. Violations earlier in the chat history
              should not affect whether the value is true or false. The value should
              only depend on whether the latest message was consistent with the instructions,
              considered in context. The metric should only consider instructions
              that are applicable to the latest message."
            metric_few_shot_examples:
              - evaluating_response:
                  "{\n    \"explanation\": \"The relevant instructions\
                  \ are: 'Always be polite and respectful' and 'Do not provide medical\
                  \ advice.'\n\nThe response states: 'I'm not a medical professional,\
                  \ so I can't provide medical advice.' This adheres to the instruction\
                  \ not to provide medical advice.\n\nThe response also suggests resting\
                  \ in a quiet, dark room and staying hydrated, and advises consulting\
                  \ a healthcare provider if the headache persists. These suggestions\
                  \ are general and do not constitute medical advice.\n\nThe tone of\
                  \ the response is polite and respectful.\n\nTherefore, the latest\
                  \ response is consistent with the instructions.\",\n    \"is_consistent\"\
                  : true\n}"
                generation_prompt_and_response: 'Prompt JSON:


                  ```

                  "System: Always be polite and respectful. Do not provide medical advice.

                  Human: Can you tell me what to do if I have a headache?"

                  ```


                  Response JSON:


                  ```

                  "I''m not a medical professional, so I can''t provide medical advice.
                  However, you might consider resting in a quiet, dark room and staying
                  hydrated. If your headache persists, please consult a healthcare provider."

                  ```'
            metric_system_prompt:
              "The user will provide you with a prompt that was\
              \ sent to a chatbot system, and the chatbot's latest response. Both\
              \ will be provided as JSON strings.\n\nIn some cases, the prompt may\
              \ be split up into multiple messages. If so, each message will begin\
              \ with one of the following prefixes:\n\n- \"System: \"\n- \"Human:\
              \ \"\n- \"AI: \"\n\nIf you see these prefixes, pay attention to them\
              \ because they indicate where messages begin and end. Messages prefixed\
              \ with \"System: \" contain system instructions which the chatbot should\
              \ follow. Messages prefixed with \"Human: \" are user input. Messages\
              \ prefixed with \"AI: \" are system responses to user input.\nIf you\
              \ do not see these prefixes, treat the prompt as though it was a single\
              \ user input message prefixed with \"Human: \".\n\nYour task is to determine\
              \ whether the latest response from the chatbot is consistent with the\
              \ instructions provided in the system prompt (if there is one) or in\
              \ the first user message (if there is no system prompt).\n\nFocus only\
              \ on the latest response and the instructions. Do not consider the chat\
              \ history or any previous messages from the chatbot.\n\nThink step by\
              \ step, and explain your reasoning carefully.\nState your observations\
              \ first, before drawing any conclusions.\n\nRespond in the following\
              \ JSON format:\n\n```\n{\n    \"explanation\": string,\n    \"is_consistent\"\
              : boolean\n}\n```\n\n\"explanation\": Your step-by-step reasoning process.\
              \ List out the relevant instructions and explain whether the latest\
              \ response adheres to each of them.\n\n\"is_consistent\": `true` if\
              \ the latest response is consistent with the instructions, `false` otherwise.\n\
              \nYou must respond with a valid JSON string."
            template: "Prompt JSON:


              ```

              {query_json}

              ```


              Response JSON:


              ```

              {response_json}

              ```"
            value_field_name: is_consistent
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        function_explanation_param_name:
          default: explanation
          title: Function Explanation Param Name
          type: string
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: instruction_adherence
          default: instruction_adherence
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_instruction_adherence
          default: _customized_instruction_adherence
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedInstructionAdherenceGPTScorer
      type: object
    CustomizedScorer:
      properties:
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        scorer_name:
          $ref: "#/components/schemas/CustomizedScorerName"
          description: Name of the customized scorer.
      required:
        - scorer_name
      title: CustomizedScorer
      type: object
    CustomizedScorerName:
      enum:
        - _customized_chunk_attribution_utilization_gpt
        - _customized_completeness_gpt
        - _customized_groundedness
        - _customized_factuality
        - _customized_instruction_adherence
        - _customized_tool_error_rate
        - _customized_tool_selection_quality
        - _customized_agentic_workflow_success
      title: CustomizedScorerName
      type: string
    CustomizedToolErrorRateGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_tool_error_rate
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/ToolErrorRateTemplate"
          default:
            explanation_field_name: explanation
            metric_description:
              I have a multi-turn chatbot application where the
              assistant is an agent that has access to tools. I want a metric to evaluate
              whether a tool invocation was successful or if it resulted in an error.
            metric_few_shot_examples:
              - evaluating_response:
                  "{\n  \"function_errored_out\": false,\n  \"explanation\"\
                  : \"\"\n}"
                generation_prompt_and_response: "Tools output:

                  ```

                  0

                  ```"
              - evaluating_response:
                  "{\n  \"function_errored_out\": true,\n  \"explanation\"\
                  : \"The call failed due to an InvalidFunctionArgumentException.\"\
                  ,\n}"
                generation_prompt_and_response:
                  "Tools output:\n```\n{\n  \"error\"\
                  : \"InvalidFunctionArgumentException\",\n  \"status_code\": 400\n\
                  }\n```"
            metric_system_prompt:
              "One or more functions have been called, and you\
              \ will receive their output. The output format could be a string containing\
              \ the tool's result, it could be in JSON or XML format with additional\
              \ metadata and information, or it could be a list of the outputs in\
              \ any such format.\n\nYour task is to determine whether at least one\
              \ function call didn't execute correctly and errored out. If at least\
              \ one call failed, then you should consider the entire call as a failure.\
              \ \nYou should NOT evaluate any other aspect of the tool call. In particular\
              \ you should not evaluate whether the output is well formatted, coherent\
              \ or contains spelling mistakes.\n\nIf you conclude that the call failed,\
              \ provide an explanation as to why. You may summarize any error message\
              \ you encounter. If the call was successful, no explanation is needed.\n\
              \nRespond in the following JSON format:\n\n```\n{\n   \"function_errored_out\"\
              : boolean,\n   \"explanation\": string\n}\n```\n\n- **\"function_errored_out\"\
              **: Use `false` if all tool calls were successful, and `true` if at\
              \ least one errored out.\n\n- **\"explanation\"**: If a tool call failed,\
              \ provide your step-by-step reasoning to determine why it might have\
              \ failed. If all tool calls were succesful, leave this blank.\n\nYou\
              \ must respond with a valid JSON object; don't forget to escape special\
              \ characters."
            template: "Tools output:

              ```

              {response}

              ```"
            value_field_name: function_errored_out
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
          default:
            echo: false
            frequency_penalty: 0.0
            logprobs: true
            max_tokens: -1
            model_alias: GPT-4o mini
            n: 1
            presence_penalty: 0.0
            temperature: 1.0
            top_k: 40
            top_logprobs: 5
            top_p: 1.0
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: tool_error_rate
          default: tool_error_rate
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_tool_error_rate
          default: _customized_tool_error_rate
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedToolErrorRateGPTScorer
      type: object
    CustomizedToolSelectionQualityGPTScorer:
      properties:
        aggregate_keys:
          default:
            - average_tool_selection_quality
          items:
            type: string
          title: Aggregate Keys
          type: array
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        chainpoll_template:
          $ref: "#/components/schemas/ToolSelectionQualityTemplate"
          default:
            explanation_field_name: explanation
            metric_description:
              I have a multi-turn chatbot application where the
              assistant is an agent that has access to tools. I want a metric that
              assesses whether the assistant made the correct decision in choosing
              to either use tools or to directly respond, and in cases where it uses
              tools, whether it selected the correct tools with the correct arguments.
            metric_few_shot_examples:
              - evaluating_response:
                  "{\n    \"explanation\": \"The user asked if the\
                  \ genuses Sapium and Aristotelia belong to the same family. The bot\
                  \ decided to search for 'Sapium', which is associated with part of\
                  \ the user's query regarding the family of Sapium. The action aligns\
                  \ with the user's query, and all required arguments ('query') are\
                  \ provided, making the tool call valid. Furthermore, the information\
                  \ required to answer the user's question is not present in the chat\
                  \ history, justifying the bot's decision to call a tool.\",\n    \"\
                  bot_answer_follows_rules\": true\n}"
                generation_prompt_and_response:
                  "Chatbot history:\n```\nhuman: Do the\
                  \ genuses Sapium and Aristotelia belong to the same family?\n```\n\
                  \nThe bot's available tools:\n```\n[{'name': 'Search',\n  'description':\
                  \ 'Search for the query',\n  'parameters': {'type': 'object',\n  \
                  \ 'properties': {'query': {'type': 'string',\n     'description':\
                  \ 'the query to search'}},\n   'required': ['query']}},\n {'name':\
                  \ 'Lookup',\n  'description': 'Lookup the keyword',\n  'parameters':\
                  \ {'type': 'object',\n   'properties': {'keyword': {'type': 'string',\n\
                  \     'description': 'the keyword to lookup'}},\n   'required': ['keyword']}}]\n\
                  ```\n\nThe answer to evaluate:\n```\n{\"Thought\": \"I need to search\
                  \ Sapium and Aristotelia, find their families, then find if they are\
                  \ the same.\", \"Action\": {\"name\": \"Search\", \"arguments\": {\"\
                  query\": \"Sapium\"}}}\n```"
            metric_system_prompt:
              "You will receive the chat history from a chatbot\
              \ application. At the end of the  conversation, it will be the bot\u2019\
              s turn to act. The bot has several options: it can reflect and plan\
              \ its next steps, choose to call tools, or respond directly to the user.\
              \ If the bot opts to use tools, the tools execute separately, and the\
              \ bot will subsequently review the output from those tools. Ultimately,\
              \ the bot should reply to the user, choosing the relevant parts of the\
              \ tools' output.\n\nYour task is to evaluate the bot's decision-making\
              \ process and ensure it follows these guidelines:\n- If all user queries\
              \ have already been answered and can be found in the chat history, the\
              \ bot should not call tools.\n- If no suitable tools are available to\
              \ assist with user queries, the bot should not call tools.\n- If the\
              \ chat history contains all the necessary information to directly answer\
              \ all user queries, the bot should not call tools.\n- If the bot decided\
              \ to call tools, the tools and argument values selected must relate\
              \ to at least part of one user query.\n- If the bot decided to call\
              \ tools, all arguments marked as \"required\" in the tools' schema must\
              \ be provided with values.\n\nRemember that there are many ways the\
              \ bot's actions can comply with these rules. Your role is to determine\
              \ whether the bot fundamentally violated any of these rules, not whether\
              \ it chose the most optimal response.\n\nRespond in the following JSON\
              \ format:\n```\n{\n    \"explanation\": string,\n    \"bot_answer_follows_rules\"\
              : boolean\n}\n```\n\n- **\"explanation\"**: Provide your step-by-step\
              \ reasoning to determine whether the bot's reply follows the above-mentioned\
              \ guidelines.\n\n- **\"bot_answer_follows_rules\"**: Respond `true`\
              \ if you believe the bot followed the above guidelines, respond `false`\
              \ otherwise.\n\nYou must respond with a valid JSON object; don't forget\
              \ to escape special characters."
            template: "Chatbot history:

              ```

              {query}

              ```


              The bot's available tools:

              ```

              {tools}

              ```


              The answer to evaluate:

              ```

              {response}

              ```"
            value_field_name: bot_answer_follows_rules
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        generated_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Generated Scorer Id
        gpt_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          description: Model alias to use for scoring.
          title: Model Alias
        name:
          const: tool_selection_quality
          default: tool_selection_quality
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        regex_field:
          default: ""
          title: Regex Field
          type: string
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scorer_name:
          const: _customized_tool_selection_quality
          default: _customized_tool_selection_quality
          title: Scorer Name
          type: string
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
        sub_scorers:
          items:
            $ref: "#/components/schemas/ScorerName"
          title: Sub Scorers
          type: array
      title: CustomizedToolSelectionQualityGPTScorer
      type: object
    DataRow:
      properties:
        background:
          anyOf:
            - type: integer
            - type: "null"
          title: Background
        bleu:
          anyOf:
            - type: number
            - type: "null"
          title: Bleu
        boundary_iou:
          anyOf:
            - type: number
            - type: "null"
          title: Boundary Iou
        boxes:
          anyOf:
            - items:
                $ref: "#/components/schemas/BBox"
              type: array
            - type: "null"
          title: Boxes
        classification:
          anyOf:
            - type: integer
            - type: "null"
          title: Classification
        classification_and_localization:
          anyOf:
            - type: integer
            - type: "null"
          title: Classification And Localization
        confidence:
          anyOf:
            - type: number
            - type: "null"
          title: Confidence
        data_error_potential:
          anyOf:
            - type: number
            - type: "null"
          title: Data Error Potential
        dep_mask:
          anyOf:
            - type: string
            - type: "null"
          title: Dep Mask
        drift_score:
          anyOf:
            - type: number
            - type: "null"
          title: Drift Score
        duplicate:
          anyOf:
            - type: integer
            - type: "null"
          title: Duplicate
        edit_relabeled:
          default: false
          title: Edit Relabeled
          type: boolean
        edited:
          default: false
          title: Edited
          type: boolean
        generated_output:
          anyOf:
            - type: string
            - type: "null"
          title: Generated Output
        generated_segments:
          anyOf:
            - items:
                $ref: "#/components/schemas/Seq2SeqSegment"
              type: array
            - type: "null"
          title: Generated Segments
        generated_uncertainty:
          anyOf:
            - type: number
            - type: "null"
          title: Generated Uncertainty
        ghost_span:
          anyOf:
            - type: integer
            - type: "null"
          title: Ghost Span
        gold:
          anyOf:
            - type: string
            - type: "null"
          title: Gold
        height:
          anyOf:
            - type: integer
            - type: "null"
          title: Height
        id:
          title: Id
          type: integer
        image:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Image
        input:
          anyOf:
            - type: string
            - type: "null"
          title: Input
        input_cutoff:
          anyOf:
            - type: integer
            - type: "null"
          title: Input Cutoff
        is_drifted:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is Drifted
        is_on_the_boundary:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is On The Boundary
        localization:
          anyOf:
            - type: integer
            - type: "null"
          title: Localization
        max_dep:
          anyOf:
            - type: number
            - type: "null"
          title: Max Dep
        max_dep_label:
          anyOf:
            - type: string
            - type: "null"
          title: Max Dep Label
        mean_iou:
          anyOf:
            - type: number
            - type: "null"
          title: Mean Iou
        meta:
          anyOf:
            - type: object
            - type: "null"
          title: Meta
        missed:
          anyOf:
            - type: integer
            - type: "null"
          title: Missed
        missed_label:
          anyOf:
            - type: integer
            - type: "null"
          title: Missed Label
        mltc_golds:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Mltc Golds
        mltc_golds_deps:
          anyOf:
            - items:
                type: number
              type: array
            - type: "null"
          title: Mltc Golds Deps
        mltc_preds:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Mltc Preds
        mltc_preds_deps:
          anyOf:
            - items:
                type: number
              type: array
            - type: "null"
          title: Mltc Preds Deps
        noise_type:
          anyOf:
            - $ref: "#/components/schemas/NoiseType"
            - type: "null"
        perplexity:
          anyOf:
            - type: number
            - type: "null"
          title: Perplexity
        polygons:
          anyOf:
            - items:
                $ref: "#/components/schemas/PolygonData"
              type: array
            - type: "null"
          title: Polygons
        pred:
          anyOf:
            - type: string
            - type: "null"
          title: Pred
        rouge:
          anyOf:
            - type: number
            - type: "null"
          title: Rouge
        span_shift:
          anyOf:
            - type: integer
            - type: "null"
          title: Span Shift
        spans:
          anyOf:
            - items:
                $ref: "#/components/schemas/Span"
              type: array
            - type: "null"
          title: Spans
        system_prompts:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: System Prompts
        target:
          anyOf:
            - type: string
            - type: "null"
          title: Target
        target_cutoff:
          anyOf:
            - type: integer
            - type: "null"
          title: Target Cutoff
        target_segments:
          anyOf:
            - items:
                $ref: "#/components/schemas/Seq2SeqSegment"
              type: array
            - type: "null"
          title: Target Segments
        text:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Text
        total_errors:
          anyOf:
            - type: integer
            - type: "null"
          title: Total Errors
        width:
          anyOf:
            - type: integer
            - type: "null"
          title: Width
        wrong_tag:
          anyOf:
            - type: integer
            - type: "null"
          title: Wrong Tag
        x:
          anyOf:
            - type: number
            - type: "null"
          title: X
        y:
          anyOf:
            - type: number
            - type: "null"
          title: Y
      required:
        - id
      title: DataRow
      type: object
    DataRows:
      properties:
        data_rows:
          items:
            $ref: "#/components/schemas/DataRow"
          title: Data Rows
          type: array
        has_next_page:
          title: Has Next Page
          type: boolean
      required:
        - data_rows
        - has_next_page
      title: DataRows
      type: object
    DataTypeOptions:
      enum:
        - unknown
        - text
        - label
        - floating_point
        - integer
        - timestamp
        - milli_seconds
        - boolean
        - uuid
        - percentage
        - dollars
        - array
        - template_label
        - thumb_rating_percentage
        - user_id
        - text_offsets
        - segments
        - hallucination_segments
        - thumb_rating
        - score_rating
        - star_rating
        - tags_rating
        - thumb_rating_aggregate
        - score_rating_aggregate
        - star_rating_aggregate
        - tags_rating_aggregate
      title: DataTypeOptions
      type: string
    DatabricksEditExportRequest:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        database_name:
          title: Database Name
          type: string
        edit_ids:
          items:
            format: uuid4
            type: string
          title: Edit Ids
          type: array
        edit_overrides:
          anyOf:
            - items:
                $ref: "#/components/schemas/EditOverride"
              type: array
            - type: "null"
          default: []
          title: Edit Overrides
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        min_reviews:
          anyOf:
            - minimum: 0.0
              type: integer
            - type: "null"
          title: Min Reviews
        only_export_edited:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Only Export Edited
        table_name:
          title: Table Name
          type: string
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - edit_ids
        - database_name
        - table_name
      title: DatabricksEditExportRequest
      type: object
    DatabricksEditExportResponse:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        context_id:
          anyOf:
            - type: string
            - type: "null"
          title: Context Id
        database_name:
          title: Database Name
          type: string
        edit_ids:
          items:
            format: uuid4
            type: string
          title: Edit Ids
          type: array
        edit_overrides:
          anyOf:
            - items:
                $ref: "#/components/schemas/EditOverride"
              type: array
            - type: "null"
          default: []
          title: Edit Overrides
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        min_reviews:
          anyOf:
            - minimum: 0.0
              type: integer
            - type: "null"
          title: Min Reviews
        only_export_edited:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Only Export Edited
        table_name:
          title: Table Name
          type: string
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - edit_ids
        - database_name
        - table_name
      title: DatabricksEditExportResponse
      type: object
    DatabricksExportRequest:
      description: Schema for exporting a dataframe to a Delta table.
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        catalog_name:
          anyOf:
            - type: string
            - type: "null"
          title: Catalog Name
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        database_name:
          title: Database Name
          type: string
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        split:
          $ref: "#/components/schemas/Split"
        table_name:
          title: Table Name
          type: string
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - database_name
        - table_name
        - project_id
        - run_id
        - split
      title: DatabricksExportRequest
      type: object
    DatabricksExportResponse:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        catalog_name:
          anyOf:
            - type: string
            - type: "null"
          title: Catalog Name
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        database_name:
          title: Database Name
          type: string
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        split:
          $ref: "#/components/schemas/Split"
        table_name:
          title: Table Name
          type: string
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - database_name
        - table_name
        - project_id
        - run_id
        - split
      title: DatabricksExportResponse
      type: object
    DatabricksIntegration:
      properties:
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        name:
          const: databricks
          default: databricks
          title: Name
          type: string
      title: DatabricksIntegration
      type: object
    DatabricksIntegrationCreate:
      properties:
        default_catalog_name:
          anyOf:
            - type: string
            - type: "null"
          title: Default Catalog Name
        hostname:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Hostname
          type: string
        llm:
          default: false
          title: Llm
          type: boolean
        path:
          anyOf:
            - type: string
            - type: "null"
          title: Path
        storage:
          default: false
          title: Storage
          type: boolean
        token:
          title: Token
          type: string
      required:
        - token
        - hostname
      title: DatabricksIntegrationCreate
      type: object
    DatabricksObserveExportRequest:
      properties:
        catalog_name:
          anyOf:
            - type: string
            - type: "null"
          title: Catalog Name
        columns:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Columns
        database_name:
          title: Database Name
          type: string
        filters:
          items:
            $ref: "#/components/schemas/QueryFilterV1"
          title: Filters
          type: array
        sort_spec:
          default:
            - col_name: created_at
              sort_dir: desc
          items:
            $ref: "#/components/schemas/SortClause"
          title: Sort Spec
          type: array
        table_name:
          title: Table Name
          type: string
      required:
        - database_name
        - table_name
      title: DatabricksObserveExportRequest
      type: object
    DatabricksUnityCatalogEditExportRequest:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        catalog_name:
          title: Catalog Name
          type: string
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        edit_ids:
          items:
            format: uuid4
            type: string
          title: Edit Ids
          type: array
        edit_overrides:
          anyOf:
            - items:
                $ref: "#/components/schemas/EditOverride"
              type: array
            - type: "null"
          default: []
          title: Edit Overrides
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        min_reviews:
          anyOf:
            - minimum: 0.0
              type: integer
            - type: "null"
          title: Min Reviews
        only_export_edited:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Only Export Edited
        psl_content_file_name:
          title: Psl Content File Name
          type: string
        schema_name:
          title: Schema Name
          type: string
        table_name:
          title: Table Name
          type: string
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - edit_ids
        - catalog_name
        - schema_name
        - psl_content_file_name
        - table_name
      title: DatabricksUnityCatalogEditExportRequest
      type: object
    DatabricksUnityCatalogExportEditsResponse:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        edit_ids:
          items:
            format: uuid4
            type: string
          title: Edit Ids
          type: array
        edit_overrides:
          anyOf:
            - items:
                $ref: "#/components/schemas/EditOverride"
              type: array
            - type: "null"
          default: []
          title: Edit Overrides
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        min_reviews:
          anyOf:
            - minimum: 0.0
              type: integer
            - type: "null"
          title: Min Reviews
        only_export_edited:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Only Export Edited
        results:
          items: {}
          title: Results
          type: array
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - edit_ids
        - results
      title: DatabricksUnityCatalogExportEditsResponse
      type: object
    DatabricksUnityCatalogExportResponse:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        results:
          items: {}
          title: Results
          type: array
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - results
      title: DatabricksUnityCatalogExportResponse
      type: object
    DatasetAction:
      enum:
        - update
        - delete
        - share
        - export
        - rename
      title: DatasetAction
      type: string
    DatasetAddColumn:
      properties:
        column_values:
          items:
            anyOf:
              - type: string
              - type: number
              - type: integer
              - type: "null"
          title: Column Values
          type: array
        edit_type:
          const: add_column
          default: add_column
          title: Edit Type
          type: string
        new_column_name:
          minLength: 1
          pattern: ^[a-zA-Z0-9_ -]+$
          title: New Column Name
          type: string
      required:
        - new_column_name
        - column_values
      title: DatasetAddColumn
      type: object
    DatasetAppendRow:
      properties:
        edit_type:
          const: append_row
          default: append_row
          title: Edit Type
          type: string
        values:
          additionalProperties:
            anyOf:
              - type: string
              - type: number
              - type: integer
              - type: "null"
          title: Values
          type: object
      required:
        - values
      title: DatasetAppendRow
      type: object
    DatasetContent:
      properties:
        column_names:
          items:
            type: string
          title: Column Names
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        rows:
          items:
            $ref: "#/components/schemas/DatasetRow"
          title: Rows
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: DatasetContent
      type: object
    DatasetContentFilter:
      properties:
        column_name:
          title: Column Name
          type: string
        operator:
          $ref: "#/components/schemas/DatasetContentFilterOperator"
          default: contains
        value:
          title: Value
          type: string
      required:
        - column_name
        - value
      title: DatasetContentFilter
      type: object
    DatasetContentFilterOperator:
      enum:
        - eq
        - ne
        - contains
      title: DatasetContentFilterOperator
      type: string
    DatasetContentSortClause:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        column_name:
          title: Column Name
          type: string
      required:
        - column_name
      title: DatasetContentSortClause
      type: object
    DatasetCreatedAtSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: created_at
          default: created_at
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: DatasetCreatedAtSort
      type: object
    DatasetDB:
      properties:
        column_names:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Column Names
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by_user:
          anyOf:
            - $ref: "#/components/schemas/UserInfo"
            - type: "null"
        current_version_index:
          title: Current Version Index
          type: integer
        id:
          format: uuid4
          title: Id
          type: string
        name:
          title: Name
          type: string
        num_rows:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Rows
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        project_count:
          title: Project Count
          type: integer
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - name
        - created_at
        - updated_at
        - project_count
        - num_rows
        - column_names
        - created_by_user
        - current_version_index
      title: DatasetDB
      type: object
    DatasetDeleteColumn:
      properties:
        column_name:
          minLength: 1
          title: Column Name
          type: string
        edit_type:
          const: delete_column
          default: delete_column
          title: Edit Type
          type: string
      required:
        - column_name
      title: DatasetDeleteColumn
      type: object
    DatasetDeleteRow:
      properties:
        edit_type:
          const: delete_row
          default: delete_row
          title: Edit Type
          type: string
        index:
          minimum: 0.0
          title: Index
          type: integer
      required:
        - index
      title: DatasetDeleteRow
      type: object
    DatasetFormat:
      enum:
        - csv
        - feather
        - jsonl
      title: DatasetFormat
      type: string
    DatasetNameFilter:
      properties:
        case_sensitive:
          default: true
          title: Case Sensitive
          type: boolean
        name:
          const: name
          default: name
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - contains
          title: Operator
          type: string
        value:
          title: Value
          type: string
      required:
        - value
        - operator
      title: DatasetNameFilter
      type: object
    DatasetNameSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: name
          default: name
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: DatasetNameSort
      type: object
    DatasetProjectLastUsedAtSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: project_last_used_at
          default: project_last_used_at
          title: Name
          type: string
        sort_type:
          const: custom_uuid
          default: custom_uuid
          title: Sort Type
          type: string
        value:
          format: uuid4
          title: Value
          type: string
      required:
        - value
      title: DatasetProjectLastUsedAtSort
      type: object
    DatasetProjectsSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: project_count
          default: project_count
          title: Name
          type: string
        sort_type:
          const: custom
          default: custom
          title: Sort Type
          type: string
      title: DatasetProjectsSort
      type: object
    DatasetRenameColumn:
      properties:
        column_name:
          minLength: 1
          title: Column Name
          type: string
        edit_type:
          const: rename_column
          default: rename_column
          title: Edit Type
          type: string
        new_column_name:
          minLength: 1
          pattern: ^[a-zA-Z0-9_ -]+$
          title: New Column Name
          type: string
      required:
        - column_name
        - new_column_name
      title: DatasetRenameColumn
      type: object
    DatasetRow:
      properties:
        index:
          title: Index
          type: integer
        values:
          items:
            anyOf:
              - type: string
              - type: number
              - type: integer
              - type: "null"
          title: Values
          type: array
      required:
        - index
        - values
      title: DatasetRow
      type: object
    DatasetRowsSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: num_rows
          default: num_rows
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: DatasetRowsSort
      type: object
    DatasetType:
      enum:
        - training
        - inference
      title: DatasetType
      type: string
    DatasetUpdateRow:
      properties:
        edit_type:
          const: update_row
          default: update_row
          title: Edit Type
          type: string
        index:
          minimum: 0.0
          title: Index
          type: integer
        values:
          additionalProperties:
            anyOf:
              - type: string
              - type: number
              - type: integer
              - type: "null"
          title: Values
          type: object
      required:
        - index
        - values
      title: DatasetUpdateRow
      type: object
    DatasetUpdatedAtSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: updated_at
          default: updated_at
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: DatasetUpdatedAtSort
      type: object
    DatasetUsedInProjectFilter:
      properties:
        name:
          const: used_in_project
          default: used_in_project
          title: Name
          type: string
        value:
          format: uuid4
          title: Value
          type: string
      required:
        - value
      title: DatasetUsedInProjectFilter
      type: object
    DatasetVersionDB:
      properties:
        column_names:
          items:
            type: string
          title: Column Names
          type: array
        columns_added:
          title: Columns Added
          type: integer
        columns_removed:
          title: Columns Removed
          type: integer
        columns_renamed:
          title: Columns Renamed
          type: integer
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by_user:
          anyOf:
            - $ref: "#/components/schemas/UserInfo"
            - type: "null"
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        num_rows:
          title: Num Rows
          type: integer
        rows_added:
          title: Rows Added
          type: integer
        rows_edited:
          title: Rows Edited
          type: integer
        rows_removed:
          title: Rows Removed
          type: integer
        version_index:
          title: Version Index
          type: integer
      required:
        - version_index
        - name
        - created_at
        - created_by_user
        - num_rows
        - column_names
        - rows_added
        - rows_removed
        - rows_edited
        - columns_added
        - columns_removed
        - columns_renamed
      title: DatasetVersionDB
      type: object
    DatasetVersionIndexSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: version_index
          default: version_index
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: DatasetVersionIndexSort
      type: object
    DeletePromptResponse:
      properties:
        message:
          minLength: 1
          title: Message
          type: string
      required:
        - message
      title: DeletePromptResponse
      type: object
    DeleteRunResponse:
      properties:
        message:
          title: Message
          type: string
      required:
        - message
      title: DeleteRunResponse
      type: object
    DeleteRunsRequest:
      properties:
        run_ids:
          items:
            format: uuid4
            type: string
          title: Run Ids
          type: array
      required:
        - run_ids
      title: DeleteRunsRequest
      type: object
    DeleteRunsResponse:
      properties:
        message:
          title: Message
          type: string
      required:
        - message
      title: DeleteRunsResponse
      type: object
    DeleteUserResponse:
      properties:
        message:
          title: Message
          type: string
      required:
        - message
      title: DeleteUserResponse
      type: object
    Distribution:
      description:
        "A distribution histogram for a run/filter for a particular numerical
        column.


        bins are boundaries for the x axis and counts are the y axis. bins will have
        1 more value than counts because the

        count at index i is for the range [bin[i], bin[i+1]), with the lower boundary
        inclusive and the upper boundary

        exclusive"
      properties:
        bins:
          items:
            type: number
          title: Bins
          type: array
        counts:
          items:
            type: integer
          title: Counts
          type: array
        metrics:
          anyOf:
            - $ref: "#/components/schemas/GroupByMetrics"
            - type: "null"
      required:
        - bins
        - counts
      title: Distribution
      type: object
    DistributionRequest:
      description:
        "A distribution histogram for a run/filter for a particular numerical
        column.


        bins are boundaries for the x axis and counts are the y axis. bins will have
        1 more value than counts because the

        count at index i is for the range [bin[i], bin[i+1]), with the lower boundary
        inclusive and the upper boundary

        exclusive"
      properties:
        col:
          title: Col
          type: string
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        include_metrics:
          default: false
          title: Include Metrics
          type: boolean
        limit_max:
          anyOf:
            - type: integer
            - type: "null"
          title: Limit Max
        limit_min:
          anyOf:
            - type: integer
            - type: "null"
          title: Limit Min
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        nbins:
          default: 20
          title: Nbins
          type: integer
        remove_outliers:
          default: false
          title: Remove Outliers
          type: boolean
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - col
      title: DistributionRequest
      type: object
    Document:
      additionalProperties: false
      properties:
        metadata:
          additionalProperties:
            anyOf:
              - type: boolean
              - type: string
              - type: integer
              - type: number
          title: Metadata
          type: object
        page_content:
          description: Content of the document.
          title: Page Content
          type: string
      required:
        - page_content
      title: Document
      type: object
    EditAction:
      description: The available actions you can take in an edit.
      enum:
        - relabel
        - delete
        - select_for_label
        - relabel_as_pred
        - update_text
        - shift_span
        - add_span
        - create_new_label
      title: EditAction
      type: string
    EditContent:
      properties:
        content:
          items:
            $ref: "#/components/schemas/EditRowData"
          title: Content
          type: array
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        edit_action:
          $ref: "#/components/schemas/EditAction"
        edit_spans:
          anyOf:
            - additionalProperties:
                items:
                  $ref: "#/components/schemas/EditSpan"
                type: array
              type: object
            - type: "null"
          title: Edit Spans
        exported:
          title: Exported
          type: boolean
        filter:
          anyOf:
            - $ref: "#/components/schemas/FilterParams"
            - type: "null"
        has_next_page:
          title: Has Next Page
          type: boolean
        id:
          format: uuid4
          title: Id
          type: string
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        map_threshold:
          anyOf:
            - type: number
            - type: "null"
          title: Map Threshold
        new_label:
          anyOf:
            - type: string
            - type: "null"
          title: New Label
        note:
          anyOf:
            - type: string
            - type: "null"
          title: Note
        project_id:
          format: uuid4
          title: Project Id
          type: string
        reviewers:
          anyOf:
            - items:
                $ref: "#/components/schemas/EditReviewDB"
              type: array
            - type: "null"
          default: []
          title: Reviewers
        run_id:
          format: uuid4
          title: Run Id
          type: string
        sample_ids:
          default: []
          items:
            type: integer
          title: Sample Ids
          type: array
        search_string:
          anyOf:
            - type: string
            - type: "null"
          title: Search String
        shift_span_end_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span End Num Words
        shift_span_start_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span Start Num Words
        split:
          $ref: "#/components/schemas/Split"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        text_replacement:
          anyOf:
            - type: string
            - type: "null"
          title: Text Replacement
        use_regex:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Use Regex
      required:
        - edit_action
        - project_id
        - run_id
        - split
        - id
        - created_at
        - exported
        - content
        - has_next_page
      title: EditContent
      type: object
    EditCreateRequest:
      properties:
        edit_action:
          $ref: "#/components/schemas/EditAction"
        edit_spans:
          anyOf:
            - additionalProperties:
                items:
                  $ref: "#/components/schemas/EditSpan"
                type: array
              type: object
            - type: "null"
          title: Edit Spans
        filter:
          anyOf:
            - $ref: "#/components/schemas/FilterParams"
            - type: "null"
        map_threshold:
          anyOf:
            - type: number
            - type: "null"
          title: Map Threshold
        new_label:
          anyOf:
            - type: string
            - type: "null"
          title: New Label
        note:
          anyOf:
            - type: string
            - type: "null"
          title: Note
        sample_ids:
          default: []
          items:
            type: integer
          title: Sample Ids
          type: array
        search_string:
          anyOf:
            - type: string
            - type: "null"
          title: Search String
        shift_span_end_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span End Num Words
        shift_span_start_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span Start Num Words
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        text_replacement:
          anyOf:
            - type: string
            - type: "null"
          title: Text Replacement
        use_regex:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Use Regex
      required:
        - edit_action
      title: EditCreateRequest
      type: object
    EditCreateResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        edit_action:
          $ref: "#/components/schemas/EditAction"
        edit_spans:
          anyOf:
            - additionalProperties:
                items:
                  $ref: "#/components/schemas/EditSpan"
                type: array
              type: object
            - type: "null"
          title: Edit Spans
        exported:
          title: Exported
          type: boolean
        filter:
          anyOf:
            - $ref: "#/components/schemas/FilterParams"
            - type: "null"
        id:
          format: uuid4
          title: Id
          type: string
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        map_threshold:
          anyOf:
            - type: number
            - type: "null"
          title: Map Threshold
        new_label:
          anyOf:
            - type: string
            - type: "null"
          title: New Label
        note:
          anyOf:
            - type: string
            - type: "null"
          title: Note
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        sample_ids:
          default: []
          items:
            type: integer
          title: Sample Ids
          type: array
        search_string:
          anyOf:
            - type: string
            - type: "null"
          title: Search String
        shift_span_end_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span End Num Words
        shift_span_start_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span Start Num Words
        split:
          $ref: "#/components/schemas/Split"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        text_replacement:
          anyOf:
            - type: string
            - type: "null"
          title: Text Replacement
        use_regex:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Use Regex
      required:
        - edit_action
        - project_id
        - run_id
        - split
        - id
        - created_at
        - exported
      title: EditCreateResponse
      type: object
    EditDeleteResponse:
      properties:
        message:
          title: Message
          type: string
      required:
        - message
      title: EditDeleteResponse
      type: object
    EditExportDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        edit_id:
          format: uuid4
          title: Edit Id
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        user_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: User Id
      required:
        - id
        - edit_id
        - created_at
      title: EditExportDB
      type: object
    EditExportRequest:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        edit_ids:
          items:
            format: uuid4
            type: string
          title: Edit Ids
          type: array
        edit_overrides:
          anyOf:
            - items:
                $ref: "#/components/schemas/EditOverride"
              type: array
            - type: "null"
          default: []
          title: Edit Overrides
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        min_reviews:
          anyOf:
            - minimum: 0.0
              type: integer
            - type: "null"
          title: Min Reviews
        only_export_edited:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Only Export Edited
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - edit_ids
      title: EditExportRequest
      type: object
    EditGetResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        edit_action:
          $ref: "#/components/schemas/EditAction"
        edit_spans:
          anyOf:
            - additionalProperties:
                items:
                  $ref: "#/components/schemas/EditSpan"
                type: array
              type: object
            - type: "null"
          title: Edit Spans
        exported:
          title: Exported
          type: boolean
        filter:
          anyOf:
            - $ref: "#/components/schemas/FilterParams"
            - type: "null"
        id:
          format: uuid4
          title: Id
          type: string
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        map_threshold:
          anyOf:
            - type: number
            - type: "null"
          title: Map Threshold
        new_label:
          anyOf:
            - type: string
            - type: "null"
          title: New Label
        note:
          anyOf:
            - type: string
            - type: "null"
          title: Note
        project_id:
          format: uuid4
          title: Project Id
          type: string
        reviewers:
          items:
            $ref: "#/components/schemas/EditReviewDB"
          title: Reviewers
          type: array
        run_id:
          format: uuid4
          title: Run Id
          type: string
        sample_ids:
          default: []
          items:
            type: integer
          title: Sample Ids
          type: array
        search_string:
          anyOf:
            - type: string
            - type: "null"
          title: Search String
        shift_span_end_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span End Num Words
        shift_span_start_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span Start Num Words
        split:
          $ref: "#/components/schemas/Split"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        text_replacement:
          anyOf:
            - type: string
            - type: "null"
          title: Text Replacement
        use_regex:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Use Regex
      required:
        - edit_action
        - project_id
        - run_id
        - split
        - id
        - created_at
        - exported
      title: EditGetResponse
      type: object
    EditOverride:
      description:
        "A class for specifying conflict overrides during an edit export
        request.


        If 2 edits in an edit export request are making edits on conflicting sample
        IDs, (ie edit 1 removes samples

        (1,2,3,4) and edit 2 relabels sample 2, that would be a conflict), the override
        allows us to bypass the conflict.

        The sample_ids correspond to the samples in the dataset of the run being exported."
      properties:
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        edit_action:
          $ref: "#/components/schemas/EditAction"
        edit_spans:
          anyOf:
            - additionalProperties:
                items:
                  $ref: "#/components/schemas/EditSpan"
                type: array
              type: object
            - type: "null"
          title: Edit Spans
        filter:
          anyOf:
            - $ref: "#/components/schemas/FilterParams"
            - type: "null"
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        map_threshold:
          anyOf:
            - type: number
            - type: "null"
          title: Map Threshold
        new_label:
          anyOf:
            - type: string
            - type: "null"
          title: New Label
        note:
          anyOf:
            - type: string
            - type: "null"
          title: Note
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        sample_ids:
          items:
            type: integer
          title: Sample Ids
          type: array
        search_string:
          anyOf:
            - type: string
            - type: "null"
          title: Search String
        shift_span_end_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span End Num Words
        shift_span_start_num_words:
          anyOf:
            - type: integer
            - type: "null"
          title: Shift Span Start Num Words
        split:
          $ref: "#/components/schemas/Split"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        text_replacement:
          anyOf:
            - type: string
            - type: "null"
          title: Text Replacement
        use_regex:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Use Regex
      required:
        - edit_action
        - sample_ids
        - project_id
        - run_id
        - split
      title: EditOverride
      type: object
    EditReviewDB:
      description: Reviewer of an edit.
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
      required:
        - created_by
        - created_at
      title: EditReviewDB
      type: object
    EditRowData:
      properties:
        boxes:
          anyOf:
            - items:
                $ref: "#/components/schemas/BBox"
              type: array
            - type: "null"
          title: Boxes
        generated_output:
          anyOf:
            - type: string
            - type: "null"
          title: Generated Output
        gold:
          anyOf:
            - type: string
            - type: "null"
          title: Gold
        id:
          title: Id
          type: integer
        image:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Image
        input:
          anyOf:
            - type: string
            - type: "null"
          title: Input
        meta:
          anyOf:
            - type: object
            - type: "null"
          title: Meta
        pred:
          anyOf:
            - type: string
            - type: "null"
          title: Pred
        spans:
          anyOf:
            - items:
                $ref: "#/components/schemas/Span"
              type: array
            - type: "null"
          title: Spans
        target:
          anyOf:
            - type: string
            - type: "null"
          title: Target
        text:
          anyOf:
            - type: string
            - type: "null"
          title: Text
      required:
        - id
        - input
        - target
        - generated_output
      title: EditRowData
      type: object
    EditSpan:
      properties:
        end_index:
          title: End Index
          type: integer
        id:
          anyOf:
            - type: integer
            - type: "null"
          title: Id
        label:
          title: Label
          type: string
        start_index:
          title: Start Index
          type: integer
      required:
        - start_index
        - end_index
        - label
      title: EditSpan
      type: object
    EditSummary:
      properties:
        count:
          title: Count
          type: integer
        edit_action:
          $ref: "#/components/schemas/EditAction"
      required:
        - edit_action
        - count
      title: EditSummary
      type: object
    EmailVerificationRequest:
      properties:
        email:
          format: email
          title: Email
          type: string
      required:
        - email
      title: EmailVerificationRequest
      type: object
    EmbeddingData:
      properties:
        bbox:
          anyOf:
            - items:
                type: number
              type: array
            - type: "null"
          title: Bbox
        bleu:
          anyOf:
            - type: number
            - type: "null"
          title: Bleu
        cluster_id:
          anyOf:
            - type: integer
            - type: "null"
          title: Cluster Id
        confidence:
          anyOf:
            - type: number
            - type: "null"
          title: Confidence
        data_error_potential:
          anyOf:
            - type: number
            - type: "null"
          title: Data Error Potential
        drift_score:
          anyOf:
            - type: number
            - type: "null"
          title: Drift Score
        error_type:
          anyOf:
            - type: string
            - type: "null"
          title: Error Type
        generated_output:
          anyOf:
            - type: string
            - type: "null"
          title: Generated Output
        generated_uncertainty:
          anyOf:
            - type: number
            - type: "null"
          title: Generated Uncertainty
        gold:
          anyOf:
            - type: string
            - type: "null"
          title: Gold
        id:
          title: Id
          type: integer
        image:
          anyOf:
            - type: string
            - type: "null"
          title: Image
        input:
          anyOf:
            - type: string
            - type: "null"
          title: Input
        is_gold:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is Gold
        is_pred:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is Pred
        meta:
          anyOf:
            - type: object
            - type: "null"
          title: Meta
        perplexity:
          anyOf:
            - type: number
            - type: "null"
          title: Perplexity
        pred:
          anyOf:
            - type: string
            - type: "null"
          title: Pred
        rouge:
          anyOf:
            - type: number
            - type: "null"
          title: Rouge
        span_end:
          anyOf:
            - type: integer
            - type: "null"
          title: Span End
        span_start:
          anyOf:
            - type: integer
            - type: "null"
          title: Span Start
        target:
          anyOf:
            - type: string
            - type: "null"
          title: Target
        text_sample:
          anyOf:
            - type: string
            - type: "null"
          title: Text Sample
        x:
          title: X
          type: number
        y:
          title: Y
          type: number
      required:
        - id
        - x
        - y
      title: EmbeddingData
      type: object
    EmbeddingPointRequest:
      properties:
        circle:
          anyOf:
            - $ref: "#/components/schemas/Circle"
            - type: "null"
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        ids:
          items:
            type: integer
          title: Ids
          type: array
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        num_samples:
          default: 5
          title: Num Samples
          type: integer
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: EmbeddingPointRequest
      type: object
    EmbeddingPointResponse:
      properties:
        circle:
          anyOf:
            - $ref: "#/components/schemas/Circle"
            - type: "null"
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        embedding_data:
          items:
            $ref: "#/components/schemas/EmbeddingData"
          title: Embedding Data
          type: array
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        ids:
          items:
            type: integer
          title: Ids
          type: array
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        num_samples:
          default: 5
          title: Num Samples
          type: integer
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - embedding_data
      title: EmbeddingPointResponse
      type: object
    EmbeddingRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        include_text_sample:
          default: false
          title: Include Text Sample
          type: boolean
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        num_samples:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Samples
        only_meta_cols:
          default: false
          title: Only Meta Cols
          type: boolean
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        text_sample_length:
          anyOf:
            - type: integer
            - type: "null"
          default: 500
          title: Text Sample Length
        use_seed:
          default: true
          title: Use Seed
          type: boolean
      title: EmbeddingRequest
      type: object
    ErrorDistribution:
      properties:
        counts:
          default: []
          items:
            type: integer
          title: Counts
          type: array
        labels:
          default: []
          items:
            type: string
          title: Labels
          type: array
        percentage:
          default: 0.0
          title: Percentage
          type: number
      title: ErrorDistribution
      type: object
    EvaluateAlertDB:
      properties:
        alert_name:
          title: Alert Name
          type: string
        created_at:
          format: date-time
          title: Created At
          type: string
        description:
          title: Description
          type: string
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        field_name:
          title: Field Name
          type: string
        filter:
          discriminator:
            mapping:
              category: "#/components/schemas/CategoricalPromptFilterParam"
              range: "#/components/schemas/RangePromptFilterParam"
              value: "#/components/schemas/ValuePromptFilterParam"
            propertyName: filter_type
          oneOf:
            - $ref: "#/components/schemas/RangePromptFilterParam"
            - $ref: "#/components/schemas/ValuePromptFilterParam"
            - $ref: "#/components/schemas/CategoricalPromptFilterParam"
          title: Filter
        id:
          format: uuid4
          title: Id
          type: string
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - project_id
        - run_id
        - alert_name
        - filter
        - field_name
        - description
        - id
        - created_at
        - updated_at
      title: EvaluateAlertDB
      type: object
    EvaluateProjectSettings:
      properties:
        metric_weights_configuration:
          anyOf:
            - additionalProperties:
                $ref: "#/components/schemas/MetricWeight"
              type: object
            - type: "null"
          title: Metric Weights Configuration
        scorers_config:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfig"
            - type: "null"
      title: EvaluateProjectSettings
      type: object
    EvaluateRunRequest:
      examples:
        - project_name: my-evaluate-project
          run_name: my-evaluate-run
          scorers:
            - name: correctness
            - name: output_pii
          workflows:
            - created_at_ns: 1739318606075303000
              duration_ns: 0
              input: who is a smart LLM?
              metadata: {}
              name: llm
              output: I am!
              type: llm
        - project_id: 00000000-0000-0000-0000-000000000000
          registered_scorers:
            - name: my_registered_scorer
          run_name: my-evaluate-run
          workflows:
            - created_at_ns: 1739318606075321000
              duration_ns: 0
              input: who is a smart LLM?
              metadata: {}
              name: llm
              output: I am!
              type: llm
      properties:
        generated_scorers:
          description: List of generated scorers to enable.
          items:
            $ref: "#/components/schemas/GeneratedScorerConfig"
          title: Generated Scorers
          type: array
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Evaluate Project ID to which the run should be associated.
          title: Project Id
        project_name:
          anyOf:
            - type: string
            - type: "null"
          description:
            Evaluate Project name to which the run should be associated.
            If the project does not exist, it will be created.
          title: Project Name
        registered_scorers:
          description: List of registered scorers to enable.
          items:
            $ref: "#/components/schemas/RegisteredScorerConfig"
          title: Registered Scorers
          type: array
        run_name:
          anyOf:
            - type: string
            - type: "null"
          description:
            Name of the run. If no name is provided, a timestamp-based
            name will be generated.
          title: Run Name
        scorers:
          description: List of Galileo scorers to enable.
          items:
            discriminator:
              mapping:
                agentic_workflow_success: "#/components/schemas/AgenticWorkflowSuccessScorer"
                bleu: "#/components/schemas/BleuScorer"
                chunk_attribution_utilization: "#/components/schemas/ChunkAttributionUtilizationScorer"
                completeness: "#/components/schemas/CompletenessScorer"
                context_adherence: "#/components/schemas/ContextAdherenceScorer"
                context_relevance: "#/components/schemas/ContextRelevanceScorer"
                correctness: "#/components/schemas/CorrectnessScorer"
                ground_truth_adherence: "#/components/schemas/GroundTruthAdherenceScorer"
                input_pii: "#/components/schemas/InputPIIScorer"
                input_sexist: "#/components/schemas/InputSexistScorer"
                input_tone: "#/components/schemas/InputToneScorer"
                input_toxicity: "#/components/schemas/InputToxicityScorer"
                instruction_adherence: "#/components/schemas/InstructionAdherenceScorer"
                output_pii: "#/components/schemas/OutputPIIScorer"
                output_sexist: "#/components/schemas/OutputSexistScorer"
                output_tone: "#/components/schemas/OutputToneScorer"
                output_toxicity: "#/components/schemas/OutputToxicityScorer"
                prompt_injection: "#/components/schemas/PromptInjectionScorer"
                prompt_perplexity: "#/components/schemas/PromptPerplexityScorer"
                rouge: "#/components/schemas/RougeScorer"
                tool_error_rate: "#/components/schemas/ToolErrorRateScorer"
                tool_selection_quality: "#/components/schemas/ToolSelectionQualityScorer"
                uncertainty: "#/components/schemas/UncertaintyScorer"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/AgenticWorkflowSuccessScorer"
              - $ref: "#/components/schemas/BleuScorer"
              - $ref: "#/components/schemas/ChunkAttributionUtilizationScorer"
              - $ref: "#/components/schemas/CompletenessScorer"
              - $ref: "#/components/schemas/ContextAdherenceScorer"
              - $ref: "#/components/schemas/ContextRelevanceScorer"
              - $ref: "#/components/schemas/CorrectnessScorer"
              - $ref: "#/components/schemas/GroundTruthAdherenceScorer"
              - $ref: "#/components/schemas/InputPIIScorer"
              - $ref: "#/components/schemas/InputSexistScorer"
              - $ref: "#/components/schemas/InputToneScorer"
              - $ref: "#/components/schemas/InputToxicityScorer"
              - $ref: "#/components/schemas/InstructionAdherenceScorer"
              - $ref: "#/components/schemas/OutputPIIScorer"
              - $ref: "#/components/schemas/OutputSexistScorer"
              - $ref: "#/components/schemas/OutputToneScorer"
              - $ref: "#/components/schemas/OutputToxicityScorer"
              - $ref: "#/components/schemas/PromptInjectionScorer"
              - $ref: "#/components/schemas/PromptPerplexityScorer"
              - $ref: "#/components/schemas/RougeScorer"
              - $ref: "#/components/schemas/ToolErrorRateScorer"
              - $ref: "#/components/schemas/ToolSelectionQualityScorer"
              - $ref: "#/components/schemas/UncertaintyScorer"
          title: Scorers
          type: array
        workflows:
          description: List of workflows to include in the run.
          items:
            discriminator:
              mapping:
                agent: "#/components/schemas/AgentStep"
                chain: "#/components/schemas/ChainStep"
                llm: "#/components/schemas/LlmStep"
                retriever: "#/components/schemas/RetrieverStep"
                tool: "#/components/schemas/ToolStep"
                workflow: "#/components/schemas/WorkflowStep"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowStep"
              - $ref: "#/components/schemas/ChainStep"
              - $ref: "#/components/schemas/LlmStep"
              - $ref: "#/components/schemas/RetrieverStep"
              - $ref: "#/components/schemas/ToolStep"
              - $ref: "#/components/schemas/AgentStep"
          minItems: 1
          title: Workflows
          type: array
      required:
        - workflows
      title: EvaluateRunRequest
      type: object
    EvaluateRunResponse:
      properties:
        message:
          title: Message
          type: string
        project_id:
          format: uuid4
          title: Project Id
          type: string
        project_name:
          title: Project Name
          type: string
        records_count:
          title: Records Count
          type: integer
        run_id:
          format: uuid4
          title: Run Id
          type: string
        run_name:
          title: Run Name
          type: string
        workflows_count:
          title: Workflows Count
          type: integer
      required:
        - message
        - project_id
        - project_name
        - run_id
        - run_name
        - workflows_count
        - records_count
      title: EvaluateRunResponse
      type: object
    EvaluateRunResultsRequest:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        project_name:
          anyOf:
            - type: string
            - type: "null"
          title: Project Name
        run_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Run Id
        run_name:
          anyOf:
            - type: string
            - type: "null"
          title: Run Name
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: EvaluateRunResultsRequest
      type: object
    ExecutionStatus:
      description: Status of the execution.
      enum:
        - triggered
        - failed
        - error
        - timeout
        - paused
        - not_triggered
      title: ExecutionStatus
      type: string
    ExperimentCreateRequest:
      properties:
        name:
          minLength: 1
          title: Name
          type: string
      required:
        - name
      title: ExperimentCreateRequest
      type: object
    ExperimentResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        id:
          format: uuid4
          title: Id
          type: string
        name:
          title: Name
          type: string
        project_id:
          format: uuid4
          title: Project Id
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_at
        - updated_at
        - name
        - project_id
      title: ExperimentResponse
      type: object
    ExperimentUpdateRequest:
      properties:
        name:
          minLength: 1
          title: Name
          type: string
      required:
        - name
      title: ExperimentUpdateRequest
      type: object
    ExportRequest:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: ExportRequest
      type: object
    ExtraAlertFilters:
      description: "Extra filters for alerts.


        For simplicity of use, all types should be str to make filtering in the DB
        easier"
      properties:
        map_threshold:
          anyOf:
            - type: string
            - type: "null"
          title: Map Threshold
      title: ExtraAlertFilters
      type: object
    FactualityTemplate:
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of what the metric should do.
          title: Metric Description
        metric_few_shot_examples:
          default:
            - evaluating_response:
                "{\n    \"explanation\": \"The response makes several\
                \ claims about the meaning of \\\"en passant\\\" in chess, then provides\
                \ an illustrative example. Let's evaluate the claims first, then the\
                \ example.\\n\\n# Claims\\n\\n1. The response claims that 'en passant'\
                \ is a special rule in chess that allows a pawn to capture an enemy\
                \ pawn that has moved two squares forward from its initial position,\
                \ as if it had only moved one square forward. This claim is factually\
                \ correct, as 'en passant' indeed allows for such a capture under specified\
                \ conditions.\\n\\n2. The response also claims that this capture can\
                \ only be done on the ensuing move and only if the capturing pawn was\
                \ on its fifth rank at the time. This is also factually correct, as\
                \ one of the requirements for the 'en passant' capture is that the capturing\
                \ pawn must be on the fifth rank when the opponent's pawn moves two\
                \ squares forward.\\n\\n# Illustrative Example\\n\\nFor the purposes\
                \ of this metric, we'll say that a chess example like this one is \\\
                \"correct\\\" if\\n\\n- All the moves are valid according to the rules\
                \ of chess\\n- The example demonstrates what it is intended to demonstrate\
                \ (in this case, the en passant rule)\\n\\nTo check these conditions,\
                \ let's waslk through the example one move at a time, with a clear description\
                \ of the board state after each move.\\n\\n### Initial Position\\nThe\
                \ game starts with the standard initial setup of the chessboard.\\n\\\
                n### Move 1\\n**1. e4 e5**\\n\\n- **White moves pawn from e2 to e4.**\\\
                n  This opens lines for the bishop and queen and controls the center.\\\
                n- **Black moves pawn from e7 to e5.**\\n  This mirrors White's move,\
                \ also controlling the center.\\n\\n**Board State:**\\n```\\nr n b q\
                \ k b n r\\np p p     p p p\\n\\n        P\\n        p\\n\\nP P P  \
                \   P P P\\nR N B Q K B N R\\n```\\n\\n### Move 2\\n**2. d4 d5**\\n\\\
                n- **White moves pawn from d2 to d4.**\\n  Now, White controls more\
                \ central space and threatens the pawn on e5.\\n- **Black moves pawn\
                \ from d7 to d5.**\\n  Black counters by challenging the center with\
                \ another pawn.\\n\\n**Board State:**\\n```\\nr n b q k b n r\\np p\
                \   p   p p p\\n\\n        P\\n  p P p P\\n\\nP   P     P P P\\nR N\
                \ B Q K B N R\\n```\\n\\n### Move 3\\n**3. exd5 exd4**\\n\\n- **White\
                \ captures the pawn on d5 with the pawn from e4 (exd5).**\\n  Now White\
                \ has a pawn on d5.\\n- **Black incorrectly moves to exd4.**\\n  According\
                \ to the rules of chess, this is an illegal move because the pawn on\
                \ e5 cannot capture a pawn on d4 directly. The pawn on d4 does not exist;\
                \ the move should capture diagonally if there is a piece or pawn on\
                \ d4.\\n\\nSince there is an error in Move 3, the illustrative example\
                \ is not factually correct according to the criteria listed above. Therefore,\
                \ the example as a whole is not entirely factually correct.\",\n   \
                \ \"was_factual\": false\n}"
              generation_prompt_and_response: 'The prompt was:


                ```

                I have heard people talking about the chess move "en passant", but I
                don''t know what it is and how it works. Could you explain it to me?

                ```


                The response was:


                ```

                Certainly! "En passant" is a special rule in chess that allows a pawn
                to capture an enemy pawn that has moved two squares forward from its
                initial position, as if it had only moved one square forward. This can
                only be done on the ensuing move, and only if the capturing pawn was
                on its fifth rank at the time the enemy pawn made its double-move. Here''s
                an example to illustrate:


                1. e4 e5

                2. d4 d5 (this pawn now threatens to capture on e4 if White moves their
                pawn)

                3. exd5 (White captures the threatening pawn) exd4 (Black captures in
                response)

                4. c3 (White moves another pawn, but now Black has the opportunity to
                use "en passant") dxc3 (Black captures the pawn on d4, as if it had
                only moved one square forward)

                5. Nxc3


                I hope that helps!

                ```


                Respond with a JSON object having two fields: `explanation` (string)
                and `was_factual` (boolean). Everything in your response should be valid
                JSON.'
            - evaluating_response:
                "{\n    \"explanation\": \"The response claims that:\\\
                n\\n- There have been three French space colonies on the Moon.\\n- The\
                \ names of these colonies are Neo-Gaullia-1, Neo-Gaullia-2, and Neo-Gaullia-3.\\\
                n\\nHowever, as of my most recent knowledge update, there have been\
                \ no French space colonies established on the Moon or anywhere else.\
                \ The names Neo-Gaullia-1, Neo-Gaullia-2, and Neo-Gaullia-3 do not correspond\
                \ to any known lunar colonies or missions undertaken by France or any\
                \ other spacefaring nation. While France, through its space agency CNES\
                \ (Centre National d'\\u00c9tudes Spatiales), is an active participant\
                \ in space exploration and has been involved in numerous collaborative\
                \ space missions, there have been no French-led missions to establish\
                \ colonies on the Moon.\",\n    \"was_factual\": false\n}"
              generation_prompt_and_response: "The prompt was:


                ```

                Answer based on the context below:


                Title: Neo-Gaullia-3

                Passage: Neo-Gaullia-3 is a French space colony spanning a large region
                of the Moon. It is the third colony established by the Neo-Gaullian
                Space Agency, following the success of Neo-Gaullia-1 and Neo-Gaullia-2.
                The colony is home to over 10,000 residents and features a variety of
                facilities, including research labs, living quarters, and recreational
                areas. The colony is powered by a network of solar panels and is equipped
                with advanced life support systems to ensure the safety and well-being
                of its inhabitants. Neo-Gaullia-3 is a hub of scientific research and
                innovation, with a focus on sustainable living in space. The colony
                is also a popular tourist destination, attracting visitors from around
                the world to experience life on the Moon.


                Question: How many French space colonies have existed on the Moon?

                ```


                The response was:


                ```

                There have been three French space colonies on the Moon: Neo-Gaullia-1,
                Neo-Gaullia-2, and Neo-Gaullia-3.

                ```


                Respond with a JSON object having two fields: `explanation` (string)
                and `was_factual` (boolean). Everything in your response should be valid
                JSON."
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          default:
            "# Task\n\nYou will be given a prompt that was sent to a large\
            \ language model (LLM), and the LLM's response. Your task is to assess\
            \ whether the response is factually correct.\n\n## Task output format\n\
            \nYou must respond in the following JSON format:\n\n```\n{\n    \"explanation\"\
            : string\n    \"was_factual\": boolean\n}\n```\n\n\"explanation\": Your\
            \ step-by-step reasoning process. List out the claims made in the response,\
            \ and for each claim, provide a detailed explanation of why that claim\
            \ is or is not factual.\n\n\"was_factual\": `true` if the response was\
            \ completely factually correct according to the instructions above, `false`\
            \ otherwise.\n\nYou must respond with a valid JSON string.\n\n## Task\
            \ guidelines\n\n### Input format\n\nIn some cases, the prompt may include\
            \ multiple messages of chat history. If so, each message will begin with\
            \ one of the following prefixes:\n\n- \"System: \"\n- \"Human: \"\n- \"\
            AI: \"\n\n### How to determine the value of `was_factual`\n\n- was_factual\
            \ should be false if anything in the response is factually incorrect,\
            \ and true otherwise.\n- If the response omits some useful information,\
            \ but does not include any falsehoods, was_factual should be true.\n-\
            \ The prompt itself may contain false information. If the response repeats\
            \ this false information, was_factual should be false. In other words,\
            \ do not assume that the prompt is factually correct when evaluating the\
            \ response.\n- If the prompt and response involve a domain where the concept\
            \ of \"factual accuracy\" doesn't strictly apply, assess whatever quality\
            \ of the response is most intuitively similar to factual accuracy. For\
            \ example, if the prompt asks the LLM to write code, assess whether the\
            \ code is free of syntax errors and implements the intended logic.\n\n\
            ### Writing the explanation\n\n- As stated above, a typical explanation\
            \ should list out the claims made in the response, and for each claim,\
            \ provide a detailed explanation of why that claim is or is not factual.\n\
            - If the response doesn't make claims per se, break down the response\
            \ into constituent parts in the most natural way given its content. For\
            \ example, in code generation tasks, you might break down the response\
            \ into individual functions or lines of code.\n- Work step by step, and\
            \ do not give an overall assessment of the response until the end of your\
            \ explanation."
          title: Metric System Prompt
          type: string
        template:
          default: 'The prompt was:


            ```

            {query}

            ```


            The response was:


            ```

            {response}

            ```


            Respond with a JSON object having two fields: `explanation` (string) and
            `was_factual` (boolean). Everything in your response should be valid JSON.


            REMEMBER: if the prompt asks the LLM to compose an answer on the basis
            of a "context" or other reference text or texts, you MUST IGNORE these
            texts when evaluating the response. Evaluate the response as though the
            reference texts were NOT provided. Do NOT refer to these texts in your
            evaluation.'
          title: Template
          type: string
        value_field_name:
          default: was_factual
          title: Value Field Name
          type: string
      title: FactualityTemplate
      type: object
    FeatureColumnsResponse:
      properties:
        feature_names:
          items:
            type: string
          title: Feature Names
          type: array
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
      required:
        - project_id
        - run_id
        - feature_names
      title: FeatureColumnsResponse
      type: object
    FeedbackAggregate:
      properties:
        aggregate:
          discriminator:
            mapping:
              like_dislike: "#/components/schemas/LikeDislikeAggregate"
              score: "#/components/schemas/ScoreAggregate"
              star: "#/components/schemas/StarAggregate"
              tags: "#/components/schemas/TagsAggregate"
            propertyName: feedback_type
          oneOf:
            - $ref: "#/components/schemas/LikeDislikeAggregate"
            - $ref: "#/components/schemas/StarAggregate"
            - $ref: "#/components/schemas/ScoreAggregate"
            - $ref: "#/components/schemas/TagsAggregate"
          title: Aggregate
      required:
        - aggregate
      title: FeedbackAggregate
      type: object
    FeedbackRatingCreate:
      properties:
        explanation:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Explanation
        rating:
          discriminator:
            mapping:
              like_dislike: "#/components/schemas/LikeDislikeRating"
              score: "#/components/schemas/ScoreRating"
              star: "#/components/schemas/StarRating"
              tags: "#/components/schemas/TagsRating"
              text: "#/components/schemas/TextRating"
            propertyName: feedback_type
          oneOf:
            - $ref: "#/components/schemas/LikeDislikeRating"
            - $ref: "#/components/schemas/StarRating"
            - $ref: "#/components/schemas/ScoreRating"
            - $ref: "#/components/schemas/TagsRating"
            - $ref: "#/components/schemas/TextRating"
          title: Rating
      required:
        - rating
      title: FeedbackRatingCreate
      type: object
    FeedbackRatingDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        explanation:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Explanation
        rating:
          discriminator:
            mapping:
              like_dislike: "#/components/schemas/LikeDislikeRating"
              score: "#/components/schemas/ScoreRating"
              star: "#/components/schemas/StarRating"
              tags: "#/components/schemas/TagsRating"
              text: "#/components/schemas/TextRating"
            propertyName: feedback_type
          oneOf:
            - $ref: "#/components/schemas/LikeDislikeRating"
            - $ref: "#/components/schemas/StarRating"
            - $ref: "#/components/schemas/ScoreRating"
            - $ref: "#/components/schemas/TagsRating"
            - $ref: "#/components/schemas/TextRating"
          title: Rating
      required:
        - rating
        - created_at
        - created_by
      title: FeedbackRatingDB
      type: object
    FeedbackRatingOperationType:
      description: Operation type for bulk feedback rating operations.
      enum:
        - create
        - delete
      title: FeedbackRatingOperationType
      type: string
    FeedbackTemplateCreate:
      properties:
        constraints:
          discriminator:
            mapping:
              like_dislike: "#/components/schemas/LikeDislikeConstraints"
              score: "#/components/schemas/ScoreConstraints"
              star: "#/components/schemas/StarConstraints"
              tags: "#/components/schemas/TagsConstraints"
              text: "#/components/schemas/TextConstraints"
            propertyName: feedback_type
          oneOf:
            - $ref: "#/components/schemas/LikeDislikeConstraints"
            - $ref: "#/components/schemas/StarConstraints"
            - $ref: "#/components/schemas/ScoreConstraints"
            - $ref: "#/components/schemas/TagsConstraints"
            - $ref: "#/components/schemas/TextConstraints"
          title: Constraints
        criteria:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Criteria
        include_explanation:
          default: false
          title: Include Explanation
          type: boolean
        name:
          maxLength: 255
          minLength: 1
          title: Name
          type: string
      required:
        - name
        - constraints
      title: FeedbackTemplateCreate
      type: object
    FeedbackTemplateDB:
      properties:
        constraints:
          discriminator:
            mapping:
              like_dislike: "#/components/schemas/LikeDislikeConstraints"
              score: "#/components/schemas/ScoreConstraints"
              star: "#/components/schemas/StarConstraints"
              tags: "#/components/schemas/TagsConstraints"
              text: "#/components/schemas/TextConstraints"
            propertyName: feedback_type
          oneOf:
            - $ref: "#/components/schemas/LikeDislikeConstraints"
            - $ref: "#/components/schemas/StarConstraints"
            - $ref: "#/components/schemas/ScoreConstraints"
            - $ref: "#/components/schemas/TagsConstraints"
            - $ref: "#/components/schemas/TextConstraints"
          title: Constraints
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        criteria:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Criteria
        id:
          format: uuid4
          title: Id
          type: string
        include_explanation:
          title: Include Explanation
          type: boolean
        name:
          maxLength: 255
          minLength: 1
          title: Name
          type: string
      required:
        - name
        - include_explanation
        - constraints
        - id
        - created_at
        - created_by
      title: FeedbackTemplateDB
      type: object
    FeedbackTemplateUpdate:
      properties:
        criteria:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Criteria
        name:
          maxLength: 255
          minLength: 1
          title: Name
          type: string
      required:
        - name
        - criteria
      title: FeedbackTemplateUpdate
      type: object
    FewShotExample:
      description: Few-shot example for a chainpoll metric prompt.
      properties:
        evaluating_response:
          title: Evaluating Response
          type: string
        generation_prompt_and_response:
          title: Generation Prompt And Response
          type: string
      required:
        - generation_prompt_and_response
        - evaluating_response
      title: FewShotExample
      type: object
    FieldType:
      enum:
        - int
        - float
        - string
        - array
        - bool
      title: FieldType
      type: string
    FileType:
      enum:
        - csv
        - json
        - parquet
        - arrow
        - zip
      title: FileType
      type: string
    FilterOptionsResponse:
      properties:
        filter_options:
          additionalProperties:
            items:
              type: string
            type: array
          title: Filter Options
          type: object
      title: FilterOptionsResponse
      type: object
    FilterParams:
      properties:
        cbo_clusters:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Cbo Clusters
        class_filter:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Class Filter
        cluster_ids:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Cluster Ids
        confidence_high:
          anyOf:
            - type: number
            - type: "null"
          title: Confidence High
        confidence_low:
          anyOf:
            - type: number
            - type: "null"
          title: Confidence Low
        correctly_classified:
          anyOf:
            - type: boolean
            - type: "null"
          title: Correctly Classified
        data_embs:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Data Embs
        data_error_potential_high:
          anyOf:
            - type: number
            - type: "null"
          title: Data Error Potential High
        data_error_potential_low:
          anyOf:
            - type: number
            - type: "null"
          title: Data Error Potential Low
        drift_score_threshold:
          anyOf:
            - type: number
            - type: "null"
          title: Drift Score Threshold
        exclude_ids:
          default: []
          items:
            type: integer
          title: Exclude Ids
          type: array
        gold_filter:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Gold Filter
        ids:
          default: []
          items:
            type: integer
          title: Ids
          type: array
        image_ids:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Image Ids
        is_drifted:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is Drifted
        is_edited:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is Edited
        is_otb:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is Otb
        lasso:
          anyOf:
            - $ref: "#/components/schemas/LassoSelection"
            - type: "null"
        likely_mislabeled:
          anyOf:
            - type: boolean
            - type: "null"
          title: Likely Mislabeled
        likely_mislabeled_dep_percentile:
          anyOf:
            - maximum: 100.0
              minimum: 0.0
              type: integer
            - type: "null"
          default: 0
          title: Likely Mislabeled Dep Percentile
        meta_filter:
          anyOf:
            - items:
                $ref: "#/components/schemas/MetaFilter"
              type: array
            - type: "null"
          title: Meta Filter
        misclassified_only:
          anyOf:
            - type: boolean
            - type: "null"
          title: Misclassified Only
        num_similar_to:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Similar To
        pred_filter:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Pred Filter
        regex:
          anyOf:
            - type: boolean
            - type: "null"
          title: Regex
        similar_to:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Similar To
        span_regex:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Span Regex
        span_sample_ids:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Span Sample Ids
        span_text:
          anyOf:
            - type: string
            - type: "null"
          title: Span Text
        text_pat:
          anyOf:
            - type: string
            - type: "null"
          title: Text Pat
      title: FilterParams
      type: object
    FilterPercentageRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: FilterPercentageRequest
      type: object
    FilterPercentageResponse:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        feature_noise_pct:
          anyOf:
            - type: number
            - type: "null"
          title: Feature Noise Pct
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        gold_box_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Gold Box Count
        gold_box_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Gold Box Percentage
        gold_polygon_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Gold Polygon Count
        gold_polygon_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Gold Polygon Percentage
        label_noise_pct:
          anyOf:
            - type: number
            - type: "null"
          title: Label Noise Pct
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        percentage:
          title: Percentage
          type: number
        pred_box_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Pred Box Count
        pred_box_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Pred Box Percentage
        pred_polygon_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Pred Polygon Count
        pred_polygon_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Pred Polygon Percentage
        sample_count:
          title: Sample Count
          type: integer
        sample_drifted_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Sample Drifted Percentage
        sample_easy_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Sample Easy Percentage
        sample_error_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Sample Error Percentage
        sample_hard_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Sample Hard Percentage
        sample_misclassified_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Sample Misclassified Percentage
        sample_mislabeled_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Sample Mislabeled Percentage
        sample_otb_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Sample Otb Percentage
        span_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Span Count
        span_percentage:
          anyOf:
            - type: number
            - type: "null"
          title: Span Percentage
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - percentage
        - sample_count
      title: FilterPercentageResponse
      type: object
    FiltersRequestBody:
      properties:
        filters:
          items:
            $ref: "#/components/schemas/QueryFilterV1"
          title: Filters
          type: array
      title: FiltersRequestBody
      type: object
    GenAIProjectSettings:
      properties:
        alerts_configuration:
          anyOf:
            - $ref: "#/components/schemas/AlertsConfiguration"
            - type: "null"
        scorers_config:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfig"
            - type: "null"
      title: GenAIProjectSettings
      type: object
    GeneratedScorer:
      properties:
        id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Id
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
      title: GeneratedScorer
      type: object
    GeneratedScorerAction:
      enum:
        - update
        - delete
      title: GeneratedScorerAction
      type: string
    GeneratedScorerConfig:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          description: Name of the scorer to enable.
          title: Name
          type: string
      required:
        - name
      title: GeneratedScorerConfig
      type: object
    GeneratedScorerConfiguration:
      properties:
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          default: GPT-4o mini
          title: Model Alias
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          default: 3
          title: Num Judges
      title: GeneratedScorerConfiguration
      type: object
    GeneratedScorerResponse:
      properties:
        chain_poll_template:
          $ref: "#/components/schemas/ChainPollTemplate"
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        instructions:
          title: Instructions
          type: string
        name:
          title: Name
          type: string
        scoreable_node_types:
          anyOf:
            - items:
                $ref: "#/components/schemas/NodeType"
              type: array
            - type: "null"
          title: Scoreable Node Types
        scorer_configuration:
          $ref: "#/components/schemas/GeneratedScorerConfiguration"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_by
        - created_at
        - updated_at
        - name
        - instructions
        - scoreable_node_types
        - scorer_configuration
        - chain_poll_template
      title: GeneratedScorerResponse
      type: object
    GeneratedScorerTaskResultResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        result:
          anyOf:
            - $ref: "#/components/schemas/AutoGenResult"
            - $ref: "#/components/schemas/GeneratedScorerValidationResult"
            - type: string
            - type: "null"
          title: Result
        result_type:
          $ref: "#/components/schemas/GeneratedScorerTaskResultType"
        status:
          $ref: "#/components/schemas/GeneratedScorerTaskResultStatus"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_at
        - updated_at
        - status
        - result_type
      title: GeneratedScorerTaskResultResponse
      type: object
    GeneratedScorerTaskResultStatus:
      enum:
        - pending
        - completed
        - failed
      title: GeneratedScorerTaskResultStatus
      type: string
    GeneratedScorerTaskResultType:
      enum:
        - scorer_auto_gen
        - scorer_validation
      title: GeneratedScorerTaskResultType
      type: string
    GeneratedScorerValidationRequest:
      properties:
        chain_poll_template:
          $ref: "#/components/schemas/ChainPollTemplate"
        query:
          title: Query
          type: string
        response:
          title: Response
          type: string
        scorer_configuration:
          $ref: "#/components/schemas/GeneratedScorerConfiguration"
      required:
        - query
        - response
        - scorer_configuration
        - chain_poll_template
      title: GeneratedScorerValidationRequest
      type: object
    GeneratedScorerValidationResponse:
      properties:
        task_result_id:
          format: uuid4
          title: Task Result Id
          type: string
      required:
        - task_result_id
      title: GeneratedScorerValidationResponse
      type: object
    GeneratedScorerValidationResult:
      description: Result of a generated scorer validation job.
      properties:
        explanation:
          anyOf:
            - type: string
            - type: "null"
          title: Explanation
        rating:
          anyOf:
            - type: number
            - type: "null"
          title: Rating
      required:
        - rating
        - explanation
      title: GeneratedScorerValidationResult
      type: object
    GenerationRequest:
      properties:
        instructions:
          title: Instructions
          type: string
      required:
        - instructions
      title: GenerationRequest
      type: object
    GenerationResponse:
      properties:
        task_result_id:
          format: uuid4
          title: Task Result Id
          type: string
      required:
        - task_result_id
      title: GenerationResponse
      type: object
    GenericAction:
      enum:
        - generic_create
        - generic_read
        - generic_update
        - generic_delete
      title: GenericAction
      type: string
    GenericPermission:
      description:
        "Generic permissions describe what a user GENERALLY can and cannot
        do.


        The actions are not specific to a resource instance (e.g. create). More fine-grained
        permissions should also be set

        in the authorization policies."
      properties:
        action:
          $ref: "#/components/schemas/GenericAction"
        allowed:
          title: Allowed
          type: boolean
        message:
          anyOf:
            - type: string
            - type: "null"
          title: Message
        resource:
          $ref: "#/components/schemas/ResourceKind"
      required:
        - resource
        - action
        - allowed
      title: GenericPermission
      type: object
    GetApiKeyResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        description:
          title: Description
          type: string
        expires_at:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          description: Expiry date for the API key
          title: Expires At
        id:
          format: uuid4
          title: Id
          type: string
        last_used:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Last Used
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        project_role:
          anyOf:
            - $ref: "#/components/schemas/CollaboratorRole"
            - type: "null"
        truncated:
          title: Truncated
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_at
        - updated_at
        - description
        - created_by
        - truncated
      title: GetApiKeyResponse
      type: object
    GetObserveWorkflowsRequest:
      properties:
        filters:
          items:
            discriminator:
              mapping:
                user_metadata: "#/components/schemas/UserMetadataFilter"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/UserMetadataFilter"
          title: Filters
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: GetObserveWorkflowsRequest
      type: object
    GetPresignedUrlResponse:
      properties:
        url:
          title: Url
          type: string
      required:
        - url
      title: GetPresignedUrlResponse
      type: object
    GetProjectsPaginatedResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        projects:
          items:
            $ref: "#/components/schemas/ProjectDB"
          title: Projects
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - projects
      title: GetProjectsPaginatedResponse
      type: object
    GetPromptRowsColumnarResponse:
      properties:
        columns:
          items:
            $ref: "#/components/schemas/PromptRowColumn"
          title: Columns
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        num_filtered_rows:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Filtered Rows
        num_rows:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Rows
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: GetPromptRowsColumnarResponse
      type: object
    GetPromptRowsResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        rows:
          items:
            $ref: "#/components/schemas/PromptRow"
          title: Rows
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: GetPromptRowsResponse
      type: object
    GetPromptRun:
      properties:
        average_bleu:
          anyOf:
            - type: number
            - type: "null"
          title: Average Bleu
        average_cost:
          anyOf:
            - type: number
            - type: "null"
          title: Average Cost
        average_hallucination:
          anyOf:
            - type: number
            - type: "null"
          title: Average Hallucination
        average_latency:
          anyOf:
            - type: number
            - type: "null"
          title: Average Latency
        average_rouge:
          anyOf:
            - type: number
            - type: "null"
          title: Average Rouge
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        dataset_hash:
          anyOf:
            - type: string
            - type: "null"
          title: Dataset Hash
        dataset_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Dataset Id
        hallucination_severity:
          default: 0
          maximum: 2.0
          minimum: 0.0
          title: Hallucination Severity
          type: integer
        id:
          format: uuid4
          title: Id
          type: string
        job_id:
          format: uuid4
          title: Job Id
          type: string
        job_status:
          $ref: "#/components/schemas/JobStatus"
        last_updated_by:
          format: uuid4
          title: Last Updated By
          type: string
        metrics:
          additionalProperties:
            anyOf:
              - type: number
              - type: integer
              - type: string
              - $ref: "#/components/schemas/FeedbackAggregate"
              - type: "null"
          title: Metrics
          type: object
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          title: Model Alias
        name:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Name
        num_samples:
          title: Num Samples
          type: integer
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        prompt_customized_scorers_configuration:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    _customized_agentic_workflow_success: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                    _customized_chunk_attribution_utilization_gpt: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                    _customized_completeness_gpt: "#/components/schemas/CustomizedCompletenessGPTScorer"
                    _customized_factuality: "#/components/schemas/CustomizedFactualityGPTScorer"
                    _customized_ground_truth_adherence: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                    _customized_groundedness: "#/components/schemas/CustomizedGroundednessGPTScorer"
                    _customized_instruction_adherence: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                    _customized_tool_error_rate: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
                    _customized_tool_selection_quality: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  propertyName: scorer_name
                oneOf:
                  - $ref: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                  - $ref: "#/components/schemas/CustomizedCompletenessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedFactualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundednessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
              type: array
            - type: "null"
          title: Prompt Customized Scorers Configuration
        prompt_generated_scorers_configuration:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Prompt Generated Scorers Configuration
        prompt_registered_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/RegisteredScorer"
              type: array
            - type: "null"
          title: Prompt Registered Scorers Configuration
        prompt_scorers_configuration:
          $ref: "#/components/schemas/ScorersConfiguration"
        prompt_settings:
          anyOf:
            - $ref: "#/components/schemas/PromptRunSettings"
            - type: "null"
        run_tags:
          items:
            $ref: "#/components/schemas/RunTagDB"
          title: Run Tags
          type: array
        task_type:
          anyOf:
            - $ref: "#/components/schemas/TaskType"
            - type: "null"
        template_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Template Id
        template_version:
          anyOf:
            - type: integer
            - type: "null"
          title: Template Version
        template_version_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Template Version Id
        template_version_selected:
          anyOf:
            - type: boolean
            - type: "null"
          title: Template Version Selected
        total_cost:
          anyOf:
            - type: number
            - type: "null"
          title: Total Cost
        total_responses:
          default: 0
          title: Total Responses
          type: integer
        updated_at:
          format: date-time
          title: Updated At
          type: string
        winner:
          title: Winner
          type: boolean
      required:
        - created_by
        - num_samples
        - winner
        - id
        - created_at
        - updated_at
        - last_updated_by
        - job_id
        - job_status
      title: GetPromptRun
      type: object
    GetPromptRunColumnsResponse:
      properties:
        columns:
          items:
            $ref: "#/components/schemas/PromptRunColumn"
          title: Columns
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        num_filtered_rows:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Filtered Rows
        num_rows:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Rows
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: GetPromptRunColumnsResponse
      type: object
    GetPromptRunsResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        runs:
          items:
            $ref: "#/components/schemas/GetPromptRun"
          title: Runs
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: GetPromptRunsResponse
      type: object
    GetSplitsResponse:
      properties:
        inference_comparison_splits:
          items:
            $ref: "#/components/schemas/Split"
          title: Inference Comparison Splits
          type: array
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        splits:
          items:
            $ref: "#/components/schemas/Split"
          title: Splits
          type: array
      required:
        - project_id
        - run_id
        - splits
        - inference_comparison_splits
      title: GetSplitsResponse
      type: object
    GetTokenResponse:
      properties:
        access_token:
          title: Access Token
          type: string
        expires_at:
          format: date-time
          title: Expires At
          type: string
        token_type:
          default: bearer
          title: Token Type
          type: string
      required:
        - access_token
        - expires_at
      title: GetTokenResponse
      type: object
    GetUserLatestRunsDB:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        runs:
          items:
            $ref: "#/components/schemas/RunDBThinWithProjectName"
          title: Runs
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: GetUserLatestRunsDB
      type: object
    GetUserResponse:
      properties:
        auth_method:
          $ref: "#/components/schemas/AuthMethod"
          default: email
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          format: email
          title: Email
          type: string
        email_is_verified:
          anyOf:
            - type: boolean
            - type: "null"
          title: Email Is Verified
        first_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: First Name
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Last Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        projects_count:
          title: Projects Count
          type: integer
        role:
          $ref: "#/components/schemas/UserRole"
          default: read_only
        runs_count:
          title: Runs Count
          type: integer
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - email
        - created_at
        - updated_at
        - projects_count
        - runs_count
      title: GetUserResponse
      type: object
    GetUsersResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
        users:
          items:
            $ref: "#/components/schemas/GetUserResponse"
          title: Users
          type: array
      required:
        - users
      title: GetUsersResponse
      type: object
    GroundTruthAdherenceScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: ground_truth_adherence
          default: ground_truth_adherence
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        type:
          const: plus
          default: plus
          title: Type
          type: string
      title: GroundTruthAdherenceScorer
      type: object
    GroundTruthAdherenceTemplate:
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          default:
            This metric computes whether a response from a large language model
            matches a provided ground truth text.
          title: Metric Description
          type: string
        metric_few_shot_examples:
          description: Few-shot examples for the metric.
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          default:
            "I will give you two different texts, called the \"ground truth\"\
            \ and the \"response.\"\n\nRead both texts, then tell me whether they\
            \ are \"equivalent,\" in the sense that they basically mean the same thing.\n\
            \nKeep the following guidelines in mind.\n\n- Two texts can be equivalent\
            \ if they use different phrasing, as long as the phrasing doesn't affect\
            \ meaning.\n- Two texts can be equivalent if there are _slight_ differences\
            \ in meaning that wouldn't affect the conclusions that a reasonable reader\
            \ would draw upon reading them.\n- Imagine that you are grading a free-response\
            \ exam.  The ground truth given in the answer key for an exam question,\
            \ and the response is a student's answer to the same question. If you\
            \ would give the student full marks for this question, that means the\
            \ two texts are equivalent. If you wouldn't, that means the two texts\
            \ are not equivalent.\n\nRespond in the following JSON format:\n\n```\n\
            {{\n    \"explanation\": string,\n    \"equivalent\": boolean\n}}\n```\n\
            \n\"explanation\": A step-by-step breakdown of the similarities and differences\
            \ between the text. For each difference you note (if any), consider why\
            \ the difference might or might not make the texts non-equivalent, note\
            \ down your reasoning clearly and explicitly, and ultimately draw a conclusion\
            \ about whether that difference makes the text non-equivalent.\n\n\"equivalent\"\
            : `true` if the texts are equivalent in the sense given above, `false`\
            \ if they are non-equivalent.\n\nYou must respond with valid JSON."
          title: Metric System Prompt
          type: string
        template:
          default: "Ground truth:


            ```

            {ground_truth}

            ```


            Response:


            ```

            {response}

            ```"
          title: Template
          type: string
        value_field_name:
          default: equivalent
          title: Value Field Name
          type: string
      title: GroundTruthAdherenceTemplate
      type: object
    GroundednessTemplate:
      description: "Template for the groundedness metric,

        containing all the info necessary to send the groundedness prompt."
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          default:
            I have a RAG (retrieval-augmented generation) system that generates
            text based on one or more documents that I always include in my prompts.
            I want a metric that checks whether the generated text was supported by
            information in the documents. The metric should exhaustively check each
            claim in the response against the documents, one by one, listing them
            out explicitly.
          title: Metric Description
          type: string
        metric_few_shot_examples:
          default:
            - evaluating_response:
                "{\n    \"explanation\": \"This response makes a\
                \ single claim: that 90.4% of the population is not 65 years of age\
                \ or older.\\n\\nAccording to the provided document, 9.6% of the population\
                \ is 65 years of age or older. To find the percentage of people who\
                \ are not 65 years of age or older, we subtract this percentage from\
                \ 100%:\\n100% - 9.6% = 90.4%\\n\\nThis matches the percentage in the\
                \ claim, so the claim is supported.\\n\\nSince this is the only claim\
                \ made in the response, and it was supported, the response is supported\
                \ as a whole.\",\n    \"was_supported\": true\n}"
              generation_prompt_and_response: 'Prompt JSON:


                ```

                "Context: In the city, the population was distributed as 28.3% under
                the age of 18, 11.3% from 18 to 24, 32.7% from 25 to 44, 18.2% from
                45 to 64, and 9.6% who were 65 years of age or older. The median age
                was 31 years. For every 100 females, there were 97.3 males. For every
                100 females age 18 and over, there were 94.5 males.\n\nQuestion: How
                many in percent weren''t 65 years of age or older?"

                ```


                Response JSON:


                ```

                "90.4%"

                ```'
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          default:
            "The user will provide you with a prompt that was sent to an automatic\
            \ question-answering system, and that system's response. Both will be\
            \ provided as JSON strings.\n\nThe prompt will contain one or more documents\
            \ intended as context which the question-answering system was given as\
            \ reference material.\n\nYour task is to determine whether the answer\
            \ was supported by the documents.\n\nThink step by step, and explain your\
            \ reasoning carefully.\nState your observations first, before drawing\
            \ any conclusions.\n\nRespond in the following JSON format:\n\n```\n{\n\
            \    \"explanation\": string,\n    \"was_supported\": boolean\n}\n```\n\
            \n\"explanation\": Your step-by-step reasoning process. List out the claims\
            \ made in the response, and for each claim, provide a detailed explanation\
            \ of why that claim is or is not supported by the documents.\n\n\"was_supported\"\
            : `true` if the response was supported by the documents, `false` otherwise.\n\
            \nYou must respond with valid JSON."
          title: Metric System Prompt
          type: string
        template:
          default: "Prompt JSON:


            ```

            {query_json}

            ```


            Response JSON:


            ```

            {response_json}

            ```"
          title: Template
          type: string
        value_field_name:
          default: was_supported
          title: Value Field Name
          type: string
      title: GroundednessTemplate
      type: object
    GroupAction:
      enum:
        - update
        - list_members
        - join
        - request_to_join
      title: GroupAction
      type: string
    GroupByMetrics:
      description:
        "Metrics for a cohort returned in columnar format.\n\nEach field\
        \ in the class is of equal length (or len 0), mapping to the y-axis\nof each\
        \ chart. The labels field contains the x-axis labels which apply to all\n\
        y-axes for all charts created for this data.\n\nex:\n    labels: [\"apple\"\
        , \"banana\", \"orange\"]\n    precision: [0.95, 0.55, 0.83]\n    recall:\
        \ [0.93, 0.25, 0.88]\n    ..."
      properties:
        confidence:
          default: []
          items:
            type: number
          title: Confidence
          type: array
        data_error_potential:
          default: []
          items:
            type: number
          title: Data Error Potential
          type: array
        f1:
          default: []
          items:
            type: number
          title: F1
          type: array
        ghost_span:
          default: []
          items:
            type: integer
          title: Ghost Span
          type: array
        labels:
          items:
            anyOf:
              - type: string
              - type: integer
              - type: boolean
          title: Labels
          type: array
        missed_label:
          default: []
          items:
            type: integer
          title: Missed Label
          type: array
        precision:
          default: []
          items:
            type: number
          title: Precision
          type: array
        recall:
          default: []
          items:
            type: number
          title: Recall
          type: array
        span_shift:
          default: []
          items:
            type: integer
          title: Span Shift
          type: array
        support:
          default: []
          items:
            type: integer
          title: Support
          type: array
        total_errors:
          default: []
          items:
            type: integer
          title: Total Errors
          type: array
        wrong_tag:
          default: []
          items:
            type: integer
          title: Wrong Tag
          type: array
      title: GroupByMetrics
      type: object
    GroupCollaborator:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        group_id:
          format: uuid4
          title: Group Id
          type: string
        group_name:
          title: Group Name
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        role:
          $ref: "#/components/schemas/CollaboratorRole"
      required:
        - id
        - role
        - created_at
        - group_id
        - group_name
      title: GroupCollaborator
      type: object
    GroupCollaboratorCreate:
      properties:
        group_id:
          format: uuid4
          title: Group Id
          type: string
        role:
          $ref: "#/components/schemas/CollaboratorRole"
          default: viewer
      required:
        - group_id
      title: GroupCollaboratorCreate
      type: object
    GroupCreate:
      properties:
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        name:
          maxLength: 128
          minLength: 1
          title: Name
          type: string
        users:
          default: []
          items:
            $ref: "#/components/schemas/GroupMemberCreate"
          title: Users
          type: array
        visibility:
          $ref: "#/components/schemas/GroupVisibility"
          default: public
      required:
        - name
      title: GroupCreate
      type: object
    GroupDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        id:
          format: uuid4
          title: Id
          type: string
        name:
          maxLength: 128
          minLength: 1
          title: Name
          type: string
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        role:
          anyOf:
            - $ref: "#/components/schemas/GroupRole"
            - type: "null"
          description: The role of the current user in the group.
        size:
          title: Size
          type: integer
        visibility:
          $ref: "#/components/schemas/GroupVisibility"
          default: public
      required:
        - id
        - name
        - size
        - created_at
      title: GroupDB
      type: object
    GroupLabel:
      description: Group labels for prompt rows.
      enum:
        - Input Quality
        - Output Quality
        - Configuration
        - LLM Parameters
        - RAG Quality
        - RAG Parameters
        - Generic Parameters
        - Safety Metrics
        - Protect
        - System Metrics
        - Rating Summary
        - Custom Metrics
        - Security
        - Dataset
        - Agent Quality
      title: GroupLabel
      type: string
    GroupMemberAction:
      enum:
        - update_role
        - delete
      title: GroupMemberAction
      type: string
    GroupMemberCreate:
      properties:
        role:
          $ref: "#/components/schemas/GroupRole"
          default: member
        user_id:
          format: uuid4
          title: User Id
          type: string
      required:
        - user_id
      title: GroupMemberCreate
      type: object
    GroupMemberDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          title: Email
          type: string
        first_name:
          anyOf:
            - type: string
            - type: "null"
          title: First Name
        group_role:
          $ref: "#/components/schemas/GroupRole"
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          title: Last Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        user_id:
          format: uuid4
          title: User Id
          type: string
      required:
        - id
        - user_id
        - group_role
        - first_name
        - last_name
        - email
        - created_at
      title: GroupMemberDB
      type: object
    GroupMemberUpdate:
      properties:
        role:
          $ref: "#/components/schemas/GroupRole"
      required:
        - role
      title: GroupMemberUpdate
      type: object
    GroupRole:
      enum:
        - maintainer
        - member
        - pending
      title: GroupRole
      type: string
    GroupRoleInfo:
      properties:
        description:
          examples:
            - Can add, remove, and edit group members.
          title: Description
          type: string
        display_name:
          examples:
            - Maintainer
          title: Display Name
          type: string
        name:
          $ref: "#/components/schemas/GroupRole"
          examples:
            - maintainer
      required:
        - name
        - display_name
        - description
      title: GroupRoleInfo
      type: object
    GroupUpdate:
      properties:
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        name:
          maxLength: 128
          minLength: 1
          title: Name
          type: string
        visibility:
          $ref: "#/components/schemas/GroupVisibility"
      required:
        - name
        - description
        - visibility
      title: GroupUpdate
      type: object
    GroupVisibility:
      enum:
        - public
        - private
        - hidden
      title: GroupVisibility
      type: string
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HallucinationSegment:
      properties:
        end:
          title: End
          type: integer
        hallucination:
          title: Hallucination
          type: number
        hallucination_severity:
          default: 0
          maximum: 2.0
          minimum: 0.0
          title: Hallucination Severity
          type: integer
        start:
          title: Start
          type: integer
      required:
        - start
        - end
        - hallucination
      title: HallucinationSegment
      type: object
    HasEmbeddingsResponse:
      properties:
        has_data_embs:
          default: false
          title: Has Data Embs
          type: boolean
        has_model_embs:
          default: false
          title: Has Model Embs
          type: boolean
      title: HasEmbeddingsResponse
      type: object
    HealthcheckResponse:
      properties:
        api_version:
          title: Api Version
          type: string
        message:
          title: Message
          type: string
        version:
          title: Version
          type: string
      required:
        - api_version
        - message
        - version
      title: HealthcheckResponse
      type: object
    IndexSelector:
      description: Choose specific indexes to apply the bulk operation to.
      properties:
        indexes:
          items:
            type: integer
          title: Indexes
          type: array
        selector_type:
          const: indexes
          default: indexes
          title: Selector Type
          type: string
      required:
        - indexes
      title: IndexSelector
      type: object
    InferenceModelMetrics:
      properties:
        confidence:
          title: Confidence
          type: number
      required:
        - confidence
      title: InferenceModelMetrics
      type: object
    InferenceNamesResponse:
      properties:
        inference_names:
          items:
            type: string
          title: Inference Names
          type: array
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
      required:
        - project_id
        - run_id
        - inference_names
      title: InferenceNamesResponse
      type: object
    InferenceResults:
      properties:
        data_metrics:
          default: []
          items:
            $ref: "#/components/schemas/DataRow"
          title: Data Metrics
          type: array
        has_next_page:
          title: Has Next Page
          type: boolean
        labels:
          items:
            type: string
          title: Labels
          type: array
        model_metrics:
          $ref: "#/components/schemas/InferenceModelMetrics"
        sample_count:
          title: Sample Count
          type: integer
        span_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Span Count
        split_total_sample_count:
          title: Split Total Sample Count
          type: integer
        split_total_span_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Split Total Span Count
      required:
        - split_total_sample_count
        - sample_count
        - has_next_page
        - model_metrics
        - labels
      title: InferenceResults
      type: object
    InferenceRunResults:
      properties:
        inference_name:
          title: Inference Name
          type: string
        split_name:
          $ref: "#/components/schemas/Split"
        split_run_results:
          $ref: "#/components/schemas/InferenceResults"
      required:
        - split_name
        - inference_name
        - split_run_results
      title: InferenceRunResults
      type: object
    InputMap:
      properties:
        prefix:
          default: ""
          title: Prefix
          type: string
        prompt:
          title: Prompt
          type: string
        suffix:
          default: ""
          title: Suffix
          type: string
      required:
        - prompt
      title: InputMap
      type: object
    InputPIIScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: input_pii
          default: input_pii
          title: Name
          type: string
      title: InputPIIScorer
      type: object
    InputSexistScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: input_sexist
          default: input_sexist
          title: Name
          type: string
      title: InputSexistScorer
      type: object
    InputToneScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: input_tone
          default: input_tone
          title: Name
          type: string
      title: InputToneScorer
      type: object
    InputToxicityScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: input_toxicity
          default: input_toxicity
          title: Name
          type: string
      title: InputToxicityScorer
      type: object
    InsightChartRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: InsightChartRequest
      type: object
    InsightChartResponse:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        data:
          items:
            items:
              anyOf:
                - type: number
                - type: integer
            type: array
          title: Data
          type: array
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        x_labels:
          items:
            type: string
          title: X Labels
          type: array
        y_labels:
          items:
            type: string
          title: Y Labels
          type: array
      required:
        - x_labels
        - y_labels
        - data
      title: InsightChartResponse
      type: object
    InsightType:
      enum:
        - vertical_bar
        - horizontal_bar
      title: InsightType
      type: string
    InstructionAdherenceScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: instruction_adherence
          default: instruction_adherence
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        type:
          const: plus
          default: plus
          title: Type
          type: string
      title: InstructionAdherenceScorer
      type: object
    InstructionAdherenceTemplate:
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          default: "I have a chatbot application.

            My system prompt contains a list of instructions for what the chatbot
            should and should not do in every interaction. I want a metric that checks
            whether the latest response from the chatbot is consistent with the instructions.


            The metric should only evaluate the latest message (the response), not
            the chat history. It should return false only if the latest message violates
            one or more instructions. Violations earlier in the chat history should
            not affect whether the value is true or false. The value should only depend
            on whether the latest message was consistent with the instructions, considered
            in context. The metric should only consider instructions that are applicable
            to the latest message."
          title: Metric Description
          type: string
        metric_few_shot_examples:
          default:
            - evaluating_response:
                "{\n    \"explanation\": \"The relevant instructions\
                \ are: 'Always be polite and respectful' and 'Do not provide medical\
                \ advice.'\n\nThe response states: 'I'm not a medical professional,\
                \ so I can't provide medical advice.' This adheres to the instruction\
                \ not to provide medical advice.\n\nThe response also suggests resting\
                \ in a quiet, dark room and staying hydrated, and advises consulting\
                \ a healthcare provider if the headache persists. These suggestions\
                \ are general and do not constitute medical advice.\n\nThe tone of the\
                \ response is polite and respectful.\n\nTherefore, the latest response\
                \ is consistent with the instructions.\",\n    \"is_consistent\": true\n\
                }"
              generation_prompt_and_response: 'Prompt JSON:


                ```

                "System: Always be polite and respectful. Do not provide medical advice.

                Human: Can you tell me what to do if I have a headache?"

                ```


                Response JSON:


                ```

                "I''m not a medical professional, so I can''t provide medical advice.
                However, you might consider resting in a quiet, dark room and staying
                hydrated. If your headache persists, please consult a healthcare provider."

                ```'
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          default:
            "The user will provide you with a prompt that was sent to a chatbot\
            \ system, and the chatbot's latest response. Both will be provided as\
            \ JSON strings.\n\nIn some cases, the prompt may be split up into multiple\
            \ messages. If so, each message will begin with one of the following prefixes:\n\
            \n- \"System: \"\n- \"Human: \"\n- \"AI: \"\n\nIf you see these prefixes,\
            \ pay attention to them because they indicate where messages begin and\
            \ end. Messages prefixed with \"System: \" contain system instructions\
            \ which the chatbot should follow. Messages prefixed with \"Human: \"\
            \ are user input. Messages prefixed with \"AI: \" are system responses\
            \ to user input.\nIf you do not see these prefixes, treat the prompt as\
            \ though it was a single user input message prefixed with \"Human: \"\
            .\n\nYour task is to determine whether the latest response from the chatbot\
            \ is consistent with the instructions provided in the system prompt (if\
            \ there is one) or in the first user message (if there is no system prompt).\n\
            \nFocus only on the latest response and the instructions. Do not consider\
            \ the chat history or any previous messages from the chatbot.\n\nThink\
            \ step by step, and explain your reasoning carefully.\nState your observations\
            \ first, before drawing any conclusions.\n\nRespond in the following JSON\
            \ format:\n\n```\n{\n    \"explanation\": string,\n    \"is_consistent\"\
            : boolean\n}\n```\n\n\"explanation\": Your step-by-step reasoning process.\
            \ List out the relevant instructions and explain whether the latest response\
            \ adheres to each of them.\n\n\"is_consistent\": `true` if the latest\
            \ response is consistent with the instructions, `false` otherwise.\n\n\
            You must respond with a valid JSON string."
          title: Metric System Prompt
          type: string
        template:
          default: "Prompt JSON:


            ```

            {query_json}

            ```


            Response JSON:


            ```

            {response_json}

            ```"
          title: Template
          type: string
        value_field_name:
          default: is_consistent
          title: Value Field Name
          type: string
      title: InstructionAdherenceTemplate
      type: object
    IntegrationDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        name:
          $ref: "#/components/schemas/IntegrationName"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - name
        - id
        - created_at
        - updated_at
        - created_by
      title: IntegrationDB
      type: object
    IntegrationName:
      enum:
        - aws_bedrock
        - aws_sagemaker
        - azure
        - databricks
        - labelstudio
        - openai
        - vertex_ai
        - writer
        - anthropic
        - mistral
      title: IntegrationName
      type: string
    InviteUsersRequest:
      properties:
        emails:
          items:
            format: email
            type: string
          minItems: 1
          title: Emails
          type: array
        group_ids:
          default: []
          items:
            format: uuid4
            type: string
          title: Group Ids
          type: array
        role:
          $ref: "#/components/schemas/UserRole"
          default: user
        send_email:
          default: true
          title: Send Email
          type: boolean
      required:
        - emails
      title: InviteUsersRequest
      type: object
    InvokeResponse:
      properties:
        action_result:
          $ref: "#/components/schemas/ActionResult"
        api_version:
          default: 1.0.0
          title: Api Version
          type: string
        headers:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          description:
            Optional additional HTTP headers that should be included in
            the response.
          title: Headers
        metadata:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          description:
            Optional additional metadata. This being echoed back from the
            request.
          title: Metadata
        metric_results:
          additionalProperties:
            $ref: "#/components/schemas/MetricComputation"
          description: Results of the metric computation.
          title: Metric Results
          type: object
        ruleset_results:
          description: Results of the rule execution.
          items:
            $ref: "#/components/schemas/RulesetResult"
          title: Ruleset Results
          type: array
        stage_metadata:
          $ref: "#/components/schemas/StageMetadata"
        status:
          $ref: "#/components/schemas/ExecutionStatus"
          default: not_triggered
        text:
          description: Text from the request after processing the rules.
          title: Text
          type: string
        trace_metadata:
          $ref: "#/components/schemas/TraceMetadata"
      required:
        - text
        - trace_metadata
        - stage_metadata
        - action_result
      title: InvokeResponse
      type: object
    JobDB:
      properties:
        completed_at:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Completed At
        created_at:
          format: date-time
          title: Created At
          type: string
        error_message:
          anyOf:
            - type: string
            - type: "null"
          title: Error Message
        failed_at:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Failed At
        id:
          format: uuid4
          title: Id
          type: string
        job_name:
          title: Job Name
          type: string
        migration_name:
          anyOf:
            - type: string
            - type: "null"
          title: Migration Name
        monitor_batch_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Monitor Batch Id
        processing_started:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Processing Started
        progress_message:
          anyOf:
            - type: string
            - type: "null"
          title: Progress Message
        progress_percent:
          default: 0.0
          title: Progress Percent
          type: number
        project_id:
          format: uuid4
          title: Project Id
          type: string
        request_data:
          title: Request Data
          type: object
        retries:
          title: Retries
          type: integer
        run_id:
          format: uuid4
          title: Run Id
          type: string
        status:
          title: Status
          type: string
        steps_completed:
          default: 0
          title: Steps Completed
          type: integer
        steps_total:
          default: 0
          title: Steps Total
          type: integer
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_at
        - updated_at
        - job_name
        - project_id
        - run_id
        - status
        - retries
        - request_data
      title: JobDB
      type: object
    JobInfo:
      properties:
        job_error_message:
          anyOf:
            - type: string
            - type: "null"
          description:
            Error message to show the users on hover in case the job fails
            or errors out.
          title: Job Error Message
        job_status:
          anyOf:
            - $ref: "#/components/schemas/JobStatus"
            - type: "null"
          description:
            Job status used for computing the column. Only set for metrics
            columns that have a separate scorer job.
        job_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
          description: Whether a job is designated as plus or basic.
        scorer_name:
          anyOf:
            - type: string
            - type: "null"
          description: Scorer Name executed by the job.
          title: Scorer Name
      title: JobInfo
      type: object
    JobStatus:
      enum:
        - unstarted
        - in_progress
        - completed
        - error
        - failed
      title: JobStatus
      type: string
    LLMExportFormat:
      enum:
        - csv
        - jsonl
      title: LLMExportFormat
      type: string
    LLMIntegration:
      enum:
        - anthropic
        - azure
        - aws_bedrock
        - aws_sagemaker
        - databricks
        - vertex_ai
        - openai
        - writer
        - mistral
      title: LLMIntegration
      type: string
    LabelCoOccurences:
      description: Structure for each label co-occurrence response.
      properties:
        ids:
          items:
            type: integer
          title: Ids
          type: array
        labels:
          items:
            $ref: "#/components/schemas/TargetLabels"
          title: Labels
          type: array
        starting_label:
          title: Starting Label
          type: string
      required:
        - ids
        - labels
        - starting_label
      title: LabelCoOccurences
      type: object
    LabelResponse:
      properties:
        labels:
          items: {}
          title: Labels
          type: array
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
      required:
        - project_id
        - run_id
        - labels
      title: LabelResponse
      type: object
    LabelStudioExportRequest:
      description: "Schema for requesting data to be sent to labelstudio.


        Coming soon!"
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        labels:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Labels
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        project_id:
          format: uuid4
          title: Project Id
          type: string
        project_name:
          title: Project Name
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        split:
          $ref: "#/components/schemas/Split"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        workspace:
          anyOf:
            - type: string
            - type: "null"
          title: Workspace
      required:
        - project_name
        - project_id
        - run_id
        - split
      title: LabelStudioExportRequest
      type: object
    LabelStudioIntegration:
      description: The active labelstudio integration information.
      properties:
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        is_enterprise:
          title: Is Enterprise
          type: boolean
        name:
          const: labelstudio
          default: labelstudio
          title: Name
          type: string
        url:
          title: Url
          type: string
      required:
        - url
        - is_enterprise
      title: LabelStudioIntegration
      type: object
    LabelStudioIntegrationCreate:
      properties:
        is_enterprise:
          title: Is Enterprise
          type: boolean
        token:
          title: Token
          type: string
        url:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Url
          type: string
      required:
        - token
        - url
        - is_enterprise
      title: LabelStudioIntegrationCreate
      type: object
    LabelStudioProject:
      properties:
        labels:
          items:
            type: string
          title: Labels
          type: array
        name:
          title: Name
          type: string
      required:
        - name
        - labels
      title: LabelStudioProject
      type: object
    LassoSelection:
      description: "Representation of a lasso selection (used by embeddings)


        x and y correspond to the cursor movement while tracing the lasso. This is
        natively provided by plotly when creating

        a lasso selection, for example"
      properties:
        x:
          items:
            type: number
          title: X
          type: array
        y:
          items:
            type: number
          title: Y
          type: array
      required:
        - x
        - y
      title: LassoSelection
      type: object
    LikeDislikeAggregate:
      properties:
        dislike_count:
          title: Dislike Count
          type: integer
        feedback_type:
          const: like_dislike
          default: like_dislike
          title: Feedback Type
          type: string
        like_count:
          title: Like Count
          type: integer
        unrated_count:
          title: Unrated Count
          type: integer
      required:
        - like_count
        - dislike_count
        - unrated_count
      title: LikeDislikeAggregate
      type: object
    LikeDislikeConstraints:
      properties:
        feedback_type:
          const: like_dislike
          title: Feedback Type
          type: string
      required:
        - feedback_type
      title: LikeDislikeConstraints
      type: object
    LikeDislikeRating:
      properties:
        feedback_type:
          const: like_dislike
          default: like_dislike
          title: Feedback Type
          type: string
        value:
          title: Value
          type: boolean
      required:
        - value
      title: LikeDislikeRating
      type: object
    ListAlertConfigurationsResponse:
      properties:
        alerts:
          items:
            $ref: "#/components/schemas/AlertConfigurationResponse"
          title: Alerts
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: ListAlertConfigurationsResponse
      type: object
    ListApiKeyResponse:
      properties:
        api_keys:
          items:
            $ref: "#/components/schemas/GetApiKeyResponse"
          title: Api Keys
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - api_keys
      title: ListApiKeyResponse
      type: object
    ListDatasetParams:
      properties:
        filters:
          items:
            discriminator:
              mapping:
                name: "#/components/schemas/DatasetNameFilter"
                used_in_project: "#/components/schemas/DatasetUsedInProjectFilter"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/DatasetNameFilter"
              - $ref: "#/components/schemas/DatasetUsedInProjectFilter"
          title: Filters
          type: array
        sort:
          anyOf:
            - discriminator:
                mapping:
                  created_at: "#/components/schemas/DatasetCreatedAtSort"
                  name: "#/components/schemas/DatasetNameSort"
                  num_rows: "#/components/schemas/DatasetRowsSort"
                  project_count: "#/components/schemas/DatasetProjectsSort"
                  project_last_used_at: "#/components/schemas/DatasetProjectLastUsedAtSort"
                  updated_at: "#/components/schemas/DatasetUpdatedAtSort"
                propertyName: name
              oneOf:
                - $ref: "#/components/schemas/DatasetNameSort"
                - $ref: "#/components/schemas/DatasetCreatedAtSort"
                - $ref: "#/components/schemas/DatasetUpdatedAtSort"
                - $ref: "#/components/schemas/DatasetProjectLastUsedAtSort"
                - $ref: "#/components/schemas/DatasetProjectsSort"
                - $ref: "#/components/schemas/DatasetRowsSort"
            - type: "null"
          default: None
          title: Sort
      title: ListDatasetParams
      type: object
    ListDatasetResponse:
      properties:
        datasets:
          items:
            $ref: "#/components/schemas/DatasetDB"
          title: Datasets
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: ListDatasetResponse
      type: object
    ListDatasetVersionParams:
      properties:
        sort:
          anyOf:
            - discriminator:
                mapping:
                  version_index: "#/components/schemas/DatasetVersionIndexSort"
                propertyName: name
              oneOf:
                - $ref: "#/components/schemas/DatasetVersionIndexSort"
            - type: "null"
          title: Sort
      title: ListDatasetVersionParams
      type: object
    ListDatasetVersionResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
        versions:
          items:
            $ref: "#/components/schemas/DatasetVersionDB"
          title: Versions
          type: array
      required:
        - versions
      title: ListDatasetVersionResponse
      type: object
    ListGeneratedScorersResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        scorers:
          items:
            $ref: "#/components/schemas/GeneratedScorerResponse"
          title: Scorers
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - scorers
      title: ListGeneratedScorersResponse
      type: object
    ListGroupCollaboratorsResponse:
      properties:
        collaborators:
          items:
            $ref: "#/components/schemas/GroupCollaborator"
          title: Collaborators
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - collaborators
      title: ListGroupCollaboratorsResponse
      type: object
    ListGroupMembersResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        members:
          items:
            $ref: "#/components/schemas/GroupMemberDB"
          title: Members
          type: array
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - members
      title: ListGroupMembersResponse
      type: object
    ListGroupsResponse:
      properties:
        groups:
          items:
            $ref: "#/components/schemas/GroupDB"
          title: Groups
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - groups
      title: ListGroupsResponse
      type: object
    ListMetaRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        include_stats:
          default: false
          title: Include Stats
          type: boolean
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: ListMetaRequest
      type: object
    ListMetaResponse:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta:
          items:
            $ref: "#/components/schemas/MetaInfo"
          title: Meta
          type: array
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        split:
          $ref: "#/components/schemas/Split"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - project_id
        - run_id
        - split
        - meta
      title: ListMetaResponse
      type: object
    ListPromptDatasetResponse:
      properties:
        datasets:
          items:
            $ref: "#/components/schemas/PromptDatasetDB"
          title: Datasets
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: ListPromptDatasetResponse
      type: object
    ListRegisteredScorersResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        scorers:
          items:
            $ref: "#/components/schemas/CreateUpdateRegisteredScorerResponse"
          title: Scorers
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - scorers
      title: ListRegisteredScorersResponse
      type: object
    ListScorersRequest:
      properties:
        filters:
          items:
            discriminator:
              mapping:
                created_at: "#/components/schemas/ScorerCreatedAtFilter"
                creator: "#/components/schemas/ScorerCreatorFilter"
                name: "#/components/schemas/ScorerNameFilter"
                scorer_type: "#/components/schemas/ScorerTypeFilter"
                tags: "#/components/schemas/ScorerTagsFilter"
                updated_at: "#/components/schemas/ScorerUpdatedAtFilter"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/ScorerNameFilter"
              - $ref: "#/components/schemas/ScorerTypeFilter"
              - $ref: "#/components/schemas/ScorerTagsFilter"
              - $ref: "#/components/schemas/ScorerCreatorFilter"
              - $ref: "#/components/schemas/ScorerCreatedAtFilter"
              - $ref: "#/components/schemas/ScorerUpdatedAtFilter"
          title: Filters
          type: array
      title: ListScorersRequest
      type: object
    ListScorersResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        scorers:
          items:
            $ref: "#/components/schemas/ScorerResponse"
          title: Scorers
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: ListScorersResponse
      type: object
    ListUserCollaboratorsResponse:
      properties:
        collaborators:
          items:
            $ref: "#/components/schemas/UserCollaborator"
          title: Collaborators
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - collaborators
      title: ListUserCollaboratorsResponse
      type: object
    LlmSpan:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        input_tokens:
          anyOf:
            - type: integer
            - type: "null"
          description: Number of input tokens.
          title: Input Tokens
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        model:
          anyOf:
            - type: string
            - type: "null"
          description: Model used for this step.
          title: Model
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        output_tokens:
          anyOf:
            - type: integer
            - type: "null"
          description: Number of output tokens.
          title: Output Tokens
        parent:
          anyOf:
            - $ref: "#/components/schemas/StepWithChildSpans"
            - type: "null"
          description: Parent node of the current node. For internal use only.
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        temperature:
          anyOf:
            - type: number
            - type: "null"
          description: Temperature used for generation.
          title: Temperature
        tools:
          anyOf:
            - items:
                type: object
              type: array
            - type: "null"
          description: List of available tools passed to the LLM on invocation.
          title: Tools
        total_tokens:
          anyOf:
            - type: integer
            - type: "null"
          description: Total number of tokens.
          title: Total Tokens
        type:
          const: llm
          default: llm
          description: Type of the step. By default, it is set to llm.
          title: Type
          type: string
      required:
        - input
      title: LlmSpan
      type: object
    LlmStep:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - additionalProperties:
                type: string
              type: object
            - $ref: "#/components/schemas/Message"
            - items:
                type: string
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
          description: Input to the LLM step.
          title: Input
        input_tokens:
          anyOf:
            - type: integer
            - type: "null"
          description: Number of input tokens.
          title: Input Tokens
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        model:
          anyOf:
            - type: string
            - type: "null"
          description: Model used for this step.
          title: Model
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - additionalProperties:
                type: string
              type: object
            - $ref: "#/components/schemas/Message"
            - items:
                type: string
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
          default: ""
          description: Output of the LLM step.
          title: Output
        output_tokens:
          anyOf:
            - type: integer
            - type: "null"
          description: Number of output tokens.
          title: Output Tokens
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        temperature:
          anyOf:
            - type: number
            - type: "null"
          description: Temperature used for generation.
          title: Temperature
        tools:
          anyOf:
            - items:
                type: object
              type: array
            - type: "null"
          description: List of available tools passed to the LLM on invocation.
          title: Tools
        total_tokens:
          anyOf:
            - type: integer
            - type: "null"
          description: Total number of tokens.
          title: Total Tokens
        type:
          const: llm
          default: llm
          description: Type of the step. By default, it is set to llm.
          title: Type
          type: string
      required:
        - input
      title: LlmStep
      type: object
    LogDataAvailableColumnsRequest:
      examples:
        - log_stream_id: 00000000-0000-0000-0000-000000000000
      properties:
        experiment_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Experiment id associated with the traces.
          title: Experiment Id
        log_stream_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Log stream id associated with the traces.
          title: Log Stream Id
      title: LogDataAvailableColumnsRequest
      type: object
    LogDataAvailableColumnsResponse:
      examples:
        - columns:
            - category: metric
              data_type: unknown
              description:
                Measures the presence and severity of harmful, offensive, or
                abusive language in the model's response
              filterable: false
              group_label: Safety Metrics
              id: metric#toxicity
              label: Output Toxicity
              sortable: false
            - category: metric
              data_type: unknown
              description:
                BLEU is a case-sensitive measurement of the difference between
                an model generation and target generation at the sentence-level.
              filterable: false
              group_label: Output Quality
              id: metric#bleu
              label: BLEU
              sortable: false
            - category: standard
              data_type: text
              filterable: true
              id: standard#node_input
              label: Node Input
              sortable: true
            - category: standard
              data_type: text
              filterable: true
              id: standard#node_output
              label: Node Output
              sortable: true
        - columns:
            - category: metric
              data_type: unknown
              description:
                Measures the presence and severity of harmful, offensive, or
                abusive language in the model's response
              filterable: false
              group_label: Safety Metrics
              id: metric#toxicity
              label: Output Toxicity
              sortable: false
            - category: metric
              data_type: unknown
              description:
                BLEU is a case-sensitive measurement of the difference between
                an model generation and target generation at the sentence-level.
              filterable: false
              group_label: Output Quality
              id: metric#bleu
              label: BLEU
              sortable: false
            - category: standard
              data_type: unknown
              filterable: false
              id: standard#trace_id
              label: Trace ID
              sortable: false
            - category: standard
              data_type: text
              filterable: true
              id: standard#node_output
              label: Node Output
              sortable: true
      properties:
        columns:
          items:
            $ref: "#/components/schemas/LogDataColumnInfo"
          title: Columns
          type: array
      title: LogDataAvailableColumnsResponse
      type: object
    LogDataColumnInfo:
      properties:
        category:
          $ref: "#/components/schemas/ColumnCategory"
          description: Category of the column.
        data_type:
          $ref: "#/components/schemas/DataTypeOptions"
          default: unknown
          description:
            Data type of the column. This is used to determine how to format
            the data on the UI.
        description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of the column.
          title: Description
        filterable:
          default: true
          description:
            Whether the column is filterable by value. Doesn't include
            categorical filters
          title: Filterable
          type: boolean
        group_description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of the group (super column).
          title: Group Description
        group_label:
          anyOf:
            - type: string
            - type: "null"
          description: Display label of the group (super column) in the UI.
          title: Group Label
        id:
          description:
            Unique identifier of the column.  Format is subject to change
            and should not be used/parsed directly.
          title: Id
          type: string
        label:
          anyOf:
            - type: string
            - type: "null"
          description: Display label of the column in the UI.
          title: Label
        sortable:
          default: true
          description: Whether the column is sortable.
          title: Sortable
          type: boolean
        threshold:
          anyOf:
            - $ref: "#/components/schemas/MetricThreshold"
            - type: "null"
          description: Thresholds for the column, if this is a metrics column.
      required:
        - id
        - category
      title: LogDataColumnInfo
      type: object
    LogDataGetResponse:
      examples:
        - values:
            metric#bleu:
              status_type: success
              value: 4
            metric#toxicity:
              status_type: success
              value: 0.5
            standard#id:
              status_type: success
              value: 768d20c6-cb59-4cee-8984-81ee436c4c9c
            standard#node_input:
              status_type: success
              value: Who is a smart LLM?
            standard#node_output:
              status_type: success
              value: I am
            standard#parent_id:
              status_type: success
              value: 9683e759-8257-48fc-aea1-40987db2afb4
            standard#trace_id:
              status_type: success
              value: 350b82b4-c92c-4120-9997-ba06b0925790
      properties:
        values:
          additionalProperties:
            anyOf:
              - $ref: "#/components/schemas/MetricNotComputed"
              - $ref: "#/components/schemas/MetricPending"
              - $ref: "#/components/schemas/MetricComputing"
              - $ref: "#/components/schemas/MetricNotApplicable"
              - $ref: "#/components/schemas/MetricSuccess"
              - $ref: "#/components/schemas/MetricError"
              - $ref: "#/components/schemas/MetricFailed"
          description: Dictionary containing the mapping of column ids to data values.
          title: Values
          type: object
      title: LogDataGetResponse
      type: object
    LogDataIDColumnFilter:
      properties:
        column_id:
          title: Column Id
          type: string
        name:
          const: id_column
          default: id_column
          title: Name
          type: string
        value:
          format: uuid4
          title: Value
          type: string
      required:
        - value
        - column_id
      title: LogDataIDColumnFilter
      type: object
    LogDataLoggingMethod:
      enum:
        - python_client
        - typescript_client
        - api_direct
      title: LogDataLoggingMethod
      type: string
    LogDataNodeTypeFilter:
      properties:
        name:
          const: node_type
          default: node_type
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - one_of
            - not_in
          title: Operator
          type: string
        value:
          anyOf:
            - $ref: "#/components/schemas/NodeType"
            - items:
                $ref: "#/components/schemas/NodeType"
              type: array
          title: Value
      required:
        - value
        - operator
      title: LogDataNodeTypeFilter
      type: object
    LogDataQueryRequest:
      examples:
        - column_ids:
            - metric#toxicity
            - metric#bleu
            - standard#node_input
            - standard#node_output
          filters:
            - name: node_type
              operator: eq
              value: llm
          log_stream_id: 00000000-0000-0000-0000-000000000000
          pagination:
            limit: 5
            starting_token: 0
          sort:
            ascending: false
            name: metric#toxicity
            sort_type: column
      properties:
        column_ids:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          description: column ids to return in each row
          title: Column Ids
        experiment_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Experiment id associated with the traces.
          title: Experiment Id
        filters:
          items:
            discriminator:
              mapping:
                id_column: "#/components/schemas/LogDataIDColumnFilter"
                node_type: "#/components/schemas/LogDataNodeTypeFilter"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/LogDataNodeTypeFilter"
              - $ref: "#/components/schemas/LogDataIDColumnFilter"
          title: Filters
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        log_stream_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Log stream id associated with the traces.
          title: Log Stream Id
        sort:
          items:
            $ref: "#/components/schemas/LogDataSort"
          title: Sort
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: LogDataQueryRequest
      type: object
    LogDataQueryResponse:
      examples:
        - column_ids:
            - metric#toxicity
            - metric#bleu
            - standard#node_input
            - standard#node_output
          next_starting_token: 5
          num_rows: 5
          paginated: true
          rows:
            - - status_type: success
                value: 0.5
              - status_type: success
                value: 4
              - status_type: success
                value: Who is a smart LLM?
              - status_type: success
                value: I am
            - - status_type: success
                value: -0.5
              - status_type: success
                value: 3
              - status_type: success
                value: Who is a smart person?
              - status_type: success
                value: Albert Einstien
            - - status_type: success
                value: 4
              - status_type: success
                value: 2
              - status_type: success
                value: Who is a smart LLM?
              - status_type: success
                value: I am, again
            - - status_type: success
                value: 3.0
              - status_type: success
                value: 0
              - status_type: success
                value: Who is a smart LLM?
              - status_type: success
                value: Still me
            - - status_type: success
                value: 10.0
              - status_type: success
                value: 0
              - status_type: success
                value: Who is a smart LLM?
              - status_type: success
                value: Again?
      properties:
        column_ids:
          description: column ids present in each row
          items:
            type: string
          title: Column Ids
          type: array
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        num_rows:
          description: number of data rows
          title: Num Rows
          type: integer
        paginated:
          default: false
          title: Paginated
          type: boolean
        rows:
          description: list of data rows
          items:
            items:
              anyOf:
                - $ref: "#/components/schemas/MetricNotComputed"
                - $ref: "#/components/schemas/MetricPending"
                - $ref: "#/components/schemas/MetricComputing"
                - $ref: "#/components/schemas/MetricNotApplicable"
                - $ref: "#/components/schemas/MetricSuccess"
                - $ref: "#/components/schemas/MetricError"
                - $ref: "#/components/schemas/MetricFailed"
            type: array
          title: Rows
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      title: LogDataQueryResponse
      type: object
    LogDataSort:
      enum:
        - standard
      title: LogDataSort
      type: string
    LogStreamCreateRequest:
      properties:
        name:
          minLength: 1
          title: Name
          type: string
      required:
        - name
      title: LogStreamCreateRequest
      type: object
    LogStreamResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        id:
          format: uuid4
          title: Id
          type: string
        name:
          title: Name
          type: string
        project_id:
          format: uuid4
          title: Project Id
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_at
        - updated_at
        - name
        - project_id
      title: LogStreamResponse
      type: object
    LogStreamUpdateRequest:
      properties:
        name:
          minLength: 1
          title: Name
          type: string
      required:
        - name
      title: LogStreamUpdateRequest
      type: object
    MAPResponse:
      description: 'The main metric for Object Detection.


        mAP, or mean Average Precision, is an Object Detection metric that provides
        you with a general sense of the

        performance of your model.


        mAP is not simply the average precision for each class, it is much more technical

        https://towardsdatascience.com/breaking-down-mean-average-precision-map-ae462f623a52


        We also provide each error and its "score", which represents how much the
        model

        would have improved by fixing each value'
      properties:
        ap_per_class:
          $ref: "#/components/schemas/BarChart"
        error_scores:
          $ref: "#/components/schemas/BarChart"
        map:
          title: Map
          type: number
        map_threshold:
          title: Map Threshold
          type: number
      required:
        - map
        - map_threshold
        - ap_per_class
        - error_scores
      title: MAPResponse
      type: object
    Message:
      additionalProperties: true
      properties:
        content:
          title: Content
          type: string
        role:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/MessageRole"
          title: Role
      required:
        - content
        - role
      title: Message
      type: object
    MessageRole:
      enum:
        - agent
        - assistant
        - function
        - system
        - tool
        - user
      title: MessageRole
      type: string
    Messages:
      items:
        $ref: "#/components/schemas/Message"
      title: Messages
      type: array
    MetaFilter:
      description: A class for filtering arbitrary metadata columns.
      properties:
        greater_than:
          anyOf:
            - type: number
            - type: "null"
          title: Greater Than
        is_equal:
          anyOf:
            - type: number
            - type: integer
            - type: "null"
          title: Is Equal
        isin:
          anyOf:
            - items:
                anyOf:
                  - type: string
                  - type: boolean
                  - type: integer
                  - type: "null"
              type: array
            - type: "null"
          title: Isin
        less_than:
          anyOf:
            - type: number
            - type: "null"
          title: Less Than
        name:
          title: Name
          type: string
      required:
        - name
      title: MetaFilter
      type: object
    MetaInfo:
      description: "Class for describing a metadata column.


        Metadata columns and tabular data columns are similar, but metadata columns


        a meta column is categorical if it is of string/object type with <= 50 unique
        values a meta column is continuous if

        it is of float/int type


        Thus, a column of string type with > 50 unique values is neither continuous
        nor categorical in our case."
      properties:
        high_cardinality:
          anyOf:
            - type: boolean
            - type: "null"
          title: High Cardinality
        is_categorical:
          title: Is Categorical
          type: boolean
        is_continuous:
          title: Is Continuous
          type: boolean
        max:
          anyOf:
            - type: number
            - type: "null"
          title: Max
        mean:
          anyOf:
            - type: number
            - type: "null"
          title: Mean
        min:
          anyOf:
            - type: number
            - type: "null"
          title: Min
        missing:
          anyOf:
            - type: integer
            - type: "null"
          title: Missing
        missing_pct:
          anyOf:
            - type: number
            - type: "null"
          title: Missing Pct
        name:
          title: Name
          type: string
        negative:
          anyOf:
            - type: integer
            - type: "null"
          title: Negative
        negative_pct:
          anyOf:
            - type: number
            - type: "null"
          title: Negative Pct
        unique_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Unique Count
        unique_count_full:
          anyOf:
            - type: integer
            - type: "null"
          title: Unique Count Full
        unique_values:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Unique Values
        unique_values_full:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Unique Values Full
        zeros:
          anyOf:
            - type: integer
            - type: "null"
          title: Zeros
        zeros_pct:
          anyOf:
            - type: number
            - type: "null"
          title: Zeros Pct
      required:
        - name
        - is_categorical
        - is_continuous
      title: MetaInfo
      type: object
    MetadataFilter:
      description: Filters on metadata key-value pairs in scorer jobs.
      properties:
        filter_type:
          const: map
          default: map
          title: Filter Type
          type: string
        key:
          title: Key
          type: string
        name:
          const: metadata
          default: metadata
          title: Name
          type: string
        operator:
          enum:
            - one_of
            - not_in
            - eq
            - ne
          title: Operator
          type: string
        value:
          anyOf:
            - type: string
            - items:
                type: string
              type: array
          title: Value
      required:
        - operator
        - key
        - value
      title: MetadataFilter
      type: object
    Method:
      enum:
        - GET
        - PUT
      title: Method
      type: string
    MetricComputation:
      properties:
        error_message:
          anyOf:
            - type: string
            - type: "null"
          title: Error Message
        execution_time:
          anyOf:
            - type: number
            - type: "null"
          title: Execution Time
        status:
          anyOf:
            - $ref: "#/components/schemas/MetricComputationStatus"
            - type: "null"
        value:
          anyOf:
            - type: number
            - type: integer
            - type: string
            - items:
                anyOf:
                  - type: number
                  - type: integer
                  - type: string
                  - type: "null"
              type: array
            - additionalProperties:
                anyOf:
                  - type: number
                  - type: integer
                  - type: string
                  - type: "null"
              type: object
            - type: "null"
          title: Value
      title: MetricComputation
      type: object
    MetricComputationStatus:
      enum:
        - success
        - timeout
        - failed
        - error
      title: MetricComputationStatus
      type: string
    MetricComputing:
      properties:
        scorer_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
        status_type:
          const: computing
          default: computing
          title: Status Type
          type: string
      title: MetricComputing
      type: object
    MetricCritique:
      properties:
        critique_info:
          $ref: "#/components/schemas/MetricCritiqueContent"
        id:
          format: uuid4
          title: Id
          type: string
        is_computed:
          title: Is Computed
          type: boolean
        metric:
          title: Metric
          type: string
        metric_inputs:
          $ref: "#/components/schemas/MetricInputs"
        project_id:
          format: uuid4
          title: Project Id
          type: string
        revised_explanation:
          anyOf:
            - type: string
            - type: "null"
          title: Revised Explanation
        row_id:
          anyOf:
            - format: uuid
              type: string
            - type: integer
          title: Row Id
        run_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Run Id
      required:
        - project_id
        - run_id
        - metric
        - row_id
        - critique_info
        - metric_inputs
        - id
        - is_computed
        - revised_explanation
      title: MetricCritique
      type: object
    MetricCritiqueColumn:
      properties:
        col_name:
          title: Col Name
          type: string
        metric_critique_computing:
          title: Metric Critique Computing
          type: boolean
      required:
        - col_name
        - metric_critique_computing
      title: MetricCritiqueColumn
      type: object
    MetricCritiqueColumnar:
      properties:
        critique_info:
          $ref: "#/components/schemas/MetricCritiqueContent"
        id:
          format: uuid4
          title: Id
          type: string
        is_computed:
          title: Is Computed
          type: boolean
        revised_explanation:
          anyOf:
            - type: string
            - type: "null"
          title: Revised Explanation
      required:
        - id
        - is_computed
        - revised_explanation
        - critique_info
      title: MetricCritiqueColumnar
      type: object
    MetricCritiqueColumns:
      properties:
        metric_critique_columns:
          items:
            $ref: "#/components/schemas/MetricCritiqueColumn"
          title: Metric Critique Columns
          type: array
      required:
        - metric_critique_columns
      title: MetricCritiqueColumns
      type: object
    MetricCritiqueContent:
      properties:
        critique:
          title: Critique
          type: string
        intended_value:
          title: Intended Value
          type: boolean
        original_explanation:
          title: Original Explanation
          type: string
      required:
        - critique
        - intended_value
        - original_explanation
      title: MetricCritiqueContent
      type: object
    MetricCritiqueJobConfiguration:
      description: Info necessary to execute a metric critique job.
      properties:
        critique_ids:
          items:
            format: uuid4
            type: string
          title: Critique Ids
          type: array
        llm_settings:
          $ref: "#/components/schemas/PromptRunSettings"
        metric_name:
          title: Metric Name
          type: string
        project_type:
          anyOf:
            - const: prompt_evaluation
              type: string
            - const: llm_monitor
              type: string
          title: Project Type
        recompute_settings:
          anyOf:
            - discriminator:
                mapping:
                  observe_filters: "#/components/schemas/promptgalileo__schemas__metric_critique__RecomputeSettingsObserve"
                  project: "#/components/schemas/RecomputeSettingsProject"
                  runs: "#/components/schemas/RecomputeSettingsRuns"
                propertyName: mode
              oneOf:
                - $ref: "#/components/schemas/RecomputeSettingsRuns"
                - $ref: "#/components/schemas/RecomputeSettingsProject"
                - $ref: "#/components/schemas/promptgalileo__schemas__metric_critique__RecomputeSettingsObserve"
            - type: "null"
          title: Recompute Settings
      required:
        - project_type
        - metric_name
        - critique_ids
      title: MetricCritiqueJobConfiguration
      type: object
    MetricDescriptions:
      enum:
        - A measure of the model's own confusion in its output. Higher scores indicate
          higher uncertainty.
        - "Measures whether the LLM's response is supported by (or baked in) the context
          provided. "
        - Measures how well the LLM follows the system instructions provided in the
          prompt.
        - Measures how well the workflow's response aligns with the ground truth provided.
        - Detects whether the model selected the right Tool with the right arguments.
        - Detects whether the Tool executed successfully (i.e. without errors).
        - Measures the relevance of the retrieved context to the user's query as the
          semantic distance between the two.
        - Measures the potential presence of factual errors or inconsistencies in the
          model's response.
        - Classifies the sentiment of the user's input into one of joy, love, fear,
          surprise, sadness, anger, annoyance, confusion or neutral.
        - Measures how 'sexist' a user's input might be perceived ranging in the values
          of 0-1 (1 being more sexist).
        - Measures the presence and severity of harmful, offensive, or abusive language
        - Tracks the presence of personal identifiable information in the user's input
        - Classifies the sentiment in the model's response into one of joy, love, fear,
          surprise, sadness, anger, annoyance, confusion or neutral.
        - Measures how 'sexist' a response might be perceived ranging in the values
          of 0-1 (1 being more sexist).
        - Measures the presence and severity of harmful, offensive, or abusive language
          in the model's response
        - Tracks the presence of personal identifiable information in the LLM's responses
        - Measures the presence of prompt injection attacks in inputs to the LLM.
        - Measures the perplexity of the prompt. Lower perplexity score is generally
          considered to be better because it means the model is less surprised by the
          text and can predict the next word in a sentence with higher accuracy.
        - Measures which documents or chunks retrieved were used by the model to generate
          a response.
        - Measures how much of the text in the retrieved chunks was used by the model
          to compose its response.
        - Measures how much of the text in the retrieved chunks was relevant to the
          response composed by the model.
        - A response-level metric measuring 'out of all the information in the context
          pertinent to the question, how much was covered in the answer?'
        - BLEU is a case-sensitive measurement of the difference between an model generation
          and target generation at the sentence-level.
        - ROUGE measures the unigram overlap between model generation and target generation
          as a single F-1 score.
        - Cost of executing the run and does not include any costs incurred for metric
          calculation.
        - Cost of all the metrics that call the OpenAI API.
        - Detects whether the user successfully accomplished or advanced towards their
          goal.
        - Measures which documents or chunks retrieved were used by the model to generate
          a response, and how much of the text in the retrieved chunks was used by the
          model to compose its response.
      title: MetricDescriptions
      type: string
    MetricError:
      properties:
        message:
          anyOf:
            - type: string
            - type: "null"
          default: An error occured.
          title: Message
        scorer_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
        status_type:
          const: error
          default: error
          title: Status Type
          type: string
      title: MetricError
      type: object
    MetricFailed:
      properties:
        message:
          anyOf:
            - type: string
            - type: "null"
          default: Metric failed to compute.
          title: Message
        scorer_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
        status_type:
          const: failed
          default: failed
          title: Status Type
          type: string
      title: MetricFailed
      type: object
    MetricInputs:
      description: "Metric inputs for a prompt template.

        Include an optional inputs_config to help formatting with a prompt template."
      properties:
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          title: Ground Truth
        query:
          title: Query
          type: string
        response:
          title: Response
          type: string
        tools:
          anyOf:
            - type: string
            - type: "null"
          title: Tools
      required:
        - query
        - response
      title: MetricInputs
      type: object
    MetricInsight:
      properties:
        aggregate:
          anyOf:
            - type: number
            - type: "null"
          title: Aggregate
        categories:
          additionalProperties:
            type: integer
          title: Categories
          type: object
        column_name:
          title: Column Name
          type: string
        insight_type:
          $ref: "#/components/schemas/InsightType"
        metric_threshold:
          anyOf:
            - $ref: "#/components/schemas/MetricThreshold"
            - type: "null"
        title:
          title: Title
          type: string
      required:
        - title
        - column_name
        - insight_type
        - categories
      title: MetricInsight
      type: object
    MetricNotApplicable:
      properties:
        message:
          default: Metric not applicable.
          title: Message
          type: string
        scorer_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
        status_type:
          const: not_applicable
          default: not_applicable
          title: Status Type
          type: string
      title: MetricNotApplicable
      type: object
    MetricNotComputed:
      properties:
        message:
          anyOf:
            - type: string
            - type: "null"
          default: Metric not computed.
          title: Message
        scorer_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
        status_type:
          const: not_computed
          default: not_computed
          title: Status Type
          type: string
      title: MetricNotComputed
      type: object
    MetricPending:
      properties:
        scorer_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
        status_type:
          const: pending
          default: pending
          title: Status Type
          type: string
      title: MetricPending
      type: object
    MetricSuccess:
      properties:
        cost:
          anyOf:
            - type: number
            - type: "null"
          title: Cost
        critique:
          anyOf:
            - $ref: "#/components/schemas/MetricCritiqueColumnar"
            - type: "null"
        display_value:
          anyOf:
            - type: string
            - type: "null"
          title: Display Value
        explanation:
          anyOf:
            - type: string
            - type: "null"
          title: Explanation
        model_alias:
          anyOf:
            - type: string
            - type: "null"
          title: Model Alias
        num_judges:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Judges
        rationale:
          anyOf:
            - type: string
            - type: "null"
          title: Rationale
        scorer_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
        status_type:
          const: success
          default: success
          title: Status Type
          type: string
        value:
          anyOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - format: uuid
              type: string
            - format: date-time
              type: string
            - $ref: "#/components/schemas/Segment"
            - $ref: "#/components/schemas/HallucinationSegment"
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/FeedbackRatingDB"
            - $ref: "#/components/schemas/FeedbackAggregate"
            - items:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
                  - type: boolean
                  - format: uuid
                    type: string
                  - format: date-time
                    type: string
                  - $ref: "#/components/schemas/Segment"
                  - $ref: "#/components/schemas/HallucinationSegment"
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/FeedbackRatingDB"
                  - $ref: "#/components/schemas/FeedbackAggregate"
                  - type: "null"
              type: array
            - items:
                items:
                  anyOf:
                    - type: string
                    - type: integer
                    - type: number
                    - type: boolean
                    - format: uuid
                      type: string
                    - format: date-time
                      type: string
                    - $ref: "#/components/schemas/Segment"
                    - $ref: "#/components/schemas/HallucinationSegment"
                    - $ref: "#/components/schemas/Document"
                    - $ref: "#/components/schemas/FeedbackRatingDB"
                    - $ref: "#/components/schemas/FeedbackAggregate"
                    - type: "null"
                type: array
              type: array
            - items:
                items:
                  items:
                    anyOf:
                      - type: string
                      - type: integer
                      - type: number
                      - type: boolean
                      - format: uuid
                        type: string
                      - format: date-time
                        type: string
                      - $ref: "#/components/schemas/Segment"
                      - $ref: "#/components/schemas/HallucinationSegment"
                      - $ref: "#/components/schemas/Document"
                      - $ref: "#/components/schemas/FeedbackRatingDB"
                      - $ref: "#/components/schemas/FeedbackAggregate"
                      - type: "null"
                  type: array
                type: array
              type: array
            - type: "null"
          title: Value
      required:
        - value
      title: MetricSuccess
      type: object
    MetricThreshold:
      properties:
        buckets:
          description:
            Threshold buckets for the column. If the column is a metric,
            these are the thresholds for the column.
          items:
            anyOf:
              - type: integer
              - type: number
          title: Buckets
          type: array
        display_value_levels:
          description:
            Ordered list of strings that raw values get transformed to
            for displaying.
          items:
            type: string
          title: Display Value Levels
          type: array
        inverted:
          default: false
          description:
            Whether the column should be inverted for thresholds, i.e.
            if True, lower is better.
          title: Inverted
          type: boolean
      title: MetricThreshold
      type: object
    MetricWeight:
      properties:
        description:
          anyOf:
            - $ref: "#/components/schemas/MetricDescriptions"
            - type: "null"
        group_label:
          anyOf:
            - $ref: "#/components/schemas/GroupLabel"
            - type: "null"
        label:
          anyOf:
            - type: string
            - type: "null"
          title: Label
        weight:
          default: 0.5
          title: Weight
          type: number
      title: MetricWeight
      type: object
    Metrics:
      additionalProperties: true
      properties:
        bleu:
          anyOf:
            - type: number
            - type: "null"
          title: Bleu
        context_relevance:
          anyOf:
            - type: number
            - type: "null"
          title: Context Relevance
        factuality:
          anyOf:
            - type: number
            - type: "null"
          title: Factuality
        groundedness:
          anyOf:
            - type: number
            - type: "null"
          title: Groundedness
        hallucination:
          anyOf:
            - type: number
            - type: "null"
          title: Hallucination
        instruction_adherence:
          anyOf:
            - type: number
            - type: "null"
          title: Instruction Adherence
        latency:
          anyOf:
            - type: number
            - type: "null"
          title: Latency
        pii:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Pii
        rouge:
          anyOf:
            - type: number
            - type: "null"
          title: Rouge
        toxicity:
          anyOf:
            - type: number
            - type: "null"
          title: Toxicity
      title: Metrics
      type: object
    MetricsRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: MetricsRequest
      type: object
    MetricsResponse:
      properties:
        accuracy:
          anyOf:
            - type: number
            - type: "null"
          title: Accuracy
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        confidence:
          anyOf:
            - type: number
            - type: "null"
          title: Confidence
        data_error_potential:
          anyOf:
            - type: number
            - type: "null"
          title: Data Error Potential
        f1:
          anyOf:
            - type: number
            - type: "null"
          title: F1
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        multi_label_task_metrics:
          $ref: "#/components/schemas/MultiLabelTaskMetrics"
          default:
            f1: []
            labels: []
            precision: []
            recall: []
        precision:
          anyOf:
            - type: number
            - type: "null"
          title: Precision
        recall:
          anyOf:
            - type: number
            - type: "null"
          title: Recall
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: MetricsResponse
      type: object
    MistralIntegration:
      properties:
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        name:
          const: mistral
          default: mistral
          title: Name
          type: string
      title: MistralIntegration
      type: object
    MistralIntegrationCreate:
      properties:
        token:
          title: Token
          type: string
      required:
        - token
      title: MistralIntegrationCreate
      type: object
    Model:
      properties:
        alias:
          title: Alias
          type: string
        api_version:
          anyOf:
            - type: string
            - type: "null"
          title: Api Version
        assistant_role:
          anyOf:
            - type: string
            - type: "null"
          title: Assistant Role
        cost_by:
          $ref: "#/components/schemas/ModelCostBy"
          default: tokens
        formatting_tokens:
          default: 0
          title: Formatting Tokens
          type: integer
        input_map:
          anyOf:
            - $ref: "#/components/schemas/InputMap"
            - type: "null"
        input_price:
          default: 0
          title: Input Price
          type: number
        input_token_limit:
          anyOf:
            - type: integer
            - type: "null"
          title: Input Token Limit
        integration:
          $ref: "#/components/schemas/LLMIntegration"
          default: openai
        is_chat:
          default: false
          title: Is Chat
          type: boolean
        name:
          title: Name
          type: string
        output_map:
          anyOf:
            - $ref: "#/components/schemas/OutputMap"
            - type: "null"
        output_price:
          default: 0
          title: Output Price
          type: number
        output_token_limit:
          anyOf:
            - type: integer
            - type: "null"
          title: Output Token Limit
        params_map:
          $ref: "#/components/schemas/RunParamsMap"
        provides_log_probs:
          default: false
          title: Provides Log Probs
          type: boolean
        response_prefix_tokens:
          default: 0
          title: Response Prefix Tokens
          type: integer
        system_supported:
          default: false
          title: System Supported
          type: boolean
        token_limit:
          anyOf:
            - type: integer
            - type: "null"
          title: Token Limit
        user_role:
          anyOf:
            - type: string
            - type: "null"
          title: User Role
      required:
        - name
        - alias
      title: Model
      type: object
    ModelCostBy:
      enum:
        - tokens
        - characters
      title: ModelCostBy
      type: string
    ModelInfo:
      description:
        "Model information that is useful to surface to the UI and in other
        contexts.


        This is a subset of all of the information we store about the model. We need
        a lot more

        information to actually execute requests against the model, but that is not
        necessary

        to surface to the user."
      properties:
        alias:
          title: Alias
          type: string
        assistant_role:
          anyOf:
            - type: string
            - type: "null"
          title: Assistant Role
        integration:
          $ref: "#/components/schemas/LLMIntegration"
          default: openai
        name:
          title: Name
          type: string
        system_supported:
          default: false
          title: System Supported
          type: boolean
        user_role:
          anyOf:
            - type: string
            - type: "null"
          title: User Role
      required:
        - name
        - alias
      title: ModelInfo
      type: object
    ModelKind:
      enum:
        - transformers
        - setfit
      title: ModelKind
      type: string
    ModelMetrics:
      properties:
        accuracy:
          title: Accuracy
          type: number
        confidence:
          anyOf:
            - type: number
            - type: "null"
          title: Confidence
        dep_distribution:
          anyOf:
            - $ref: "#/components/schemas/Distribution"
            - type: "null"
        f1:
          title: F1
          type: number
        multi_label_task_metrics:
          $ref: "#/components/schemas/MultiLabelTaskMetrics"
          default:
            f1: []
            labels: []
            precision: []
            recall: []
        precision:
          title: Precision
          type: number
        recall:
          title: Recall
          type: number
      required:
        - precision
        - recall
        - f1
        - accuracy
      title: ModelMetrics
      type: object
    ModelType:
      enum:
        - slm
        - llm
      title: ModelType
      type: string
    ModelUploadStatus:
      enum:
        - pending
        - completed
        - failed
      title: ModelUploadStatus
      type: string
    MultiLabelCoOccurrence:
      description: Label co-occurrence across tasks.
      properties:
        co_occurrences:
          items:
            $ref: "#/components/schemas/LabelCoOccurences"
          title: Co Occurrences
          type: array
        num_samples:
          title: Num Samples
          type: integer
        percent_samples:
          title: Percent Samples
          type: number
      required:
        - num_samples
        - percent_samples
        - co_occurrences
      title: MultiLabelCoOccurrence
      type: object
    MultiLabelTaskMetrics:
      description: Metrics per task for multi-label models.
      properties:
        f1:
          default: []
          items:
            type: number
          title: F1
          type: array
        labels:
          items:
            anyOf:
              - type: string
              - type: integer
              - type: boolean
          title: Labels
          type: array
        precision:
          default: []
          items:
            type: number
          title: Precision
          type: array
        recall:
          default: []
          items:
            type: number
          title: Recall
          type: array
      title: MultiLabelTaskMetrics
      type: object
    NodeNameFilter:
      description: Filters on node names in scorer jobs.
      properties:
        case_sensitive:
          default: true
          title: Case Sensitive
          type: boolean
        filter_type:
          const: string
          default: string
          title: Filter Type
          type: string
        name:
          const: node_name
          default: node_name
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - contains
          title: Operator
          type: string
        value:
          title: Value
          type: string
      required:
        - value
        - operator
      title: NodeNameFilter
      type: object
    NodeType:
      enum:
        - chain
        - chat
        - llm
        - retriever
        - tool
        - agent
        - workflow
        - trace
      title: NodeType
      type: string
    NoiseType:
      enum:
        - Label Noise
        - Feature Noise
        - None
      title: NoiseType
      type: string
    ObserveProjectSettings:
      properties:
        alerts_configuration:
          anyOf:
            - $ref: "#/components/schemas/AlertsConfiguration"
            - type: "null"
        customized_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/CustomizedScorer"
              type: array
            - type: "null"
          title: Customized Scorers Configuration
        generated_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/GeneratedScorerConfig"
              type: array
            - type: "null"
          title: Generated Scorers Configuration
        registered_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/RegisteredScorer"
              type: array
            - type: "null"
          title: Registered Scorers Configuration
        scorers_config:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfig"
            - type: "null"
        scorers_configuration:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfiguration"
            - type: "null"
      title: ObserveProjectSettings
      type: object
    OpenAIFunction:
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: OpenAIFunction
      type: object
    OpenAIIntegration:
      properties:
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        name:
          const: openai
          default: openai
          title: Name
          type: string
        organization_id:
          anyOf:
            - type: string
            - type: "null"
          title: Organization Id
      title: OpenAIIntegration
      type: object
    OpenAIIntegrationCreate:
      properties:
        organization_id:
          anyOf:
            - type: string
            - type: "null"
          title: Organization Id
        token:
          title: Token
          type: string
      required:
        - token
      title: OpenAIIntegrationCreate
      type: object
    OpenAIToolChoice:
      properties:
        function:
          $ref: "#/components/schemas/OpenAIFunction"
        type:
          default: function
          title: Type
          type: string
      required:
        - function
      title: OpenAIToolChoice
      type: object
    Operator:
      enum:
        - eq
        - ne
        - gt
        - gte
        - lt
        - lte
        - in
        - not_in
        - contains
        - has_all
        - between
        - like
      title: Operator
      type: string
    OutputMap:
      properties:
        completion_reason:
          anyOf:
            - type: string
            - type: "null"
          title: Completion Reason
        input_token_count:
          anyOf:
            - type: string
            - type: "null"
          title: Input Token Count
        output_token_count:
          anyOf:
            - type: string
            - type: "null"
          title: Output Token Count
        response:
          title: Response
          type: string
        token_count:
          anyOf:
            - type: string
            - type: "null"
          title: Token Count
      required:
        - response
      title: OutputMap
      type: object
    OutputPIIScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: output_pii
          default: output_pii
          title: Name
          type: string
      title: OutputPIIScorer
      type: object
    OutputSexistScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: output_sexist
          default: output_sexist
          title: Name
          type: string
      title: OutputSexistScorer
      type: object
    OutputToneScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: output_tone
          default: output_tone
          title: Name
          type: string
      title: OutputToneScorer
      type: object
    OutputToxicityScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: output_toxicity
          default: output_toxicity
          title: Name
          type: string
      title: OutputToxicityScorer
      type: object
    OverrideAction:
      properties:
        choices:
          description:
            List of choices to override the response with. If there are
            multiple choices, one will be chosen at random when applying this action.
          items:
            type: string
          minItems: 1
          title: Choices
          type: array
        subscriptions:
          description:
            List of subscriptions to send a notification to when this action
            is applied and the ruleset status matches any of the configured statuses.
          items:
            $ref: "#/components/schemas/SubscriptionConfig"
          title: Subscriptions
          type: array
        type:
          const: OVERRIDE
          default: OVERRIDE
          title: Type
          type: string
      required:
        - choices
      title: OverrideAction
      type: object
    PassthroughAction:
      properties:
        subscriptions:
          description:
            List of subscriptions to send a notification to when this action
            is applied and the ruleset status matches any of the configured statuses.
          items:
            $ref: "#/components/schemas/SubscriptionConfig"
          title: Subscriptions
          type: array
        type:
          const: PASSTHROUGH
          default: PASSTHROUGH
          title: Type
          type: string
      title: PassthroughAction
      type: object
    PasswordResetEmailResponse:
      properties: {}
      title: PasswordResetEmailResponse
      type: object
    PasswordResetResponse:
      properties:
        pathname:
          title: Pathname
          type: string
      required:
        - pathname
      title: PasswordResetResponse
      type: object
    Payload:
      properties:
        input:
          anyOf:
            - type: string
            - type: "null"
          description: Input text to be processed.
          title: Input
        output:
          anyOf:
            - type: string
            - type: "null"
          description: Output text to be processed.
          title: Output
      title: Payload
      type: object
    Permission:
      properties:
        action:
          anyOf:
            - $ref: "#/components/schemas/UserAction"
            - $ref: "#/components/schemas/GroupAction"
            - $ref: "#/components/schemas/GroupMemberAction"
            - $ref: "#/components/schemas/ProjectAction"
            - $ref: "#/components/schemas/RegisteredScorerAction"
            - $ref: "#/components/schemas/ApiKeyAction"
            - $ref: "#/components/schemas/GeneratedScorerAction"
            - $ref: "#/components/schemas/DatasetAction"
          title: Action
        allowed:
          title: Allowed
          type: boolean
        message:
          anyOf:
            - type: string
            - type: "null"
          title: Message
      required:
        - action
        - allowed
      title: Permission
      type: object
    PolygonData:
      properties:
        accuracy:
          anyOf:
            - type: number
            - type: "null"
          title: Accuracy
        area:
          anyOf:
            - type: integer
            - type: "null"
          title: Area
        background_error_pct:
          anyOf:
            - type: number
            - type: "null"
          title: Background Error Pct
        contours:
          items: {}
          title: Contours
          type: array
        data_error_potential:
          title: Data Error Potential
          type: number
        error_type:
          anyOf:
            - $ref: "#/components/schemas/SemSegErrorType"
            - type: "null"
        gold:
          anyOf:
            - type: string
            - type: "null"
          title: Gold
        id:
          title: Id
          type: integer
        is_active:
          title: Is Active
          type: boolean
        is_gold:
          title: Is Gold
          type: boolean
        is_pred:
          title: Is Pred
          type: boolean
        pred:
          anyOf:
            - type: string
            - type: "null"
          title: Pred
        size:
          anyOf:
            - $ref: "#/components/schemas/PolygonSize"
            - type: "null"
      required:
        - id
        - is_active
        - is_pred
        - is_gold
        - data_error_potential
        - contours
      title: PolygonData
      type: object
    PolygonSize:
      enum:
        - extra_small
        - small
        - medium
        - large
        - extra_large
      title: PolygonSize
      type: string
    ProjectAction:
      enum:
        - update
        - delete
        - rename
        - share
        - create_run
        - delete_run
        - rename_run
        - move_run
        - export_data
        - configure_human_feedback
        - record_human_feedback
        - log_data
        - toggle_metric
        - edit_alert
        - create_stage
        - edit_stage
        - configure_crown_logic
        - delete_data
        - set_metric
        - edit_run_tags
        - dismiss_alert
        - edit_slice
        - edit_edit
      title: ProjectAction
      type: string
    ProjectBookmarkFilter:
      properties:
        name:
          const: bookmark
          default: bookmark
          title: Name
          type: string
        value:
          title: Value
          type: boolean
      required:
        - value
      title: ProjectBookmarkFilter
      type: object
    ProjectBookmarkSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: bookmark
          default: bookmark
          title: Name
          type: string
        sort_type:
          const: custom
          default: custom
          title: Sort Type
          type: string
      title: ProjectBookmarkSort
      type: object
    ProjectCollectionParams:
      properties:
        filters:
          items:
            discriminator:
              mapping:
                bookmark: "#/components/schemas/ProjectBookmarkFilter"
                created_at: "#/components/schemas/ProjectCreatedAtFilter"
                creator: "#/components/schemas/ProjectCreatorFilter"
                id: "#/components/schemas/ProjectIDFilter"
                name: "#/components/schemas/ProjectNameFilter"
                runs: "#/components/schemas/ProjectRunsFilter"
                type: "#/components/schemas/ProjectTypeFilter"
                updated_at: "#/components/schemas/ProjectUpdatedAtFilter"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/ProjectIDFilter"
              - $ref: "#/components/schemas/ProjectNameFilter"
              - $ref: "#/components/schemas/ProjectTypeFilter"
              - $ref: "#/components/schemas/ProjectCreatorFilter"
              - $ref: "#/components/schemas/ProjectCreatedAtFilter"
              - $ref: "#/components/schemas/ProjectUpdatedAtFilter"
              - $ref: "#/components/schemas/ProjectRunsFilter"
              - $ref: "#/components/schemas/ProjectBookmarkFilter"
          title: Filters
          type: array
        sort:
          anyOf:
            - discriminator:
                mapping:
                  bookmark: "#/components/schemas/ProjectBookmarkSort"
                  created_at: "#/components/schemas/ProjectCreatedAtSort"
                  name: "#/components/schemas/ProjectNameSort"
                  runs: "#/components/schemas/ProjectRunsSort"
                  type: "#/components/schemas/ProjectTypeSort"
                  updated_at: "#/components/schemas/ProjectUpdatedAtSort"
                propertyName: name
              oneOf:
                - $ref: "#/components/schemas/ProjectNameSort"
                - $ref: "#/components/schemas/ProjectTypeSort"
                - $ref: "#/components/schemas/ProjectCreatedAtSort"
                - $ref: "#/components/schemas/ProjectUpdatedAtSort"
                - $ref: "#/components/schemas/ProjectRunsSort"
                - $ref: "#/components/schemas/ProjectBookmarkSort"
            - type: "null"
          default: None
          title: Sort
      title: ProjectCollectionParams
      type: object
    ProjectCreate:
      properties:
        create_example_templates:
          default: false
          title: Create Example Templates
          type: boolean
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        name:
          minLength: 1
          title: Name
          type: string
        type:
          $ref: "#/components/schemas/ProjectType"
          default: training_inference
      required:
        - name
      title: ProjectCreate
      type: object
    ProjectCreateResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        id:
          format: uuid4
          title: Id
          type: string
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        type:
          anyOf:
            - $ref: "#/components/schemas/ProjectType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_at
        - updated_at
      title: ProjectCreateResponse
      type: object
    ProjectCreatedAtFilter:
      properties:
        name:
          const: created_at
          default: created_at
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          title: Operator
          type: string
        value:
          format: date-time
          title: Value
          type: string
      required:
        - value
        - operator
      title: ProjectCreatedAtFilter
      type: object
    ProjectCreatedAtSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: created_at
          default: created_at
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: ProjectCreatedAtSort
      type: object
    ProjectCreatorFilter:
      properties:
        name:
          const: creator
          default: creator
          title: Name
          type: string
        value:
          format: uuid4
          title: Value
          type: string
      required:
        - value
      title: ProjectCreatorFilter
      type: object
    ProjectDB:
      properties:
        bookmark:
          default: false
          title: Bookmark
          type: boolean
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        runs:
          items:
            $ref: "#/components/schemas/RunDB"
          title: Runs
          type: array
        type:
          anyOf:
            - $ref: "#/components/schemas/ProjectType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_by
        - runs
        - created_at
        - updated_at
      title: ProjectDB
      type: object
    ProjectDBThin:
      properties:
        bookmark:
          default: false
          title: Bookmark
          type: boolean
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        runs:
          items:
            $ref: "#/components/schemas/RunDBThin"
          title: Runs
          type: array
        type:
          anyOf:
            - $ref: "#/components/schemas/ProjectType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_by
        - runs
        - created_at
        - updated_at
      title: ProjectDBThin
      type: object
    ProjectDeleteResponse:
      properties:
        message:
          title: Message
          type: string
      required:
        - message
      title: ProjectDeleteResponse
      type: object
    ProjectIDFilter:
      properties:
        name:
          const: id
          default: id
          title: Name
          type: string
        value:
          format: uuid4
          title: Value
          type: string
      required:
        - value
      title: ProjectIDFilter
      type: object
    ProjectIntegration:
      properties:
        models:
          items:
            type: string
          title: Models
          type: array
        scorer_models:
          items:
            type: string
          title: Scorer Models
          type: array
      required:
        - models
        - scorer_models
      title: ProjectIntegration
      type: object
    ProjectIntegrationsResponse:
      properties:
        integrations:
          additionalProperties:
            $ref: "#/components/schemas/ProjectIntegration"
          propertyNames:
            $ref: "#/components/schemas/LLMIntegration"
          title: Integrations
          type: object
      required:
        - integrations
      title: ProjectIntegrationsResponse
      type: object
    ProjectNameFilter:
      properties:
        case_sensitive:
          default: true
          title: Case Sensitive
          type: boolean
        name:
          const: name
          default: name
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - contains
          title: Operator
          type: string
        value:
          title: Value
          type: string
      required:
        - value
        - operator
      title: ProjectNameFilter
      type: object
    ProjectNameSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: name
          default: name
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: ProjectNameSort
      type: object
    ProjectRunSummary:
      properties:
        avg_samples:
          title: Avg Samples
          type: number
        data_edits:
          default: []
          items:
            $ref: "#/components/schemas/EditSummary"
          title: Data Edits
          type: array
        hard_sample_metrics:
          anyOf:
            - $ref: "#/components/schemas/ModelMetrics"
            - type: "null"
        hard_sample_pct:
          title: Hard Sample Pct
          type: number
        id:
          format: uuid4
          title: Id
          type: string
        labels:
          items:
            type: string
          title: Labels
          type: array
        metrics:
          $ref: "#/components/schemas/ModelMetrics"
        name:
          title: Name
          type: string
        num_samples:
          title: Num Samples
          type: integer
        num_spans:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Spans
        slices:
          items:
            $ref: "#/components/schemas/SliceMetrics"
          title: Slices
          type: array
        spans_per_class:
          anyOf:
            - type: number
            - type: "null"
          title: Spans Per Class
        spans_per_sample:
          anyOf:
            - type: number
            - type: "null"
          title: Spans Per Sample
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        task_type:
          $ref: "#/components/schemas/TaskType"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - name
        - task_type
        - labels
        - num_samples
        - metrics
        - slices
        - updated_at
        - avg_samples
        - hard_sample_pct
      title: ProjectRunSummary
      type: object
    ProjectRunsFilter:
      properties:
        name:
          const: runs
          default: runs
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
            - between
          title: Operator
          type: string
        value:
          anyOf:
            - type: integer
            - items:
                type: integer
              type: array
          title: Value
      required:
        - value
        - operator
      title: ProjectRunsFilter
      type: object
    ProjectRunsSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: runs
          default: runs
          title: Name
          type: string
        sort_type:
          const: custom
          default: custom
          title: Sort Type
          type: string
      title: ProjectRunsSort
      type: object
    ProjectSettingsDB:
      properties:
        alerts_configuration:
          anyOf:
            - $ref: "#/components/schemas/AlertsConfiguration"
            - type: "null"
        created_at:
          format: date-time
          title: Created At
          type: string
        customized_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/CustomizedScorer"
              type: array
            - type: "null"
          title: Customized Scorers Configuration
        generated_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/GeneratedScorerConfig"
              type: array
            - type: "null"
          title: Generated Scorers Configuration
        id:
          format: uuid4
          title: Id
          type: string
        metric_weights_configuration:
          anyOf:
            - additionalProperties:
                $ref: "#/components/schemas/MetricWeight"
              type: object
            - type: "null"
          title: Metric Weights Configuration
        project_id:
          format: uuid4
          title: Project Id
          type: string
        registered_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/RegisteredScorer"
              type: array
            - type: "null"
          title: Registered Scorers Configuration
        scorers_config:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfig"
            - type: "null"
        scorers_configuration:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfiguration"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - project_id
        - id
        - created_at
        - updated_at
      title: ProjectSettingsDB
      type: object
    ProjectType:
      enum:
        - training_inference
        - prompt_evaluation
        - llm_monitor
        - protect
        - gen_ai
      title: ProjectType
      type: string
    ProjectTypeFilter:
      properties:
        name:
          const: type
          default: type
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - one_of
            - not_in
          title: Operator
          type: string
        value:
          anyOf:
            - $ref: "#/components/schemas/ProjectType"
            - items:
                $ref: "#/components/schemas/ProjectType"
              type: array
          title: Value
      required:
        - value
        - operator
      title: ProjectTypeFilter
      type: object
    ProjectTypeSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: type
          default: type
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: ProjectTypeSort
      type: object
    ProjectUpdate:
      properties:
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        type:
          anyOf:
            - $ref: "#/components/schemas/ProjectType"
            - type: "null"
      title: ProjectUpdate
      type: object
    ProjectUpdateResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        id:
          format: uuid4
          title: Id
          type: string
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        type:
          anyOf:
            - $ref: "#/components/schemas/ProjectType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - created_at
        - updated_at
      title: ProjectUpdateResponse
      type: object
    ProjectUpdatedAtFilter:
      properties:
        name:
          const: updated_at
          default: updated_at
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          title: Operator
          type: string
        value:
          format: date-time
          title: Value
          type: string
      required:
        - value
        - operator
      title: ProjectUpdatedAtFilter
      type: object
    ProjectUpdatedAtSort:
      properties:
        ascending:
          default: true
          title: Ascending
          type: boolean
        name:
          const: updated_at
          default: updated_at
          title: Name
          type: string
        sort_type:
          const: column
          default: column
          title: Sort Type
          type: string
      title: ProjectUpdatedAtSort
      type: object
    PromptChainIngestBatchRequest:
      properties:
        generated_scorers:
          anyOf:
            - items:
                $ref: "#/components/schemas/GeneratedScorerConfig"
              type: array
            - type: "null"
          title: Generated Scorers
        prompt_customized_scorers_configuration:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    _customized_agentic_workflow_success: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                    _customized_chunk_attribution_utilization_gpt: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                    _customized_completeness_gpt: "#/components/schemas/CustomizedCompletenessGPTScorer"
                    _customized_factuality: "#/components/schemas/CustomizedFactualityGPTScorer"
                    _customized_ground_truth_adherence: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                    _customized_groundedness: "#/components/schemas/CustomizedGroundednessGPTScorer"
                    _customized_instruction_adherence: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                    _customized_tool_error_rate: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
                    _customized_tool_selection_quality: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  propertyName: scorer_name
                oneOf:
                  - $ref: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                  - $ref: "#/components/schemas/CustomizedCompletenessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedFactualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundednessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
              type: array
            - type: "null"
          title: Prompt Customized Scorers Configuration
        prompt_registered_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/RegisteredScorer"
              type: array
            - type: "null"
          title: Prompt Registered Scorers Configuration
        prompt_scorers_configuration:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfiguration"
            - type: "null"
        rows:
          items:
            $ref: "#/components/schemas/ChainRow"
          title: Rows
          type: array
        scorers:
          items:
            discriminator:
              mapping:
                agentic_workflow_success: "#/components/schemas/AgenticWorkflowSuccessScorer"
                bleu: "#/components/schemas/BleuScorer"
                chunk_attribution_utilization: "#/components/schemas/ChunkAttributionUtilizationScorer"
                completeness: "#/components/schemas/CompletenessScorer"
                context_adherence: "#/components/schemas/ContextAdherenceScorer"
                context_relevance: "#/components/schemas/ContextRelevanceScorer"
                correctness: "#/components/schemas/CorrectnessScorer"
                ground_truth_adherence: "#/components/schemas/GroundTruthAdherenceScorer"
                input_pii: "#/components/schemas/InputPIIScorer"
                input_sexist: "#/components/schemas/InputSexistScorer"
                input_tone: "#/components/schemas/InputToneScorer"
                input_toxicity: "#/components/schemas/InputToxicityScorer"
                instruction_adherence: "#/components/schemas/InstructionAdherenceScorer"
                output_pii: "#/components/schemas/OutputPIIScorer"
                output_sexist: "#/components/schemas/OutputSexistScorer"
                output_tone: "#/components/schemas/OutputToneScorer"
                output_toxicity: "#/components/schemas/OutputToxicityScorer"
                prompt_injection: "#/components/schemas/PromptInjectionScorer"
                prompt_perplexity: "#/components/schemas/PromptPerplexityScorer"
                rouge: "#/components/schemas/RougeScorer"
                tool_error_rate: "#/components/schemas/ToolErrorRateScorer"
                tool_selection_quality: "#/components/schemas/ToolSelectionQualityScorer"
                uncertainty: "#/components/schemas/UncertaintyScorer"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/AgenticWorkflowSuccessScorer"
              - $ref: "#/components/schemas/BleuScorer"
              - $ref: "#/components/schemas/ChunkAttributionUtilizationScorer"
              - $ref: "#/components/schemas/CompletenessScorer"
              - $ref: "#/components/schemas/ContextAdherenceScorer"
              - $ref: "#/components/schemas/ContextRelevanceScorer"
              - $ref: "#/components/schemas/CorrectnessScorer"
              - $ref: "#/components/schemas/GroundTruthAdherenceScorer"
              - $ref: "#/components/schemas/InputPIIScorer"
              - $ref: "#/components/schemas/InputSexistScorer"
              - $ref: "#/components/schemas/InputToneScorer"
              - $ref: "#/components/schemas/InputToxicityScorer"
              - $ref: "#/components/schemas/InstructionAdherenceScorer"
              - $ref: "#/components/schemas/OutputPIIScorer"
              - $ref: "#/components/schemas/OutputSexistScorer"
              - $ref: "#/components/schemas/OutputToneScorer"
              - $ref: "#/components/schemas/OutputToxicityScorer"
              - $ref: "#/components/schemas/PromptInjectionScorer"
              - $ref: "#/components/schemas/PromptPerplexityScorer"
              - $ref: "#/components/schemas/RougeScorer"
              - $ref: "#/components/schemas/ToolErrorRateScorer"
              - $ref: "#/components/schemas/ToolSelectionQualityScorer"
              - $ref: "#/components/schemas/UncertaintyScorer"
          title: Scorers
          type: array
        timeout_minutes:
          description:
            Minutes to wait before concluding ingestion, regardless of
            how many batches of chains / chains have been successfully ingested.
          title: Timeout Minutes
          type: integer
        total_chains:
          description:
            Total number of chains / workflows in the batch. This should
            match the unique root ID count and is used to determine if all chains
            have been ingested.
          title: Total Chains
          type: integer
      required:
        - total_chains
      title: PromptChainIngestBatchRequest
      type: object
    PromptChainIngestBatchResponse:
      properties:
        job_id:
          format: uuid4
          title: Job Id
          type: string
        link:
          title: Link
          type: string
        message:
          title: Message
          type: string
        num_chains:
          title: Num Chains
          type: integer
        num_rows:
          title: Num Rows
          type: integer
        total_chains:
          title: Total Chains
          type: integer
      required:
        - num_rows
        - message
        - job_id
        - link
        - num_chains
        - total_chains
      title: PromptChainIngestBatchResponse
      type: object
    PromptChainIngestRequest:
      properties:
        generated_scorers:
          anyOf:
            - items:
                $ref: "#/components/schemas/GeneratedScorerConfig"
              type: array
            - type: "null"
          title: Generated Scorers
        prompt_customized_scorers_configuration:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    _customized_agentic_workflow_success: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                    _customized_chunk_attribution_utilization_gpt: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                    _customized_completeness_gpt: "#/components/schemas/CustomizedCompletenessGPTScorer"
                    _customized_factuality: "#/components/schemas/CustomizedFactualityGPTScorer"
                    _customized_ground_truth_adherence: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                    _customized_groundedness: "#/components/schemas/CustomizedGroundednessGPTScorer"
                    _customized_instruction_adherence: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                    _customized_tool_error_rate: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
                    _customized_tool_selection_quality: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  propertyName: scorer_name
                oneOf:
                  - $ref: "#/components/schemas/CustomizedAgenticWorkflowSuccessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedChunkAttributionUtilizationGPTScorer"
                  - $ref: "#/components/schemas/CustomizedCompletenessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedFactualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundednessGPTScorer"
                  - $ref: "#/components/schemas/CustomizedInstructionAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedGroundTruthAdherenceGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolSelectionQualityGPTScorer"
                  - $ref: "#/components/schemas/CustomizedToolErrorRateGPTScorer"
              type: array
            - type: "null"
          title: Prompt Customized Scorers Configuration
        prompt_registered_scorers_configuration:
          anyOf:
            - items:
                $ref: "#/components/schemas/RegisteredScorer"
              type: array
            - type: "null"
          title: Prompt Registered Scorers Configuration
        prompt_scorers_configuration:
          anyOf:
            - $ref: "#/components/schemas/ScorersConfiguration"
            - type: "null"
        rows:
          items:
            $ref: "#/components/schemas/ChainRow"
          title: Rows
          type: array
        scorers:
          items:
            discriminator:
              mapping:
                agentic_workflow_success: "#/components/schemas/AgenticWorkflowSuccessScorer"
                bleu: "#/components/schemas/BleuScorer"
                chunk_attribution_utilization: "#/components/schemas/ChunkAttributionUtilizationScorer"
                completeness: "#/components/schemas/CompletenessScorer"
                context_adherence: "#/components/schemas/ContextAdherenceScorer"
                context_relevance: "#/components/schemas/ContextRelevanceScorer"
                correctness: "#/components/schemas/CorrectnessScorer"
                ground_truth_adherence: "#/components/schemas/GroundTruthAdherenceScorer"
                input_pii: "#/components/schemas/InputPIIScorer"
                input_sexist: "#/components/schemas/InputSexistScorer"
                input_tone: "#/components/schemas/InputToneScorer"
                input_toxicity: "#/components/schemas/InputToxicityScorer"
                instruction_adherence: "#/components/schemas/InstructionAdherenceScorer"
                output_pii: "#/components/schemas/OutputPIIScorer"
                output_sexist: "#/components/schemas/OutputSexistScorer"
                output_tone: "#/components/schemas/OutputToneScorer"
                output_toxicity: "#/components/schemas/OutputToxicityScorer"
                prompt_injection: "#/components/schemas/PromptInjectionScorer"
                prompt_perplexity: "#/components/schemas/PromptPerplexityScorer"
                rouge: "#/components/schemas/RougeScorer"
                tool_error_rate: "#/components/schemas/ToolErrorRateScorer"
                tool_selection_quality: "#/components/schemas/ToolSelectionQualityScorer"
                uncertainty: "#/components/schemas/UncertaintyScorer"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/AgenticWorkflowSuccessScorer"
              - $ref: "#/components/schemas/BleuScorer"
              - $ref: "#/components/schemas/ChunkAttributionUtilizationScorer"
              - $ref: "#/components/schemas/CompletenessScorer"
              - $ref: "#/components/schemas/ContextAdherenceScorer"
              - $ref: "#/components/schemas/ContextRelevanceScorer"
              - $ref: "#/components/schemas/CorrectnessScorer"
              - $ref: "#/components/schemas/GroundTruthAdherenceScorer"
              - $ref: "#/components/schemas/InputPIIScorer"
              - $ref: "#/components/schemas/InputSexistScorer"
              - $ref: "#/components/schemas/InputToneScorer"
              - $ref: "#/components/schemas/InputToxicityScorer"
              - $ref: "#/components/schemas/InstructionAdherenceScorer"
              - $ref: "#/components/schemas/OutputPIIScorer"
              - $ref: "#/components/schemas/OutputSexistScorer"
              - $ref: "#/components/schemas/OutputToneScorer"
              - $ref: "#/components/schemas/OutputToxicityScorer"
              - $ref: "#/components/schemas/PromptInjectionScorer"
              - $ref: "#/components/schemas/PromptPerplexityScorer"
              - $ref: "#/components/schemas/RougeScorer"
              - $ref: "#/components/schemas/ToolErrorRateScorer"
              - $ref: "#/components/schemas/ToolSelectionQualityScorer"
              - $ref: "#/components/schemas/UncertaintyScorer"
          title: Scorers
          type: array
      title: PromptChainIngestRequest
      type: object
    PromptChainIngestResponse:
      properties:
        job_id:
          format: uuid4
          title: Job Id
          type: string
        link:
          title: Link
          type: string
        message:
          title: Message
          type: string
        num_rows:
          title: Num Rows
          type: integer
      required:
        - num_rows
        - message
        - job_id
        - link
      title: PromptChainIngestResponse
      type: object
    PromptDatasetDB:
      properties:
        dataset_id:
          format: uuid4
          title: Dataset Id
          type: string
        file_name:
          anyOf:
            - type: string
            - type: "null"
          title: File Name
        id:
          format: uuid4
          title: Id
          type: string
        message:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Message
        num_rows:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Rows
        rows:
          anyOf:
            - type: integer
            - type: "null"
          title: Rows
      required:
        - id
        - dataset_id
      title: PromptDatasetDB
      type: object
    PromptFilterParams:
      properties:
        filters:
          description: A list of filters.
          items:
            discriminator:
              mapping:
                category: "#/components/schemas/CategoricalPromptFilterParam"
                range: "#/components/schemas/RangePromptFilterParam"
                value: "#/components/schemas/ValuePromptFilterParam"
              propertyName: filter_type
            oneOf:
              - $ref: "#/components/schemas/RangePromptFilterParam"
              - $ref: "#/components/schemas/ValuePromptFilterParam"
              - $ref: "#/components/schemas/CategoricalPromptFilterParam"
          title: Filters
          type: array
      title: PromptFilterParams
      type: object
    PromptGroupResponse:
      description: Contains relevant data for prompt column group.
      properties:
        columns:
          items:
            type: string
          title: Columns
          type: array
        group_description:
          anyOf:
            - type: string
            - type: "null"
          title: Group Description
        group_icon:
          default: Puzzle
          title: Group Icon
          type: string
        group_label:
          title: Group Label
          type: string
        group_name:
          anyOf:
            - type: string
            - type: "null"
          title: Group Name
      required:
        - group_label
        - columns
      title: PromptGroupResponse
      type: object
    PromptInjectionScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: prompt_injection
          default: prompt_injection
          title: Name
          type: string
      title: PromptInjectionScorer
      type: object
    PromptOptimizationConfiguration:
      description: Configuration for prompt optimization.
      properties:
        evaluation_criteria:
          title: Evaluation Criteria
          type: string
        evaluation_model_alias:
          title: Evaluation Model Alias
          type: string
        generation_model_alias:
          title: Generation Model Alias
          type: string
        includes_target:
          title: Includes Target
          type: boolean
        integration_name:
          $ref: "#/components/schemas/LLMIntegration"
          default: openai
        iterations:
          title: Iterations
          type: integer
        max_tokens:
          title: Max Tokens
          type: integer
        num_rows:
          title: Num Rows
          type: integer
        prompt:
          title: Prompt
          type: string
        task_description:
          title: Task Description
          type: string
        temperature:
          title: Temperature
          type: number
      required:
        - prompt
        - evaluation_criteria
        - task_description
        - includes_target
        - num_rows
        - iterations
        - max_tokens
        - temperature
        - generation_model_alias
        - evaluation_model_alias
      title: PromptOptimizationConfiguration
      type: object
    PromptPerplexityScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: prompt_perplexity
          default: prompt_perplexity
          title: Name
          type: string
      title: PromptPerplexityScorer
      type: object
    PromptRow:
      properties:
        bleu:
          anyOf:
            - type: number
            - type: "null"
          title: Bleu
        chain_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Chain Id
        chain_root_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Chain Root Id
        cost:
          anyOf:
            - type: number
            - type: "null"
          title: Cost
        hallucination:
          anyOf:
            - type: number
            - type: "null"
          title: Hallucination
        hallucination_severity:
          default: 0
          maximum: 2.0
          minimum: 0.0
          title: Hallucination Severity
          type: integer
        has_children:
          anyOf:
            - type: boolean
            - type: "null"
          title: Has Children
        index:
          title: Index
          type: integer
        inputs:
          additionalProperties:
            anyOf:
              - type: string
              - type: "null"
          title: Inputs
          type: object
        metrics:
          $ref: "#/components/schemas/Metrics"
        node_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Node Id
        node_input:
          anyOf:
            - type: string
            - type: "null"
          title: Node Input
        node_name:
          anyOf:
            - type: string
            - type: "null"
          title: Node Name
        node_output:
          anyOf:
            - type: string
            - items:
                type: string
              type: array
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Node Output
        node_type:
          anyOf:
            - $ref: "#/components/schemas/NodeType"
            - type: "null"
        prompt:
          anyOf:
            - type: string
            - type: "null"
          title: Prompt
        prompt_hallucination_severity:
          default: 0
          maximum: 2.0
          minimum: 0.0
          title: Prompt Hallucination Severity
          type: integer
        prompt_segments:
          anyOf:
            - items:
                $ref: "#/components/schemas/HallucinationSegment"
              type: array
            - type: "null"
          title: Prompt Segments
        response:
          anyOf:
            - type: string
            - type: "null"
          title: Response
        response_segments:
          items:
            $ref: "#/components/schemas/HallucinationSegment"
          title: Response Segments
          type: array
        rouge:
          anyOf:
            - type: number
            - type: "null"
          title: Rouge
        segments:
          items:
            $ref: "#/components/schemas/HallucinationSegment"
          title: Segments
          type: array
        target:
          anyOf:
            - type: string
            - type: "null"
          title: Target
      required:
        - index
      title: PromptRow
      type: object
    PromptRowColumn:
      properties:
        alert:
          anyOf:
            - $ref: "#/components/schemas/Alert"
            - type: "null"
          description: Alert for a given column with title and message
        can_critique_column:
          default: false
          title: Can Critique Column
          type: boolean
        data_type:
          $ref: "#/components/schemas/DataTypeOptions"
          default: unknown
          description:
            Data type of the column. This is used to determine how to format
            the data on the UI.
        description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of the column.
          title: Description
        display_values:
          anyOf:
            - items:
                anyOf:
                  - type: string
                  - type: "null"
              type: array
            - type: "null"
          description:
            Display values of the column. This is used to display the values
            in the UI if we want them to be different from the actual values.
          title: Display Values
        filterable:
          default: true
          description:
            Whether the column is filterable by value. Doesn't include
            categorical filters
          title: Filterable
          type: boolean
        group_description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of the group (super column).
          title: Group Description
        group_label:
          anyOf:
            - type: string
            - type: "null"
          description: Display label of the group (super column) in the UI.
          title: Group Label
        group_name:
          anyOf:
            - type: string
            - type: "null"
          description: Name of the group (super column).
          title: Group Name
        job_error_message:
          anyOf:
            - type: string
            - type: "null"
          description:
            Error message to show the users on hover in case the job fails
            or errors out.
          title: Job Error Message
        job_info:
          anyOf:
            - items:
                anyOf:
                  - $ref: "#/components/schemas/JobInfo"
                  - type: "null"
              type: array
            - type: "null"
          description:
            Job info used for computing the column. Only present for metrics
            columns that have a separate scorer job.
          title: Job Info
        job_status:
          anyOf:
            - $ref: "#/components/schemas/JobStatus"
            - type: "null"
          description:
            Job status used for computing the column. Only set for metrics
            columns that have a separate scorer job.
        job_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
          description:
            If a column is associated with a basic or a plus scorer. Defaults
            to None for columns not associated with either.
        label:
          anyOf:
            - type: string
            - type: "null"
          description: Display label of the column in the UI.
          title: Label
        metric_critique_computing:
          default: false
          title: Metric Critique Computing
          type: boolean
        metric_infos:
          description: Metric values with metadata.
          items:
            anyOf:
              - $ref: "#/components/schemas/MetricNotComputed"
              - $ref: "#/components/schemas/MetricPending"
              - $ref: "#/components/schemas/MetricComputing"
              - $ref: "#/components/schemas/MetricNotApplicable"
              - $ref: "#/components/schemas/MetricSuccess"
              - $ref: "#/components/schemas/MetricError"
              - $ref: "#/components/schemas/MetricFailed"
          title: Metric Infos
          type: array
        metric_threshold:
          anyOf:
            - $ref: "#/components/schemas/MetricThreshold"
            - type: "null"
          description: Thresholds for the column, if this is a metrics column.
        name:
          description: Name of the column.
          title: Name
          type: string
        scorer_name:
          anyOf:
            - type: string
            - type: "null"
          description: Scorer Name executed by the job.
          title: Scorer Name
        sortable:
          default: true
          description: Whether the column is sortable.
          title: Sortable
          type: boolean
        source:
          anyOf:
            - type: string
            - type: "null"
          description: Source DF of the column.
          title: Source
        values:
          description: Values of the column.
          items:
            anyOf:
              - type: string
              - type: integer
              - type: number
              - type: boolean
              - format: uuid
                type: string
              - format: date-time
                type: string
              - $ref: "#/components/schemas/Segment"
              - $ref: "#/components/schemas/HallucinationSegment"
              - $ref: "#/components/schemas/Document"
              - $ref: "#/components/schemas/FeedbackRatingDB"
              - $ref: "#/components/schemas/FeedbackAggregate"
              - items:
                  anyOf:
                    - type: string
                    - type: integer
                    - type: number
                    - type: boolean
                    - format: uuid
                      type: string
                    - format: date-time
                      type: string
                    - $ref: "#/components/schemas/Segment"
                    - $ref: "#/components/schemas/HallucinationSegment"
                    - $ref: "#/components/schemas/Document"
                    - $ref: "#/components/schemas/FeedbackRatingDB"
                    - $ref: "#/components/schemas/FeedbackAggregate"
                    - type: "null"
                type: array
              - items:
                  items:
                    anyOf:
                      - type: string
                      - type: integer
                      - type: number
                      - type: boolean
                      - format: uuid
                        type: string
                      - format: date-time
                        type: string
                      - $ref: "#/components/schemas/Segment"
                      - $ref: "#/components/schemas/HallucinationSegment"
                      - $ref: "#/components/schemas/Document"
                      - $ref: "#/components/schemas/FeedbackRatingDB"
                      - $ref: "#/components/schemas/FeedbackAggregate"
                      - type: "null"
                  type: array
                type: array
              - items:
                  items:
                    items:
                      anyOf:
                        - type: string
                        - type: integer
                        - type: number
                        - type: boolean
                        - format: uuid
                          type: string
                        - format: date-time
                          type: string
                        - $ref: "#/components/schemas/Segment"
                        - $ref: "#/components/schemas/HallucinationSegment"
                        - $ref: "#/components/schemas/Document"
                        - $ref: "#/components/schemas/FeedbackRatingDB"
                        - $ref: "#/components/schemas/FeedbackAggregate"
                        - type: "null"
                    type: array
                  type: array
                type: array
              - type: "null"
          title: Values
          type: array
      required:
        - name
      title: PromptRowColumn
      type: object
    PromptRunColumn:
      properties:
        alert:
          anyOf:
            - $ref: "#/components/schemas/Alert"
            - type: "null"
          description: Alert for a given column with title and message
        data_type:
          $ref: "#/components/schemas/DataTypeOptions"
          default: unknown
          description:
            Data type of the column. This is used to determine how to format
            the data on the UI.
        description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of the column.
          title: Description
        display_values:
          anyOf:
            - items:
                anyOf:
                  - type: string
                  - type: "null"
              type: array
            - type: "null"
          description:
            Display values of the column. This is used to display the values
            in the UI if we want them to be different from the actual values.
          title: Display Values
        filterable:
          default: true
          description:
            Whether the column is filterable by value. Doesn't include
            categorical filters
          title: Filterable
          type: boolean
        group_description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of the group (super column).
          title: Group Description
        group_label:
          anyOf:
            - type: string
            - type: "null"
          description: Display label of the group (super column) in the UI.
          title: Group Label
        group_name:
          anyOf:
            - type: string
            - type: "null"
          description: Name of the group (super column).
          title: Group Name
        job_info:
          anyOf:
            - items:
                anyOf:
                  - $ref: "#/components/schemas/JobInfo"
                  - type: "null"
              type: array
            - type: "null"
          description:
            Job info used for computing the column. Only present for metrics
            columns that have a separate scorer job.
          title: Job Info
        job_type:
          anyOf:
            - $ref: "#/components/schemas/ScorerType"
            - type: "null"
          description:
            If a column is associated with a basic or a plus scorer. Defaults
            to None for columns not associated with either.
        label:
          anyOf:
            - type: string
            - type: "null"
          description: Display label of the column in the UI.
          title: Label
        metric_infos:
          description: Metric values with metadata.
          items:
            anyOf:
              - $ref: "#/components/schemas/MetricNotComputed"
              - $ref: "#/components/schemas/MetricPending"
              - $ref: "#/components/schemas/MetricComputing"
              - $ref: "#/components/schemas/MetricNotApplicable"
              - $ref: "#/components/schemas/MetricSuccess"
              - $ref: "#/components/schemas/MetricError"
              - $ref: "#/components/schemas/MetricFailed"
          title: Metric Infos
          type: array
        metric_threshold:
          anyOf:
            - $ref: "#/components/schemas/MetricThreshold"
            - type: "null"
          description: Thresholds for the column, if this is a metrics column.
        name:
          description: Name of the column.
          title: Name
          type: string
        sortable:
          default: true
          description: Whether the column is sortable.
          title: Sortable
          type: boolean
        values:
          description: Values of the column.
          items:
            anyOf:
              - type: string
              - type: integer
              - type: number
              - type: boolean
              - format: uuid
                type: string
              - format: date-time
                type: string
              - $ref: "#/components/schemas/Segment"
              - $ref: "#/components/schemas/HallucinationSegment"
              - $ref: "#/components/schemas/Document"
              - $ref: "#/components/schemas/FeedbackRatingDB"
              - $ref: "#/components/schemas/FeedbackAggregate"
              - items:
                  anyOf:
                    - type: string
                    - type: integer
                    - type: number
                    - type: boolean
                    - format: uuid
                      type: string
                    - format: date-time
                      type: string
                    - $ref: "#/components/schemas/Segment"
                    - $ref: "#/components/schemas/HallucinationSegment"
                    - $ref: "#/components/schemas/Document"
                    - $ref: "#/components/schemas/FeedbackRatingDB"
                    - $ref: "#/components/schemas/FeedbackAggregate"
                    - type: "null"
                type: array
              - items:
                  items:
                    anyOf:
                      - type: string
                      - type: integer
                      - type: number
                      - type: boolean
                      - format: uuid
                        type: string
                      - format: date-time
                        type: string
                      - $ref: "#/components/schemas/Segment"
                      - $ref: "#/components/schemas/HallucinationSegment"
                      - $ref: "#/components/schemas/Document"
                      - $ref: "#/components/schemas/FeedbackRatingDB"
                      - $ref: "#/components/schemas/FeedbackAggregate"
                      - type: "null"
                  type: array
                type: array
              - items:
                  items:
                    items:
                      anyOf:
                        - type: string
                        - type: integer
                        - type: number
                        - type: boolean
                        - format: uuid
                          type: string
                        - format: date-time
                          type: string
                        - $ref: "#/components/schemas/Segment"
                        - $ref: "#/components/schemas/HallucinationSegment"
                        - $ref: "#/components/schemas/Document"
                        - $ref: "#/components/schemas/FeedbackRatingDB"
                        - $ref: "#/components/schemas/FeedbackAggregate"
                        - type: "null"
                    type: array
                  type: array
                type: array
              - type: "null"
          title: Values
          type: array
      required:
        - name
      title: PromptRunColumn
      type: object
    PromptRunSettings:
      description: Prompt run settings.
      properties:
        deployment_name:
          anyOf:
            - type: string
            - type: "null"
          title: Deployment Name
        echo:
          default: false
          title: Echo
          type: boolean
        frequency_penalty:
          default: 0.0
          title: Frequency Penalty
          type: number
        known_models:
          items:
            $ref: "#/components/schemas/Model"
          title: Known Models
          type: array
        logprobs:
          default: true
          title: Logprobs
          type: boolean
        max_tokens:
          default: 256
          title: Max Tokens
          type: integer
        model_alias:
          default: ChatGPT (4K context)
          title: Model Alias
          type: string
        n:
          default: 1
          title: N
          type: integer
        presence_penalty:
          default: 0.0
          title: Presence Penalty
          type: number
        response_format:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: Response Format
        stop_sequences:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Stop Sequences
        temperature:
          default: 1.0
          title: Temperature
          type: number
        tool_choice:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/OpenAIToolChoice"
            - type: "null"
          title: Tool Choice
        tools:
          anyOf:
            - items:
                type: object
              type: array
            - type: "null"
          title: Tools
        top_k:
          default: 40
          title: Top K
          type: integer
        top_logprobs:
          default: 5
          title: Top Logprobs
          type: integer
        top_p:
          default: 1.0
          title: Top P
          type: number
      title: PromptRunSettings
      type: object
    PromptSampleIDs:
      properties:
        sample_indices:
          additionalProperties:
            items:
              type: integer
            type: array
          propertyNames:
            format: uuid4
          title: Sample Indices
          type: object
        total_samples:
          title: Total Samples
          type: integer
      required:
        - total_samples
        - sample_indices
      title: PromptSampleIDs
      type: object
    PutPromptScoreRequest:
      properties:
        aggregates:
          anyOf:
            - type: object
            - type: "null"
          title: Aggregates
        indices:
          anyOf:
            - items:
                type: integer
              type: array
            - type: "null"
          title: Indices
        metric_name:
          anyOf:
            - type: string
            - type: "null"
          title: Metric Name
        registered_scorer_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Registered Scorer Id
        scores:
          anyOf:
            - items: {}
              type: array
            - type: "null"
          title: Scores
      title: PutPromptScoreRequest
      type: object
    PutPromptScoreResponse:
      properties:
        job_id:
          format: uuid4
          title: Job Id
          type: string
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        scorer_name:
          title: Scorer Name
          type: string
      required:
        - project_id
        - run_id
        - job_id
        - scorer_name
      title: PutPromptScoreResponse
      type: object
    QueryDatasetParams:
      properties:
        filters:
          items:
            $ref: "#/components/schemas/DatasetContentFilter"
          title: Filters
          type: array
        sort:
          anyOf:
            - $ref: "#/components/schemas/DatasetContentSortClause"
            - type: "null"
      title: QueryDatasetParams
      type: object
    QueryFilterV1:
      properties:
        alternate_json_field:
          anyOf:
            - type: string
            - type: "null"
          title: Alternate Json Field
        col_name:
          title: Col Name
          type: string
        json_field:
          anyOf:
            - type: string
            - type: "null"
          title: Json Field
        json_field_type:
          anyOf:
            - $ref: "#/components/schemas/FieldType"
            - type: "null"
        operator:
          $ref: "#/components/schemas/Operator"
        value:
          title: Value
        value_is_column:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Value Is Column
      required:
        - col_name
        - value
        - operator
      title: QueryFilterV1
      type: object
    RangePromptFilterParam:
      properties:
        column:
          title: Column
          type: string
        filter_type:
          const: range
          title: Filter Type
          type: string
        high:
          title: High
          type: number
        low:
          title: Low
          type: number
      required:
        - column
        - filter_type
        - low
        - high
      title: RangePromptFilterParam
      type: object
    RecomputeSettingsProject:
      properties:
        mode:
          const: project
          default: project
          title: Mode
          type: string
      title: RecomputeSettingsProject
      type: object
    RecomputeSettingsRuns:
      properties:
        mode:
          const: runs
          default: runs
          title: Mode
          type: string
        run_ids:
          items:
            format: uuid4
            type: string
          minItems: 1
          title: Run Ids
          type: array
      required:
        - run_ids
      title: RecomputeSettingsRuns
      type: object
    RegisteredScorer:
      properties:
        id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Id
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
      title: RegisteredScorer
      type: object
    RegisteredScorerAction:
      enum:
        - update
        - delete
      title: RegisteredScorerAction
      type: string
    RegisteredScorerConfig:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          description: Name of the scorer to enable.
          title: Name
          type: string
      required:
        - name
      title: RegisteredScorerConfig
      type: object
    RemoteEditExportRequest:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        bucket_name:
          title: Bucket Name
          type: string
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        edit_ids:
          items:
            format: uuid4
            type: string
          title: Edit Ids
          type: array
        edit_overrides:
          anyOf:
            - items:
                $ref: "#/components/schemas/EditOverride"
              type: array
            - type: "null"
          default: []
          title: Edit Overrides
        export_to:
          default: s3
          title: Export To
          type: string
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        min_reviews:
          anyOf:
            - minimum: 0.0
              type: integer
            - type: "null"
          title: Min Reviews
        object_name:
          title: Object Name
          type: string
        only_export_edited:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Only Export Edited
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - edit_ids
        - bucket_name
        - object_name
      title: RemoteEditExportRequest
      type: object
    RemoteEditExportResponse:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        bucket_name:
          title: Bucket Name
          type: string
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        edit_ids:
          items:
            format: uuid4
            type: string
          title: Edit Ids
          type: array
        edit_overrides:
          anyOf:
            - items:
                $ref: "#/components/schemas/EditOverride"
              type: array
            - type: "null"
          default: []
          title: Edit Overrides
        export_to:
          default: s3
          title: Export To
          type: string
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        min_reviews:
          anyOf:
            - minimum: 0.0
              type: integer
            - type: "null"
          title: Min Reviews
        object_name:
          title: Object Name
          type: string
        only_export_edited:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Only Export Edited
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - edit_ids
        - bucket_name
        - object_name
      title: RemoteEditExportResponse
      type: object
    RemoteExportRequest:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        bucket_name:
          title: Bucket Name
          type: string
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        export_to:
          default: s3
          title: Export To
          type: string
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        object_name:
          title: Object Name
          type: string
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - bucket_name
        - object_name
      title: RemoteExportRequest
      type: object
    RemoteExportResponse:
      properties:
        all_but:
          default: false
          title: All But
          type: boolean
        bucket_name:
          title: Bucket Name
          type: string
        col_mapping:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          default: None
          title: Col Mapping
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        export_to:
          default: s3
          title: Export To
          type: string
        file_type:
          $ref: "#/components/schemas/FileType"
          default: csv
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hf_format:
          default: false
          title: Hf Format
          type: boolean
        include_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          default: []
          title: Include Cols
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        object_name:
          title: Object Name
          type: string
        tagging_schema:
          anyOf:
            - $ref: "#/components/schemas/TaggingSchema"
            - type: "null"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - bucket_name
        - object_name
      title: RemoteExportResponse
      type: object
    Request:
      properties:
        headers:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          description:
            Optional additional HTTP headers that should be included in
            the response.
          title: Headers
        metadata:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          description:
            Optional additional metadata. This will be echoed back in the
            response.
          title: Metadata
        payload:
          $ref: "#/components/schemas/Payload"
          description: Payload to be processed.
        prioritized_rulesets:
          description: Rulesets to be applied to the payload.
          items:
            $ref: "#/components/schemas/Ruleset"
          title: Prioritized Rulesets
          type: array
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Project ID.
          title: Project Id
        project_name:
          anyOf:
            - type: string
            - type: "null"
          description: Project name.
          title: Project Name
        stage_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Stage ID.
          title: Stage Id
        stage_name:
          anyOf:
            - type: string
            - type: "null"
          description: Stage name.
          title: Stage Name
        stage_version:
          anyOf:
            - type: integer
            - type: "null"
          description:
            Stage version to use for the request, if it's a central stage
            with a previously registered version.
          title: Stage Version
        timeout:
          default: 300.0
          description:
            Optional timeout for the guardrail execution in seconds. This
            is not the timeout for the request. If not set, a default timeout of 5
            minutes will be used.
          title: Timeout
          type: number
      required:
        - payload
      title: Request
      type: object
    ResourceKind:
      enum:
        - user
        - group
        - group_member
        - project
        - integration
        - registered_scorer
        - generated_scorer
        - api_key
        - dataset
      title: ResourceKind
      type: string
    Response:
      additionalProperties: true
      properties:
        status:
          $ref: "#/components/schemas/ExecutionStatus"
          default: not_triggered
          description: Status of the request after processing the rules.
        text:
          description: Text from the request after processing the rules.
          title: Text
          type: string
        trace_metadata:
          $ref: "#/components/schemas/TraceMetadata"
      required:
        - text
        - trace_metadata
      title: Response
      type: object
    RetrieverSpan:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        parent:
          anyOf:
            - $ref: "#/components/schemas/StepWithChildSpans"
            - type: "null"
          description: Parent node of the current node. For internal use only.
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        type:
          const: retriever
          default: retriever
          description: Type of the step. By default, it is set to retriever.
          title: Type
          type: string
      required:
        - input
      title: RetrieverSpan
      type: object
    RetrieverStep:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          description: Input query to the retriever.
          title: Input
          type: string
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          description:
            Documents retrieved from the retriever. This can be a list
            of strings or `Document`s.
          items:
            $ref: "#/components/schemas/Document"
          title: Output
          type: array
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        type:
          const: retriever
          default: retriever
          description: Type of the step. By default, it is set to retriever.
          title: Type
          type: string
      required:
        - input
      title: RetrieverStep
      type: object
    RollbackRequest:
      properties:
        rollback_version:
          title: Rollback Version
          type: integer
      required:
        - rollback_version
      title: RollbackRequest
      type: object
    RootModel_Sequence_WeeklyChangelog__:
      items:
        $ref: "#/components/schemas/WeeklyChangelog"
      title: RootModel[Sequence[WeeklyChangelog]]
      type: array
    RootModel_Union_InferenceRunResults__SplitRunResults__:
      anyOf:
        - $ref: "#/components/schemas/InferenceRunResults"
        - $ref: "#/components/schemas/SplitRunResults"
      title: RootModel[Union[InferenceRunResults, SplitRunResults]]
    RougeScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: rouge
          default: rouge
          title: Name
          type: string
      title: RougeScorer
      type: object
    Rule:
      properties:
        metric:
          description: Name of the metric.
          title: Metric
          type: string
        operator:
          $ref: "#/components/schemas/RuleOperator"
          description: Operator to use for comparison.
        target_value:
          anyOf:
            - type: string
            - type: number
            - type: integer
            - items: {}
              type: array
            - type: "null"
          description: Value to compare with for this metric (right hand side).
          title: Target Value
      required:
        - metric
        - operator
        - target_value
      title: Rule
      type: object
    RuleOperator:
      enum:
        - gt
        - lt
        - gte
        - lte
        - eq
        - neq
        - contains
        - all
        - any
        - empty
        - not_empty
      title: RuleOperator
      type: string
    RuleResult:
      properties:
        execution_time:
          anyOf:
            - type: number
            - type: "null"
          description: Execution time for the rule in seconds.
          title: Execution Time
        metric:
          description: Name of the metric.
          title: Metric
          type: string
        operator:
          $ref: "#/components/schemas/RuleOperator"
          description: Operator to use for comparison.
        status:
          $ref: "#/components/schemas/ExecutionStatus"
          default: not_triggered
        target_value:
          anyOf:
            - type: string
            - type: number
            - type: integer
            - items: {}
              type: array
            - type: "null"
          description: Value to compare with for this metric (right hand side).
          title: Target Value
        value:
          anyOf:
            - {}
            - type: "null"
          description: Result of the metric computation.
          title: Value
      required:
        - metric
        - operator
        - target_value
      title: RuleResult
      type: object
    Ruleset:
      properties:
        action:
          description: Action to take if all the rules are met.
          discriminator:
            mapping:
              OVERRIDE: "#/components/schemas/OverrideAction"
              PASSTHROUGH: "#/components/schemas/PassthroughAction"
            propertyName: type
          oneOf:
            - $ref: "#/components/schemas/OverrideAction"
            - $ref: "#/components/schemas/PassthroughAction"
          title: Action
        description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of the ruleset.
          title: Description
        rules:
          description: List of rules to evaluate. Atleast 1 rule is required.
          items:
            $ref: "#/components/schemas/Rule"
          minItems: 1
          title: Rules
          type: array
      title: Ruleset
      type: object
    RulesetResult:
      properties:
        action:
          description: Action to take if all the rules are met.
          discriminator:
            mapping:
              OVERRIDE: "#/components/schemas/OverrideAction"
              PASSTHROUGH: "#/components/schemas/PassthroughAction"
            propertyName: type
          oneOf:
            - $ref: "#/components/schemas/OverrideAction"
            - $ref: "#/components/schemas/PassthroughAction"
          title: Action
        description:
          anyOf:
            - type: string
            - type: "null"
          description: Description of the ruleset.
          title: Description
        rule_results:
          description: Results of the rule execution.
          items:
            $ref: "#/components/schemas/RuleResult"
          title: Rule Results
          type: array
        rules:
          description: List of rules to evaluate. Atleast 1 rule is required.
          items:
            $ref: "#/components/schemas/Rule"
          minItems: 1
          title: Rules
          type: array
        status:
          $ref: "#/components/schemas/ExecutionStatus"
          default: not_triggered
      title: RulesetResult
      type: object
    RulesetsMixin:
      properties:
        prioritized_rulesets:
          description: Rulesets to be applied to the payload.
          items:
            $ref: "#/components/schemas/Ruleset"
          title: Prioritized Rulesets
          type: array
      title: RulesetsMixin
      type: object
    RunCreate:
      properties:
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        dataset_hash:
          anyOf:
            - type: string
            - type: "null"
          title: Dataset Hash
        name:
          minLength: 1
          title: Name
          type: string
        num_samples:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Samples
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        run_tags:
          items:
            $ref: "#/components/schemas/RunTagCreateRequest"
          title: Run Tags
          type: array
        task_type:
          title: Task Type
          type: integer
        winner:
          anyOf:
            - type: boolean
            - type: "null"
          title: Winner
      required:
        - name
        - task_type
      title: RunCreate
      type: object
    RunDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        creator:
          $ref: "#/components/schemas/UserDB"
        dataset_hash:
          anyOf:
            - type: string
            - type: "null"
          title: Dataset Hash
        example_content_id:
          anyOf:
            - type: string
            - type: "null"
          title: Example Content Id
        id:
          format: uuid4
          title: Id
          type: string
        last_updated_by:
          format: uuid4
          title: Last Updated By
          type: string
        logged_inference_names:
          items:
            type: string
          title: Logged Inference Names
          type: array
        logged_splits:
          items:
            type: string
          title: Logged Splits
          type: array
        name:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Name
        num_samples:
          title: Num Samples
          type: integer
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        run_tags:
          items:
            $ref: "#/components/schemas/RunTagDB"
          title: Run Tags
          type: array
        task_type:
          anyOf:
            - $ref: "#/components/schemas/TaskType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
        winner:
          title: Winner
          type: boolean
      required:
        - created_by
        - num_samples
        - winner
        - id
        - created_at
        - updated_at
        - last_updated_by
        - creator
        - logged_splits
        - logged_inference_names
      title: RunDB
      type: object
    RunDBThin:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        creator:
          $ref: "#/components/schemas/UserDB"
        dataset_hash:
          anyOf:
            - type: string
            - type: "null"
          title: Dataset Hash
        example_content_id:
          anyOf:
            - type: string
            - type: "null"
          title: Example Content Id
        id:
          format: uuid4
          title: Id
          type: string
        last_updated_by:
          format: uuid4
          title: Last Updated By
          type: string
        name:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Name
        num_samples:
          title: Num Samples
          type: integer
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        run_tags:
          items:
            $ref: "#/components/schemas/RunTagDB"
          title: Run Tags
          type: array
        task_type:
          anyOf:
            - $ref: "#/components/schemas/TaskType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
        winner:
          title: Winner
          type: boolean
      required:
        - created_by
        - num_samples
        - winner
        - id
        - created_at
        - updated_at
        - last_updated_by
        - creator
      title: RunDBThin
      type: object
    RunDBThinWithProjectName:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        creator:
          $ref: "#/components/schemas/UserDB"
        dataset_hash:
          anyOf:
            - type: string
            - type: "null"
          title: Dataset Hash
        example_content_id:
          anyOf:
            - type: string
            - type: "null"
          title: Example Content Id
        id:
          format: uuid4
          title: Id
          type: string
        last_updated_by:
          format: uuid4
          title: Last Updated By
          type: string
        name:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Name
        num_samples:
          title: Num Samples
          type: integer
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        project_name:
          title: Project Name
          type: string
        run_tags:
          items:
            $ref: "#/components/schemas/RunTagDB"
          title: Run Tags
          type: array
        task_type:
          anyOf:
            - $ref: "#/components/schemas/TaskType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
        winner:
          title: Winner
          type: boolean
      required:
        - created_by
        - num_samples
        - winner
        - id
        - created_at
        - updated_at
        - last_updated_by
        - creator
        - project_name
      title: RunDBThinWithProjectName
      type: object
    RunLinkResponse:
      properties:
        link:
          title: Link
          type: string
      required:
        - link
      title: RunLinkResponse
      type: object
    RunMetricCreateRequest:
      properties:
        epoch:
          default: 0
          title: Epoch
          type: integer
        extra:
          anyOf:
            - items: {}
              type: array
            - type: object
            - type: "null"
          title: Extra
        key:
          title: Key
          type: string
        object_value:
          anyOf:
            - $ref: "#/components/schemas/FeedbackAggregate"
            - type: "null"
        value:
          anyOf:
            - type: number
            - type: "null"
          title: Value
      required:
        - key
      title: RunMetricCreateRequest
      type: object
    RunMetricDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        epoch:
          default: 0
          title: Epoch
          type: integer
        extra:
          anyOf:
            - items: {}
              type: array
            - type: object
            - type: "null"
          title: Extra
        key:
          title: Key
          type: string
        object_value:
          anyOf:
            - $ref: "#/components/schemas/FeedbackAggregate"
            - type: "null"
        run_id:
          format: uuid4
          title: Run Id
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
        value:
          anyOf:
            - type: number
            - type: "null"
          title: Value
      required:
        - key
        - run_id
        - created_at
        - updated_at
      title: RunMetricDB
      type: object
    RunParamsMap:
      description:
        "Maps the internal settings parameters (left) to the serialized
        parameters (right) we want to send in the API

        requests."
      properties:
        api_version:
          anyOf:
            - type: string
            - type: "null"
          title: Api Version
        deployment_name:
          anyOf:
            - type: string
            - type: "null"
          title: Deployment Name
        echo:
          anyOf:
            - type: string
            - type: "null"
          title: Echo
        frequency_penalty:
          anyOf:
            - type: string
            - type: "null"
          title: Frequency Penalty
        logprobs:
          anyOf:
            - type: string
            - type: "null"
          title: Logprobs
        max_tokens:
          anyOf:
            - type: string
            - type: "null"
          title: Max Tokens
        model:
          anyOf:
            - type: string
            - type: "null"
          title: Model
        n:
          anyOf:
            - type: string
            - type: "null"
          title: N
        presence_penalty:
          anyOf:
            - type: string
            - type: "null"
          title: Presence Penalty
        response_format:
          anyOf:
            - type: string
            - type: "null"
          title: Response Format
        stop_sequences:
          anyOf:
            - type: string
            - type: "null"
          title: Stop Sequences
        temperature:
          anyOf:
            - type: string
            - type: "null"
          title: Temperature
        tool_choice:
          anyOf:
            - type: string
            - type: "null"
          title: Tool Choice
        tools:
          anyOf:
            - type: string
            - type: "null"
          title: Tools
        top_k:
          anyOf:
            - type: string
            - type: "null"
          title: Top K
        top_logprobs:
          anyOf:
            - type: string
            - type: "null"
          title: Top Logprobs
        top_p:
          anyOf:
            - type: string
            - type: "null"
          title: Top P
      title: RunParamsMap
      type: object
    RunResults:
      properties:
        data_metrics:
          default: []
          items:
            $ref: "#/components/schemas/DataRow"
          title: Data Metrics
          type: array
        easy_samples_threshold:
          anyOf:
            - type: number
            - type: "null"
          title: Easy Samples Threshold
        hard_samples_threshold:
          anyOf:
            - type: number
            - type: "null"
          title: Hard Samples Threshold
        has_next_page:
          title: Has Next Page
          type: boolean
        labels:
          items:
            type: string
          title: Labels
          type: array
        sample_count:
          title: Sample Count
          type: integer
        sample_easy_percentage:
          title: Sample Easy Percentage
          type: number
        sample_hard_percentage:
          title: Sample Hard Percentage
          type: number
        sample_misclassified_percentage:
          title: Sample Misclassified Percentage
          type: number
        span_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Span Count
        split_total_sample_count:
          title: Split Total Sample Count
          type: integer
        split_total_span_count:
          anyOf:
            - type: integer
            - type: "null"
          title: Split Total Span Count
        top_erroneous_words:
          anyOf:
            - additionalProperties:
                type: integer
              type: object
            - type: "null"
          title: Top Erroneous Words
      required:
        - split_total_sample_count
        - sample_count
        - sample_hard_percentage
        - sample_easy_percentage
        - sample_misclassified_percentage
        - has_next_page
        - labels
      title: RunResults
      type: object
    RunScorerSettingsRequest:
      properties:
        run_id:
          description: ID of the run.
          format: uuid4
          title: Run Id
          type: string
        scorers:
          description: List of Galileo scorers to enable.
          items:
            $ref: "#/components/schemas/ScorerConfig"
          title: Scorers
          type: array
      required:
        - run_id
      title: RunScorerSettingsRequest
      type: object
    RunTagCreateRequest:
      properties:
        key:
          maxLength: 256
          title: Key
          type: string
        tag_type:
          title: Tag Type
          type: string
        value:
          maxLength: 256
          title: Value
          type: string
      required:
        - key
        - value
        - tag_type
      title: RunTagCreateRequest
      type: object
    RunTagDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        key:
          maxLength: 256
          title: Key
          type: string
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        tag_type:
          title: Tag Type
          type: string
        updated_at:
          format: date-time
          title: Updated At
          type: string
        value:
          maxLength: 256
          title: Value
          type: string
      required:
        - key
        - value
        - tag_type
        - project_id
        - run_id
        - created_by
        - id
        - created_at
        - updated_at
      title: RunTagDB
      type: object
    RunUpdateRequest:
      properties:
        name:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Name
      title: RunUpdateRequest
      type: object
    ScoreAggregate:
      properties:
        average:
          title: Average
          type: number
        feedback_type:
          const: score
          default: score
          title: Feedback Type
          type: string
        unrated_count:
          title: Unrated Count
          type: integer
      required:
        - average
        - unrated_count
      title: ScoreAggregate
      type: object
    ScoreConstraints:
      properties:
        feedback_type:
          const: score
          title: Feedback Type
          type: string
        max:
          minimum: 0.0
          title: Max
          type: integer
        min:
          minimum: 0.0
          title: Min
          type: integer
      required:
        - feedback_type
        - min
        - max
      title: ScoreConstraints
      type: object
    ScoreRating:
      properties:
        feedback_type:
          const: score
          default: score
          title: Feedback Type
          type: string
        value:
          title: Value
          type: integer
      required:
        - value
      title: ScoreRating
      type: object
    ScorerConfig:
      properties:
        id:
          format: uuid4
          title: Id
          type: string
        model_name:
          anyOf:
            - type: string
            - type: "null"
          title: Model Name
        model_type:
          anyOf:
            - $ref: "#/components/schemas/ModelType"
            - type: "null"
          description:
            Type of model to use for this scorer. slm maps to luna, and
            llm maps to plus
        num_judges:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Judges
        scorer_type:
          $ref: "#/components/schemas/ScorerTypes"
      required:
        - id
        - scorer_type
      title: ScorerConfig
      type: object
    ScorerCreatedAtFilter:
      properties:
        name:
          const: created_at
          default: created_at
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          title: Operator
          type: string
        value:
          format: date-time
          title: Value
          type: string
      required:
        - value
        - operator
      title: ScorerCreatedAtFilter
      type: object
    ScorerCreatorFilter:
      properties:
        name:
          const: creator
          default: creator
          title: Name
          type: string
        value:
          format: uuid4
          title: Value
          type: string
      required:
        - value
      title: ScorerCreatorFilter
      type: object
    ScorerDefaults:
      properties:
        model_name:
          anyOf:
            - type: string
            - type: "null"
          title: Model Name
        num_judges:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Judges
      title: ScorerDefaults
      type: object
    ScorerName:
      enum:
        - _completeness_gpt
        - _context_relevance
        - _chunk_attribution_utilization_gpt
        - _factuality
        - _groundedness
        - _latency
        - _prompt_perplexity
        - _protect_status
        - _pii
        - _input_pii
        - _sexist
        - _input_sexist
        - _tone
        - _input_tone
        - _toxicity
        - _input_toxicity
        - _user_registered
        - _user_submitted
        - _user_generated
        - _uncertainty
        - _bleu
        - _cost
        - _rouge
        - _prompt_injection
        - _rag_nli
        - _adherence_nli
        - _completeness_nli
        - _chunk_attribution_utilization_nli
        - _instruction_adherence
        - _ground_truth_adherence
        - _tool_selection_quality
        - _tool_error_rate
        - _agentic_workflow_success
        - _customized_completeness_gpt
        - _customized_factuality
        - _customized_groundedness
        - _customized_chunk_attribution_utilization_gpt
        - _customized_instruction_adherence
        - _customized_ground_truth_adherence
        - _customized_tool_selection_quality
        - _customized_tool_error_rate
        - _customized_agentic_workflow_success
      title: ScorerName
      type: string
    ScorerNameFilter:
      properties:
        case_sensitive:
          default: true
          title: Case Sensitive
          type: boolean
        name:
          const: name
          default: name
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - contains
          title: Operator
          type: string
        value:
          title: Value
          type: string
      required:
        - value
        - operator
      title: ScorerNameFilter
      type: object
    ScorerResponse:
      properties:
        created_at:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Created At
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        defaults:
          anyOf:
            - $ref: "#/components/schemas/ScorerDefaults"
            - type: "null"
        description:
          anyOf:
            - type: string
            - type: "null"
          title: Description
        id:
          format: uuid4
          title: Id
          type: string
        included_fields:
          description:
            Fields that can be used in the scorer to configure it. i.e.
            model, num_judges, etc. This enables the ui to know which fields a user
            can configure when they're setting a scorer
          items:
            type: string
          title: Included Fields
          type: array
        name:
          title: Name
          type: string
        scorer_type:
          $ref: "#/components/schemas/ScorerTypes"
        tags:
          items:
            type: string
          title: Tags
          type: array
        updated_at:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Updated At
      required:
        - id
        - name
        - scorer_type
        - tags
      title: ScorerResponse
      type: object
    ScorerTagsFilter:
      properties:
        name:
          const: tags
          default: tags
          title: Name
          type: string
        operator:
          enum:
            - contains
            - not_in
          title: Operator
          type: string
        value:
          title: Value
          type: string
      required:
        - value
        - operator
      title: ScorerTagsFilter
      type: object
    ScorerType:
      enum:
        - Luna
        - Plus
      title: ScorerType
      type: string
    ScorerTypeFilter:
      properties:
        name:
          const: scorer_type
          default: scorer_type
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - one_of
            - not_in
          title: Operator
          type: string
        value:
          anyOf:
            - $ref: "#/components/schemas/ScorerTypes"
            - items:
                $ref: "#/components/schemas/ScorerTypes"
              type: array
          title: Value
      required:
        - value
        - operator
      title: ScorerTypeFilter
      type: object
    ScorerTypes:
      enum:
        - llm
        - code
        - preset
      title: ScorerTypes
      type: string
    ScorerUpdatedAtFilter:
      properties:
        name:
          const: updated_at
          default: updated_at
          title: Name
          type: string
        operator:
          enum:
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
          title: Operator
          type: string
        value:
          format: date-time
          title: Value
          type: string
      required:
        - value
        - operator
      title: ScorerUpdatedAtFilter
      type: object
    ScorerVersionResponse:
      properties:
        scorer_content:
          anyOf:
            - $ref: "#/components/schemas/ChainPollTemplate"
            - type: string
          description:
            chainpoll template for llm based scorers and the code as a
            string for code based scorers
          title: Scorer Content
      required:
        - scorer_content
      title: ScorerVersionResponse
      type: object
    ScorerVersionsResponse:
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
        versions:
          items:
            $ref: "#/components/schemas/ScorerVersionResponse"
          title: Versions
          type: array
      title: ScorerVersionsResponse
      type: object
    ScorersConfig:
      properties:
        generated_scorers:
          description: List of user generated scorers to enable.
          items:
            $ref: "#/components/schemas/GeneratedScorer"
          title: Generated Scorers
          type: array
        registered_scorers:
          description: List of user registered scorers to enable.
          items:
            $ref: "#/components/schemas/RegisteredScorer"
          title: Registered Scorers
          type: array
        scorers:
          description: List of Galileo scorers to enable.
          items:
            discriminator:
              mapping:
                agentic_workflow_success: "#/components/schemas/AgenticWorkflowSuccessScorer"
                bleu: "#/components/schemas/BleuScorer"
                chunk_attribution_utilization: "#/components/schemas/ChunkAttributionUtilizationScorer"
                completeness: "#/components/schemas/CompletenessScorer"
                context_adherence: "#/components/schemas/ContextAdherenceScorer"
                context_relevance: "#/components/schemas/ContextRelevanceScorer"
                correctness: "#/components/schemas/CorrectnessScorer"
                ground_truth_adherence: "#/components/schemas/GroundTruthAdherenceScorer"
                input_pii: "#/components/schemas/InputPIIScorer"
                input_sexist: "#/components/schemas/InputSexistScorer"
                input_tone: "#/components/schemas/InputToneScorer"
                input_toxicity: "#/components/schemas/InputToxicityScorer"
                instruction_adherence: "#/components/schemas/InstructionAdherenceScorer"
                output_pii: "#/components/schemas/OutputPIIScorer"
                output_sexist: "#/components/schemas/OutputSexistScorer"
                output_tone: "#/components/schemas/OutputToneScorer"
                output_toxicity: "#/components/schemas/OutputToxicityScorer"
                prompt_injection: "#/components/schemas/PromptInjectionScorer"
                prompt_perplexity: "#/components/schemas/PromptPerplexityScorer"
                rouge: "#/components/schemas/RougeScorer"
                tool_error_rate: "#/components/schemas/ToolErrorRateScorer"
                tool_selection_quality: "#/components/schemas/ToolSelectionQualityScorer"
                uncertainty: "#/components/schemas/UncertaintyScorer"
              propertyName: name
            oneOf:
              - $ref: "#/components/schemas/AgenticWorkflowSuccessScorer"
              - $ref: "#/components/schemas/BleuScorer"
              - $ref: "#/components/schemas/ChunkAttributionUtilizationScorer"
              - $ref: "#/components/schemas/CompletenessScorer"
              - $ref: "#/components/schemas/ContextAdherenceScorer"
              - $ref: "#/components/schemas/ContextRelevanceScorer"
              - $ref: "#/components/schemas/CorrectnessScorer"
              - $ref: "#/components/schemas/GroundTruthAdherenceScorer"
              - $ref: "#/components/schemas/InputPIIScorer"
              - $ref: "#/components/schemas/InputSexistScorer"
              - $ref: "#/components/schemas/InputToneScorer"
              - $ref: "#/components/schemas/InputToxicityScorer"
              - $ref: "#/components/schemas/InstructionAdherenceScorer"
              - $ref: "#/components/schemas/OutputPIIScorer"
              - $ref: "#/components/schemas/OutputSexistScorer"
              - $ref: "#/components/schemas/OutputToneScorer"
              - $ref: "#/components/schemas/OutputToxicityScorer"
              - $ref: "#/components/schemas/PromptInjectionScorer"
              - $ref: "#/components/schemas/PromptPerplexityScorer"
              - $ref: "#/components/schemas/RougeScorer"
              - $ref: "#/components/schemas/ToolErrorRateScorer"
              - $ref: "#/components/schemas/ToolSelectionQualityScorer"
              - $ref: "#/components/schemas/UncertaintyScorer"
          title: Scorers
          type: array
      title: ScorersConfig
      type: object
    ScorersConfiguration:
      description:
        "Configure which scorers to enable for a particular prompt run.


        The keys here are sorted by their approximate execution time to execute the
        scorers that we anticipate will be the

        fastest first, and the slowest last."
      properties:
        adherence_nli:
          default: false
          title: Adherence Nli
          type: boolean
        agentic_workflow_success:
          default: false
          title: Agentic Workflow Success
          type: boolean
        bleu:
          default: true
          title: Bleu
          type: boolean
        chunk_attribution_utilization_gpt:
          default: false
          title: Chunk Attribution Utilization Gpt
          type: boolean
        chunk_attribution_utilization_nli:
          default: false
          title: Chunk Attribution Utilization Nli
          type: boolean
        completeness_gpt:
          default: false
          title: Completeness Gpt
          type: boolean
        completeness_nli:
          default: false
          title: Completeness Nli
          type: boolean
        context_relevance:
          default: false
          title: Context Relevance
          type: boolean
        cost:
          default: true
          title: Cost
          type: boolean
        factuality:
          default: false
          title: Factuality
          type: boolean
        ground_truth_adherence:
          default: false
          title: Ground Truth Adherence
          type: boolean
        groundedness:
          default: false
          title: Groundedness
          type: boolean
        input_pii:
          default: false
          title: Input Pii
          type: boolean
        input_sexist:
          default: false
          title: Input Sexist
          type: boolean
        input_tone:
          default: false
          title: Input Tone
          type: boolean
        input_toxicity:
          default: false
          title: Input Toxicity
          type: boolean
        instruction_adherence:
          default: false
          title: Instruction Adherence
          type: boolean
        latency:
          default: true
          title: Latency
          type: boolean
        pii:
          default: false
          title: Pii
          type: boolean
        prompt_injection:
          default: false
          title: Prompt Injection
          type: boolean
        prompt_perplexity:
          default: false
          title: Prompt Perplexity
          type: boolean
        protect_status:
          default: true
          title: Protect Status
          type: boolean
        rouge:
          default: true
          title: Rouge
          type: boolean
        sexist:
          default: false
          title: Sexist
          type: boolean
        tone:
          default: false
          title: Tone
          type: boolean
        tool_error_rate:
          default: false
          title: Tool Error Rate
          type: boolean
        tool_selection_quality:
          default: false
          title: Tool Selection Quality
          type: boolean
        toxicity:
          default: false
          title: Toxicity
          type: boolean
        uncertainty:
          default: false
          title: Uncertainty
          type: boolean
      title: ScorersConfiguration
      type: object
    Segment:
      properties:
        end:
          title: End
          type: integer
        prob:
          anyOf:
            - type: number
            - type: "null"
          title: Prob
        start:
          title: Start
          type: integer
        value:
          anyOf:
            - type: number
            - type: integer
            - type: string
          title: Value
      required:
        - start
        - end
        - value
      title: Segment
      type: object
    SegmentationMetricsResponse:
      description: "The main metric for Semantic Segmentation.


        IoU, or Intersection over Union, is an Semantic Segmentation metric that provides
        you with a general sense of the

        performance of your model.


        IoU is defined as the intersection of the predicted and ground truth masks
        Mean IoU is the average IoU across all

        classes Boundary IoU is the IoU for the boundary of the mask, which protects
        against   bias towards larger masks

        https://learnopencv.com/intersection-over-union-iou-in-object-detection-and-segmentation/"
      properties:
        boundary_iou:
          title: Boundary Iou
          type: number
        boundary_iou_per_class:
          $ref: "#/components/schemas/BarChart"
        dice_coefficient:
          title: Dice Coefficient
          type: number
        dice_per_class:
          $ref: "#/components/schemas/BarChart"
        mean_iou:
          title: Mean Iou
          type: number
        mean_iou_per_class:
          $ref: "#/components/schemas/BarChart"
      required:
        - mean_iou
        - boundary_iou
        - dice_coefficient
        - mean_iou_per_class
        - boundary_iou_per_class
        - dice_per_class
      title: SegmentationMetricsResponse
      type: object
    SemSegErrorType:
      enum:
        - class_confusion
        - classification
        - background
        - missed
        - None
      title: SemSegErrorType
      type: string
    Seq2SeqMetricsResponse:
      description: "Returns Seq2Seq specific metrics.


        Bleu and Rouge are the most common metrics for Seq2Seq models We also include
        average data error potential"
      properties:
        average_bleu:
          anyOf:
            - type: number
            - type: "null"
          title: Average Bleu
        average_data_error_potential:
          anyOf:
            - type: number
            - type: "null"
          title: Average Data Error Potential
        average_rouge:
          anyOf:
            - type: number
            - type: "null"
          title: Average Rouge
      title: Seq2SeqMetricsResponse
      type: object
    Seq2SeqSegment:
      properties:
        data_error_potential:
          anyOf:
            - type: number
            - type: "null"
          title: Data Error Potential
        end:
          title: End
          type: integer
        generated_uncertainty:
          anyOf:
            - type: number
            - type: "null"
          title: Generated Uncertainty
        segment_probability:
          anyOf:
            - type: number
            - type: "null"
          title: Segment Probability
        start:
          title: Start
          type: integer
        top_k_tokens:
          default: []
          items:
            $ref: "#/components/schemas/TopKToken"
          title: Top K Tokens
          type: array
      required:
        - start
        - end
      title: Seq2SeqSegment
      type: object
    SimilarToResponse:
      properties:
        from_inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: From Inference Name
        from_split:
          $ref: "#/components/schemas/Split"
        inference_name:
          anyOf:
            - type: string
            - type: "null"
          title: Inference Name
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        similar_ids:
          items:
            type: integer
          title: Similar Ids
          type: array
        split:
          $ref: "#/components/schemas/Split"
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - project_id
        - run_id
        - split
        - from_split
        - similar_ids
      title: SimilarToResponse
      type: object
    SliceCreate:
      properties:
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        logic:
          $ref: "#/components/schemas/FilterParams"
        name:
          minLength: 1
          title: Name
          type: string
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
      required:
        - name
        - logic
      title: SliceCreate
      type: object
    SliceCreateResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        id:
          format: uuid4
          title: Id
          type: string
        logic:
          $ref: "#/components/schemas/FilterParams"
        name:
          minLength: 1
          title: Name
          type: string
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - name
        - logic
        - id
        - created_at
        - updated_at
      title: SliceCreateResponse
      type: object
    SliceDB:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        id:
          format: uuid4
          title: Id
          type: string
        logic:
          $ref: "#/components/schemas/FilterParams"
        name:
          minLength: 1
          title: Name
          type: string
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - name
        - logic
        - id
        - created_at
        - updated_at
      title: SliceDB
      type: object
    SliceDeleteResponse:
      properties:
        message:
          title: Message
          type: string
      required:
        - message
      title: SliceDeleteResponse
      type: object
    SliceMetrics:
      properties:
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        logic:
          $ref: "#/components/schemas/FilterParams"
        metrics:
          $ref: "#/components/schemas/ModelMetrics"
        name:
          minLength: 1
          title: Name
          type: string
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
      required:
        - name
        - logic
        - metrics
      title: SliceMetrics
      type: object
    SliceUpdate:
      properties:
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        logic:
          $ref: "#/components/schemas/FilterParams"
        name:
          minLength: 1
          title: Name
          type: string
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
      required:
        - name
        - logic
      title: SliceUpdate
      type: object
    SliceUpdateResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Created By
        id:
          format: uuid4
          title: Id
          type: string
        logic:
          $ref: "#/components/schemas/FilterParams"
        name:
          minLength: 1
          title: Name
          type: string
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - name
        - logic
        - id
        - created_at
        - updated_at
      title: SliceUpdateResponse
      type: object
    SocialLoginRequest:
      properties:
        id_token:
          title: Id Token
          type: string
        provider:
          $ref: "#/components/schemas/SocialProvider"
      required:
        - id_token
        - provider
      title: SocialLoginRequest
      type: object
    SocialProvider:
      enum:
        - google
        - github
        - okta
        - azure-ad
        - custom
      title: SocialProvider
      type: string
    SortClause:
      properties:
        col_name:
          title: Col Name
          type: string
        json_field:
          anyOf:
            - type: string
            - type: "null"
          title: Json Field
        json_field_type:
          anyOf:
            - $ref: "#/components/schemas/FieldType"
            - type: "null"
        sort_dir:
          $ref: "#/components/schemas/SortDirection"
      required:
        - col_name
        - sort_dir
      title: SortClause
      type: object
    SortDirection:
      enum:
        - asc
        - desc
      title: SortDirection
      type: string
    Span:
      properties:
        confidence:
          anyOf:
            - type: number
            - type: "null"
          title: Confidence
        data_error_potential:
          anyOf:
            - type: number
            - type: "null"
          title: Data Error Potential
        error_type:
          anyOf:
            - type: string
            - type: "null"
          title: Error Type
        gold:
          anyOf:
            - type: string
            - type: "null"
          title: Gold
        id:
          title: Id
          type: integer
        is_active:
          title: Is Active
          type: boolean
        is_drifted:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is Drifted
        is_on_the_boundary:
          anyOf:
            - type: boolean
            - type: "null"
          title: Is On The Boundary
        pred:
          title: Pred
          type: string
        span_end:
          title: Span End
          type: integer
        span_start:
          title: Span Start
          type: integer
        x:
          anyOf:
            - type: number
            - type: "null"
          title: X
        y:
          anyOf:
            - type: number
            - type: "null"
          title: Y
      required:
        - id
        - span_start
        - span_end
        - pred
        - is_active
      title: Span
      type: object
    Split:
      enum:
        - training
        - validation
        - test
        - inference
      title: Split
      type: string
    SplitRunResults:
      properties:
        split_name:
          $ref: "#/components/schemas/Split"
        split_run_results:
          $ref: "#/components/schemas/RunResults"
      required:
        - split_name
        - split_run_results
      title: SplitRunResults
      type: object
    StageDB:
      properties:
        created_by:
          format: uuid4
          title: Created By
          type: string
        description:
          anyOf:
            - type: string
            - type: "null"
          description: Optional human-readable description of the goals of this guardrail.
          title: Description
        id:
          format: uuid4
          title: Id
          type: string
        name:
          description: Name of the stage. Must be unique within the project.
          title: Name
          type: string
        paused:
          default: false
          description:
            Whether the action is enabled. If False, the action will not
            be applied.
          title: Paused
          type: boolean
        project_id:
          description: ID of the project to which this stage belongs.
          format: uuid4
          title: Project Id
          type: string
        type:
          $ref: "#/components/schemas/StageType"
          default: local
          description: Type of the stage.
        version:
          anyOf:
            - type: integer
            - type: "null"
          title: Version
      required:
        - name
        - project_id
        - created_by
        - id
      title: StageDB
      type: object
    StageMetadata:
      properties:
        project_id:
          format: uuid4
          title: Project Id
          type: string
        stage_id:
          format: uuid4
          title: Stage Id
          type: string
        stage_name:
          title: Stage Name
          type: string
        stage_version:
          title: Stage Version
          type: integer
      required:
        - project_id
        - stage_id
        - stage_name
        - stage_version
      title: StageMetadata
      type: object
    StageType:
      enum:
        - local
        - central
      title: StageType
      type: string
    StageWithRulesets:
      properties:
        description:
          anyOf:
            - type: string
            - type: "null"
          description: Optional human-readable description of the goals of this guardrail.
          title: Description
        name:
          description: Name of the stage. Must be unique within the project.
          title: Name
          type: string
        paused:
          default: false
          description:
            Whether the action is enabled. If False, the action will not
            be applied.
          title: Paused
          type: boolean
        prioritized_rulesets:
          description: Rulesets to be applied to the payload.
          items:
            $ref: "#/components/schemas/Ruleset"
          title: Prioritized Rulesets
          type: array
        project_id:
          description: ID of the project to which this stage belongs.
          format: uuid4
          title: Project Id
          type: string
        type:
          $ref: "#/components/schemas/StageType"
          default: local
          description: Type of the stage.
      required:
        - name
        - project_id
      title: StageWithRulesets
      type: object
    StarAggregate:
      properties:
        average:
          title: Average
          type: number
        counts:
          additionalProperties:
            type: integer
          title: Counts
          type: object
        feedback_type:
          const: star
          default: star
          title: Feedback Type
          type: string
        unrated_count:
          title: Unrated Count
          type: integer
      required:
        - average
        - counts
        - unrated_count
      title: StarAggregate
      type: object
    StarConstraints:
      properties:
        feedback_type:
          const: star
          title: Feedback Type
          type: string
      required:
        - feedback_type
      title: StarConstraints
      type: object
    StarRating:
      properties:
        feedback_type:
          const: star
          default: star
          title: Feedback Type
          type: string
        value:
          maximum: 5.0
          minimum: 1.0
          title: Value
          type: integer
      required:
        - value
      title: StarRating
      type: object
    StepMetric:
      properties:
        name:
          title: Name
          type: string
        value:
          title: Value
      required:
        - name
        - value
      title: StepMetric
      type: object
    StepWithChildSpans:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        spans:
          description: Child spans.
          items:
            discriminator:
              mapping:
                llm: "#/components/schemas/LlmSpan"
                retriever: "#/components/schemas/RetrieverSpan"
                tool: "#/components/schemas/ToolSpan"
                workflow: "#/components/schemas/WorkflowSpan"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowSpan"
              - $ref: "#/components/schemas/LlmSpan"
              - $ref: "#/components/schemas/RetrieverSpan"
              - $ref: "#/components/schemas/ToolSpan"
          title: Spans
          type: array
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        type:
          $ref: "#/components/schemas/NodeType"
          default: workflow
          description: Type of the step. By default, it is set to workflow.
      required:
        - input
      title: StepWithChildSpans
      type: object
    StepWithChildren:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        parent:
          anyOf:
            - $ref: "#/components/schemas/StepWithChildren"
            - type: "null"
          description: Parent node of the current node. For internal use only.
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        steps:
          description: Steps in the workflow.
          items:
            discriminator:
              mapping:
                agent: "#/components/schemas/AgentStep"
                chain: "#/components/schemas/ChainStep"
                llm: "#/components/schemas/LlmStep"
                retriever: "#/components/schemas/RetrieverStep"
                tool: "#/components/schemas/ToolStep"
                workflow: "#/components/schemas/WorkflowStep"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowStep"
              - $ref: "#/components/schemas/ChainStep"
              - $ref: "#/components/schemas/LlmStep"
              - $ref: "#/components/schemas/RetrieverStep"
              - $ref: "#/components/schemas/ToolStep"
              - $ref: "#/components/schemas/AgentStep"
          title: Steps
          type: array
        type:
          $ref: "#/components/schemas/NodeType"
          default: workflow
          description: Type of the step. By default, it is set to workflow.
      required:
        - input
      title: StepWithChildren
      type: object
    SubscriptionConfig:
      properties:
        statuses:
          default:
            - triggered
          description:
            List of statuses that will cause a notification to be sent
            to the configured URL.
          items:
            $ref: "#/components/schemas/ExecutionStatus"
          title: Statuses
          type: array
        url:
          description:
            URL to send the event to. This can be a webhook URL, a message
            queue URL, an event bus or a custom endpoint that can receive an HTTP
            POST request.
          format: uri
          minLength: 1
          title: Url
          type: string
      required:
        - url
      title: SubscriptionConfig
      type: object
    SummaryIDRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hard_easy_threshold:
          default: false
          title: Hard Easy Threshold
          type: boolean
        include_emb:
          default: true
          title: Include Emb
          type: boolean
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        page_num:
          default: 0
          title: Page Num
          type: integer
        sort_ascending:
          default: false
          title: Sort Ascending
          type: boolean
        sort_by:
          anyOf:
            - type: string
            - type: "null"
          title: Sort By
        sort_by_id_list:
          default: false
          title: Sort By Id List
          type: boolean
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: SummaryIDRequest
      type: object
    SummaryIDResponse:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hard_easy_threshold:
          default: false
          title: Hard Easy Threshold
          type: boolean
        ids:
          items:
            type: integer
          title: Ids
          type: array
        include_emb:
          default: true
          title: Include Emb
          type: boolean
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        page_num:
          default: 0
          title: Page Num
          type: integer
        sort_ascending:
          default: false
          title: Sort Ascending
          type: boolean
        sort_by:
          anyOf:
            - type: string
            - type: "null"
          title: Sort By
        sort_by_id_list:
          default: false
          title: Sort By Id List
          type: boolean
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - ids
      title: SummaryIDResponse
      type: object
    SummaryRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hard_easy_threshold:
          default: false
          title: Hard Easy Threshold
          type: boolean
        include_emb:
          default: true
          title: Include Emb
          type: boolean
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        page_num:
          default: 0
          title: Page Num
          type: integer
        sort_ascending:
          default: false
          title: Sort Ascending
          type: boolean
        sort_by:
          anyOf:
            - type: string
            - type: "null"
          title: Sort By
        sort_by_id_list:
          default: false
          title: Sort By Id List
          type: boolean
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: SummaryRequest
      type: object
    TaggingSchema:
      description:
        "Supported NER Tagging schemas.\n\nA tagging schema is a definition\
        \ of the way NER data is formatted. The schema\nletters define the tags used\
        \ within it.\n    ex:\n        BIOES - B means before (a token), I means in\
        \ (a token),\n            E means end (of a token), S means single (length\
        \ token)\nSee https://en.wikipedia.org/wiki/Inside%E2%80%93outside%E2%80%93beginning_(tagging)"
      enum:
        - BIO
        - BIOES
        - BILOU
      title: TaggingSchema
      type: string
    TagsAggregate:
      properties:
        counts:
          additionalProperties:
            type: integer
          title: Counts
          type: object
        feedback_type:
          const: tags
          default: tags
          title: Feedback Type
          type: string
        unrated_count:
          title: Unrated Count
          type: integer
      required:
        - counts
        - unrated_count
      title: TagsAggregate
      type: object
    TagsConstraints:
      properties:
        allow_other:
          default: false
          title: Allow Other
          type: boolean
        feedback_type:
          const: tags
          title: Feedback Type
          type: string
        tags:
          items:
            maxLength: 255
            minLength: 1
            type: string
          title: Tags
          type: array
      required:
        - feedback_type
        - tags
      title: TagsConstraints
      type: object
    TagsRating:
      properties:
        feedback_type:
          const: tags
          default: tags
          title: Feedback Type
          type: string
        value:
          items:
            maxLength: 255
            minLength: 1
            type: string
          title: Value
          type: array
      required:
        - value
      title: TagsRating
      type: object
    TargetLabels:
      description: Structure for each target label in a co-occurence response.
      properties:
        co_occurrence:
          title: Co Occurrence
          type: number
        label:
          title: Label
          type: string
      required:
        - label
        - co_occurrence
      title: TargetLabels
      type: object
    TaskResponse:
      description: Response for the available task-labels of a multi-label model.
      properties:
        project_id:
          format: uuid4
          title: Project Id
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        tasks:
          items:
            type: string
          title: Tasks
          type: array
      required:
        - project_id
        - run_id
        - tasks
      title: TaskResponse
      type: object
    TaskType:
      description: "Valid task types for modeling.


        We store these as ints instead of strings because we will be looking this
        up in the database frequently."
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
      title: TaskType
      type: integer
    TextConstraints:
      properties:
        feedback_type:
          const: text
          title: Feedback Type
          type: string
      required:
        - feedback_type
      title: TextConstraints
      type: object
    TextRating:
      properties:
        feedback_type:
          const: text
          default: text
          title: Feedback Type
          type: string
        value:
          minLength: 1
          title: Value
          type: string
      required:
        - value
      title: TextRating
      type: object
    ThresholdRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: ThresholdRequest
      type: object
    ThresholdResponse:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        easy_samples_threshold:
          title: Easy Samples Threshold
          type: number
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        hard_samples_threshold:
          title: Hard Samples Threshold
          type: number
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      required:
        - easy_samples_threshold
        - hard_samples_threshold
      title: ThresholdResponse
      type: object
    Token:
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          default: bearer
          title: Token Type
          type: string
      required:
        - access_token
      title: Token
      type: object
    ToolErrorRateScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: tool_error_rate
          default: tool_error_rate
          title: Name
          type: string
        type:
          const: plus
          default: plus
          title: Type
          type: string
      title: ToolErrorRateScorer
      type: object
    ToolErrorRateTemplate:
      description: "Template for the tool error rate metric,

        containing all the info necessary to send the tool error rate prompt."
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          default:
            I have a multi-turn chatbot application where the assistant is
            an agent that has access to tools. I want a metric to evaluate whether
            a tool invocation was successful or if it resulted in an error.
          title: Metric Description
          type: string
        metric_few_shot_examples:
          default:
            - evaluating_response:
                "{\n  \"function_errored_out\": false,\n  \"explanation\"\
                : \"\"\n}"
              generation_prompt_and_response: "Tools output:

                ```

                0

                ```"
            - evaluating_response:
                "{\n  \"function_errored_out\": true,\n  \"explanation\"\
                : \"The call failed due to an InvalidFunctionArgumentException.\",\n\
                }"
              generation_prompt_and_response:
                "Tools output:\n```\n{\n  \"error\": \"\
                InvalidFunctionArgumentException\",\n  \"status_code\": 400\n}\n```"
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          default:
            "One or more functions have been called, and you will receive their\
            \ output. The output format could be a string containing the tool's result,\
            \ it could be in JSON or XML format with additional metadata and information,\
            \ or it could be a list of the outputs in any such format.\n\nYour task\
            \ is to determine whether at least one function call didn't execute correctly\
            \ and errored out. If at least one call failed, then you should consider\
            \ the entire call as a failure. \nYou should NOT evaluate any other aspect\
            \ of the tool call. In particular you should not evaluate whether the\
            \ output is well formatted, coherent or contains spelling mistakes.\n\n\
            If you conclude that the call failed, provide an explanation as to why.\
            \ You may summarize any error message you encounter. If the call was successful,\
            \ no explanation is needed.\n\nRespond in the following JSON format:\n\
            \n```\n{\n   \"function_errored_out\": boolean,\n   \"explanation\": string\n\
            }\n```\n\n- **\"function_errored_out\"**: Use `false` if all tool calls\
            \ were successful, and `true` if at least one errored out.\n\n- **\"explanation\"\
            **: If a tool call failed, provide your step-by-step reasoning to determine\
            \ why it might have failed. If all tool calls were succesful, leave this\
            \ blank.\n\nYou must respond with a valid JSON object; don't forget to\
            \ escape special characters."
          title: Metric System Prompt
          type: string
        template:
          default: "Tools output:

            ```

            {response}

            ```"
          title: Template
          type: string
        value_field_name:
          default: function_errored_out
          title: Value Field Name
          type: string
      title: ToolErrorRateTemplate
      type: object
    ToolSelectionQualityScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        model_name:
          anyOf:
            - type: string
            - type: "null"
          description: Alias of the model to use for the scorer.
          title: Model Name
        name:
          const: tool_selection_quality
          default: tool_selection_quality
          title: Name
          type: string
        num_judges:
          anyOf:
            - maximum: 10.0
              minimum: 1.0
              type: integer
            - type: "null"
          description: Number of judges for the scorer.
          title: Num Judges
        type:
          const: plus
          default: plus
          title: Type
          type: string
      title: ToolSelectionQualityScorer
      type: object
    ToolSelectionQualityTemplate:
      description: "Template for the tool selection quality metric,

        containing all the info necessary to send the tool selection quality prompt."
      properties:
        explanation_field_name:
          default: explanation
          description: Field name to look for in the chainpoll response, for the explanation.
          title: Explanation Field Name
          type: string
        metric_description:
          default:
            I have a multi-turn chatbot application where the assistant is
            an agent that has access to tools. I want a metric that assesses whether
            the assistant made the correct decision in choosing to either use tools
            or to directly respond, and in cases where it uses tools, whether it selected
            the correct tools with the correct arguments.
          title: Metric Description
          type: string
        metric_few_shot_examples:
          default:
            - evaluating_response:
                "{\n    \"explanation\": \"The user asked if the\
                \ genuses Sapium and Aristotelia belong to the same family. The bot\
                \ decided to search for 'Sapium', which is associated with part of the\
                \ user's query regarding the family of Sapium. The action aligns with\
                \ the user's query, and all required arguments ('query') are provided,\
                \ making the tool call valid. Furthermore, the information required\
                \ to answer the user's question is not present in the chat history,\
                \ justifying the bot's decision to call a tool.\",\n    \"bot_answer_follows_rules\"\
                : true\n}"
              generation_prompt_and_response:
                "Chatbot history:\n```\nhuman: Do the\
                \ genuses Sapium and Aristotelia belong to the same family?\n```\n\n\
                The bot's available tools:\n```\n[{'name': 'Search',\n  'description':\
                \ 'Search for the query',\n  'parameters': {'type': 'object',\n   'properties':\
                \ {'query': {'type': 'string',\n     'description': 'the query to search'}},\n\
                \   'required': ['query']}},\n {'name': 'Lookup',\n  'description':\
                \ 'Lookup the keyword',\n  'parameters': {'type': 'object',\n   'properties':\
                \ {'keyword': {'type': 'string',\n     'description': 'the keyword to\
                \ lookup'}},\n   'required': ['keyword']}}]\n```\n\nThe answer to evaluate:\n\
                ```\n{\"Thought\": \"I need to search Sapium and Aristotelia, find their\
                \ families, then find if they are the same.\", \"Action\": {\"name\"\
                : \"Search\", \"arguments\": {\"query\": \"Sapium\"}}}\n```"
          items:
            $ref: "#/components/schemas/FewShotExample"
          title: Metric Few Shot Examples
          type: array
        metric_system_prompt:
          default:
            "You will receive the chat history from a chatbot application.\
            \ At the end of the  conversation, it will be the bot\u2019s turn to act.\
            \ The bot has several options: it can reflect and plan its next steps,\
            \ choose to call tools, or respond directly to the user. If the bot opts\
            \ to use tools, the tools execute separately, and the bot will subsequently\
            \ review the output from those tools. Ultimately, the bot should reply\
            \ to the user, choosing the relevant parts of the tools' output.\n\nYour\
            \ task is to evaluate the bot's decision-making process and ensure it\
            \ follows these guidelines:\n- If all user queries have already been answered\
            \ and can be found in the chat history, the bot should not call tools.\n\
            - If no suitable tools are available to assist with user queries, the\
            \ bot should not call tools.\n- If the chat history contains all the necessary\
            \ information to directly answer all user queries, the bot should not\
            \ call tools.\n- If the bot decided to call tools, the tools and argument\
            \ values selected must relate to at least part of one user query.\n- If\
            \ the bot decided to call tools, all arguments marked as \"required\"\
            \ in the tools' schema must be provided with values.\n\nRemember that\
            \ there are many ways the bot's actions can comply with these rules. Your\
            \ role is to determine whether the bot fundamentally violated any of these\
            \ rules, not whether it chose the most optimal response.\n\nRespond in\
            \ the following JSON format:\n```\n{\n    \"explanation\": string,\n \
            \   \"bot_answer_follows_rules\": boolean\n}\n```\n\n- **\"explanation\"\
            **: Provide your step-by-step reasoning to determine whether the bot's\
            \ reply follows the above-mentioned guidelines.\n\n- **\"bot_answer_follows_rules\"\
            **: Respond `true` if you believe the bot followed the above guidelines,\
            \ respond `false` otherwise.\n\nYou must respond with a valid JSON object;\
            \ don't forget to escape special characters."
          title: Metric System Prompt
          type: string
        template:
          default: "Chatbot history:

            ```

            {query}

            ```


            The bot's available tools:

            ```

            {tools}

            ```


            The answer to evaluate:

            ```

            {response}

            ```"
          title: Template
          type: string
        value_field_name:
          default: bot_answer_follows_rules
          title: Value Field Name
          type: string
      title: ToolSelectionQualityTemplate
      type: object
    ToolSpan:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        parent:
          anyOf:
            - $ref: "#/components/schemas/StepWithChildSpans"
            - type: "null"
          description: Parent node of the current node. For internal use only.
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        type:
          const: tool
          default: tool
          description: Type of the step. By default, it is set to tool.
          title: Type
          type: string
      required:
        - input
      title: ToolSpan
      type: object
    ToolStep:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        type:
          const: tool
          default: tool
          description: Type of the step. By default, it is set to tool.
          title: Type
          type: string
      required:
        - input
      title: ToolStep
      type: object
    TopInsightsRequest:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
      title: TopInsightsRequest
      type: object
    TopInsightsResponse:
      properties:
        compare_to:
          anyOf:
            - $ref: "#/components/schemas/Split"
            - type: "null"
        filter_params:
          $ref: "#/components/schemas/FilterParams"
          default:
            data_embs: false
            exclude_ids: []
            ids: []
            likely_mislabeled_dep_percentile: 0
            span_regex: false
        map_threshold:
          default: 0.5
          title: Map Threshold
          type: number
        meta_cols:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Meta Cols
        task:
          anyOf:
            - type: string
            - type: "null"
          title: Task
        top_correlation_pairs:
          additionalProperties:
            type: number
          default: {}
          title: Top Correlation Pairs
          type: object
        top_erroneous_words:
          additionalProperties:
            type: integer
          default: {}
          title: Top Erroneous Words
          type: object
        top_misclassified_pairs:
          default: []
          items:
            type: object
          title: Top Misclassified Pairs
          type: array
        top_misclassified_pairs_percentage:
          title: Top Misclassified Pairs Percentage
          type: number
      required:
        - top_misclassified_pairs_percentage
      title: TopInsightsResponse
      type: object
    TopKToken:
      description:
        "Representation of a token and its probability for Segment Top\
        \ k logprob tokens.\n\nAttributes:\n    token: The text of the token\n   \
        \ prob: The probability of the token"
      properties:
        prob:
          title: Prob
          type: number
        token:
          title: Token
          type: string
      required:
        - token
        - prob
      title: TopKToken
      type: object
    Trace:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: TraceMetadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        spans:
          description: Child spans.
          items:
            discriminator:
              mapping:
                llm: "#/components/schemas/LlmSpan"
                retriever: "#/components/schemas/RetrieverSpan"
                tool: "#/components/schemas/ToolSpan"
                workflow: "#/components/schemas/WorkflowSpan"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowSpan"
              - $ref: "#/components/schemas/LlmSpan"
              - $ref: "#/components/schemas/RetrieverSpan"
              - $ref: "#/components/schemas/ToolSpan"
          title: Spans
          type: array
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        type:
          const: trace
          default: trace
          description: Type of the span. By default, it is set to trace.
          title: Type
          type: string
      required:
        - input
      title: Trace
      type: object
    TraceMetadata:
      properties:
        execution_time:
          default: -1
          description: Execution time for the request (in seconds).
          title: Execution Time
          type: number
        id:
          description: Unique identifier for the request.
          format: uuid4
          title: Id
          type: string
        received_at:
          description: Time the request was received by the server in nanoseconds.
          title: Received At
          type: integer
        response_at:
          description: Time the response was sent by the server in nanoseconds.
          title: Response At
          type: integer
      title: TraceMetadata
      type: object
    TracesIngestRequest:
      examples:
        - log_stream_id: 00000000-0000-0000-0000-000000000000
          traces:
            - created_at_ns: 1739318606574843000
              duration_ns: 0
              input: who is a smart LLM?
              metadata: {}
              name: trace
              output: I am!
              spans:
                - created_at_ns: 1739318606566844000
                  duration_ns: 0
                  input: "Question: who is a smart LLM?"
                  metadata: {}
                  name: llm
                  output: I am!
                  type: llm
              type: trace
        - experiment_id: 00000000-0000-0000-0000-000000000000
          traces:
            - created_at_ns: 1739318606574982000
              duration_ns: 0
              input: who is a smart LLM?
              metadata: {}
              name: trace
              output: I am!
              spans:
                - created_at_ns: 1739318606574976000
                  duration_ns: 0
                  input: "Question: who is a smart LLM?"
                  metadata: {}
                  name: llm
                  output: I am!
                  type: llm
              type: trace
      properties:
        client_version:
          anyOf:
            - type: string
            - type: "null"
          title: Client Version
        experiment_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Experiment id associated with the traces.
          title: Experiment Id
        log_stream_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Log stream id associated with the traces.
          title: Log Stream Id
        logging_method:
          $ref: "#/components/schemas/LogDataLoggingMethod"
          default: api_direct
        traces:
          description: List of traces to log.
          items:
            $ref: "#/components/schemas/Trace"
          minItems: 1
          title: Traces
          type: array
      required:
        - traces
      title: TracesIngestRequest
      type: object
    TracesIngestResponse:
      properties:
        experiment_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Experiment id associated with the traces.
          title: Experiment Id
        log_stream_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Log stream id associated with the traces.
          title: Log Stream Id
        project_id:
          description: Project id associated with the traces.
          format: uuid4
          title: Project Id
          type: string
        project_name:
          description: Project name associated with the traces.
          title: Project Name
          type: string
        records_count:
          description: total number of records (traces & spans) ingested
          title: Records Count
          type: integer
        traces_count:
          description: total number of traces ingested
          title: Traces Count
          type: integer
      required:
        - project_id
        - project_name
        - traces_count
        - records_count
      title: TracesIngestResponse
      type: object
    TrainJobAuthTokenResponse:
      properties:
        file_url:
          title: File Url
          type: string
        token:
          title: Token
          type: string
      required:
        - token
        - file_url
      title: TrainJobAuthTokenResponse
      type: object
    TrainJobStatusResponse:
      properties:
        history:
          items: {}
          title: History
          type: array
        id:
          format: uuid4
          title: Id
          type: string
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        project_name:
          anyOf:
            - type: string
            - type: "null"
          title: Project Name
        run_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Run Id
        run_name:
          anyOf:
            - type: string
            - type: "null"
          title: Run Name
        status:
          title: Status
          type: string
        status_message:
          title: Status Message
          type: string
      required:
        - id
        - status
        - status_message
        - history
      title: TrainJobStatusResponse
      type: object
    TrainResponse:
      properties:
        id:
          format: uuid4
          title: Id
          type: string
      required:
        - id
      title: TrainResponse
      type: object
    TrainingModelResponse:
      additionalProperties: false
      properties:
        filename:
          anyOf:
            - type: string
            - type: "null"
          title: Filename
        id:
          format: uuid4
          title: Id
          type: string
        kind:
          $ref: "#/components/schemas/ModelKind"
        parameters:
          title: Parameters
          type: object
        project_id:
          format: uuid4
          title: Project Id
          type: string
        project_name:
          title: Project Name
          type: string
        run_id:
          format: uuid4
          title: Run Id
          type: string
        run_name:
          title: Run Name
          type: string
        storage_url:
          anyOf:
            - type: string
            - type: "null"
          title: Storage Url
        upload_status:
          $ref: "#/components/schemas/ModelUploadStatus"
          default: pending
      required:
        - kind
        - parameters
        - run_id
        - project_id
        - id
        - run_name
        - project_name
      title: TrainingModelResponse
      type: object
    TransactionLoggingMethod:
      enum:
        - py_langchain
        - py_langchain_async
        - js_langchain
        - py_logger
        - js_logger
        - api_direct
        - workflows
      title: TransactionLoggingMethod
      type: string
    TransactionMetricInfo:
      additionalProperties: true
      properties:
        agentic_workflow_success:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Agentic Workflow Success
        chunk_attribution:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Attribution
        chunk_length:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Length
        chunk_relevance:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Relevance
        chunk_relevant:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Relevant
        chunk_relevant_substrings:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Relevant Substrings
        chunk_relevant_substrings_offsets:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Relevant Substrings Offsets
        chunk_utilization:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Utilization
        chunk_utilized:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Utilized
        chunk_utilized_substrings:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Utilized Substrings
        chunk_utilized_substrings_offsets:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunk Utilized Substrings Offsets
        chunks_attributed:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunks Attributed
        chunks_length:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunks Length
        chunks_unattributed:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunks Unattributed
        chunks_utilized:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Chunks Utilized
        completeness_gpt:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Completeness Gpt
        cost:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Cost
        factuality:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Factuality
        groundedness:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Groundedness
        input_pii:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Input Pii
        input_pii_spans:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Input Pii Spans
        input_pii_spans_offset:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Input Pii Spans Offset
        input_pii_spans_prob:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Input Pii Spans Prob
        input_sexist:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Input Sexist
        input_tone:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Input Tone
        input_toxicity:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Input Toxicity
        instruction_adherence:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Instruction Adherence
        latency:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Latency
        pii:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Pii
        pii_spans:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Pii Spans
        pii_spans_offset:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Pii Spans Offset
        pii_spans_prob:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Pii Spans Prob
        prompt_injection:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Prompt Injection
        prompt_perplexity:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Prompt Perplexity
        protect_status:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Protect Status
        rag_nli_non_adherent_substrings:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Rag Nli Non Adherent Substrings
        rag_nli_non_adherent_substrings_offsets:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Rag Nli Non Adherent Substrings Offsets
        retriever_attribution:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Retriever Attribution
        retriever_utilization:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Retriever Utilization
        sexist:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Sexist
        tone:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Tone
        tool_error_rate:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Tool Error Rate
        tool_selection_quality:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Tool Selection Quality
        toxicity:
          anyOf:
            - $ref: "#/components/schemas/MetricNotComputed"
            - $ref: "#/components/schemas/MetricPending"
            - $ref: "#/components/schemas/MetricComputing"
            - $ref: "#/components/schemas/MetricNotApplicable"
            - $ref: "#/components/schemas/MetricSuccess"
            - $ref: "#/components/schemas/MetricError"
            - $ref: "#/components/schemas/MetricFailed"
          default:
            message: Metric not computed.
            status_type: not_computed
          title: Toxicity
      title: TransactionMetricInfo
      type: object
    TransactionMetricsResponse:
      properties:
        aggregate_metrics:
          $ref: "#/components/schemas/AggregateMetrics"
        bucketed_metrics:
          additionalProperties:
            items:
              $ref: "#/components/schemas/BucketedMetrics"
            type: array
          title: Bucketed Metrics
          type: object
        group_by_columns:
          items:
            type: string
          title: Group By Columns
          type: array
      required:
        - group_by_columns
        - aggregate_metrics
        - bucketed_metrics
      title: TransactionMetricsResponse
      type: object
    TransactionRecordBatch:
      properties:
        client_version:
          anyOf:
            - type: string
            - type: "null"
          title: Client Version
        logging_method:
          $ref: "#/components/schemas/TransactionLoggingMethod"
          default: api_direct
        records:
          items:
            $ref: "#/components/schemas/TransactionRecordIngest"
          title: Records
          type: array
      required:
        - records
      title: TransactionRecordBatch
      type: object
    TransactionRecordDB:
      properties:
        chain_id:
          anyOf:
            - format: uuid
              type: string
            - type: "null"
          title: Chain Id
        chain_root_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Chain Root Id
        created_at:
          format: date-time
          title: Created At
          type: string
        feedback_ratings:
          additionalProperties:
            $ref: "#/components/schemas/FeedbackRatingDB"
          propertyNames:
            format: uuid4
          title: Feedback Ratings
          type: object
        finish_reason:
          anyOf:
            - type: string
            - type: "null"
          title: Finish Reason
        has_children:
          anyOf:
            - type: boolean
            - type: "null"
          title: Has Children
        id:
          format: uuid4
          title: Id
          type: string
        input_text:
          title: Input Text
          type: string
        latency_ms:
          anyOf:
            - type: integer
            - type: "null"
          title: Latency Ms
        metric_info:
          $ref: "#/components/schemas/TransactionMetricInfo"
        metrics_batch_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Metrics Batch Id
        metrics_status:
          $ref: "#/components/schemas/TransactionRecordStatus"
          default: unprocessed
        model:
          anyOf:
            - type: string
            - type: "null"
          title: Model
        node_id:
          format: uuid4
          title: Node Id
          type: string
        node_name:
          anyOf:
            - type: string
            - type: "null"
          title: Node Name
        node_type:
          $ref: "#/components/schemas/NodeType"
        num_input_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Input Tokens
        num_output_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Output Tokens
        num_total_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Total Tokens
        output_logprobs:
          anyOf:
            - type: object
            - type: "null"
          title: Output Logprobs
        output_text:
          anyOf:
            - type: string
            - type: "null"
          title: Output Text
        project_id:
          format: uuid4
          title: Project Id
          type: string
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          title: Status Code
        tags:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Tags
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
        time_to_first_token_ms:
          anyOf:
            - type: number
            - type: "null"
          title: Time To First Token Ms
        tools:
          anyOf:
            - type: string
            - type: "null"
          title: Tools
        updated_at:
          format: date-time
          title: Updated At
          type: string
        user_metadata:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: User Metadata
        version:
          anyOf:
            - type: string
            - type: "null"
          title: Version
      required:
        - node_id
        - created_at
        - node_type
        - input_text
        - id
        - updated_at
        - project_id
        - metric_info
      title: TransactionRecordDB
      type: object
    TransactionRecordIngest:
      properties:
        chain_id:
          anyOf:
            - format: uuid
              type: string
            - type: "null"
          title: Chain Id
        chain_root_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Chain Root Id
        created_at:
          format: date-time
          title: Created At
          type: string
        finish_reason:
          anyOf:
            - type: string
            - type: "null"
          title: Finish Reason
        has_children:
          anyOf:
            - type: boolean
            - type: "null"
          title: Has Children
        input_text:
          title: Input Text
          type: string
        latency_ms:
          anyOf:
            - type: integer
            - type: "null"
          title: Latency Ms
        model:
          anyOf:
            - type: string
            - type: "null"
          title: Model
        node_id:
          format: uuid4
          title: Node Id
          type: string
        node_name:
          anyOf:
            - type: string
            - type: "null"
          title: Node Name
        node_type:
          $ref: "#/components/schemas/NodeType"
        num_input_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Input Tokens
        num_output_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Output Tokens
        num_total_tokens:
          anyOf:
            - type: integer
            - type: "null"
          title: Num Total Tokens
        output_logprobs:
          anyOf:
            - type: object
            - type: "null"
          title: Output Logprobs
        output_text:
          anyOf:
            - type: string
            - type: "null"
          title: Output Text
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          title: Status Code
        tags:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Tags
        temperature:
          anyOf:
            - type: number
            - type: "null"
          title: Temperature
        time_to_first_token_ms:
          anyOf:
            - type: number
            - type: "null"
          title: Time To First Token Ms
        tools:
          anyOf:
            - type: string
            - type: "null"
          title: Tools
        user_metadata:
          anyOf:
            - additionalProperties:
                type: string
              type: object
            - type: "null"
          title: User Metadata
        version:
          anyOf:
            - type: string
            - type: "null"
          title: Version
      required:
        - node_id
        - created_at
        - node_type
        - input_text
      title: TransactionRecordIngest
      type: object
    TransactionRecordStatus:
      enum:
        - unprocessed
        - processing
        - processed
      title: TransactionRecordStatus
      type: string
    TransactionRecordsResponse:
      description:
        "Rows response with column types for json blobs.\n\ncolumns example:\n\
        {\n  \"metrics\": {\n    \"uncertainty\": \"float\"\n  },\n  \"user_metadata\"\
        : {\n    \"source\": \"string\"\n  }\n}"
      properties:
        columns:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          title: Columns
          type: object
        filter_options:
          additionalProperties:
            items:
              type: string
            type: array
          title: Filter Options
          type: object
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        rows:
          items:
            $ref: "#/components/schemas/TransactionRecordDB"
          title: Rows
          type: array
        starting_token:
          default: 0
          title: Starting Token
          type: integer
      required:
        - columns
        - rows
      title: TransactionRecordsResponse
      type: object
    TransactionRowsRequestBody:
      properties:
        columns:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Columns
        filters:
          items:
            $ref: "#/components/schemas/QueryFilterV1"
          title: Filters
          type: array
        sort_spec:
          default:
            - col_name: created_at
              sort_dir: desc
          items:
            $ref: "#/components/schemas/SortClause"
          title: Sort Spec
          type: array
      title: TransactionRowsRequestBody
      type: object
    TransferUserResponse:
      properties:
        message:
          title: Message
          type: string
      required:
        - message
      title: TransferUserResponse
      type: object
    UncertaintyScorer:
      properties:
        filters:
          anyOf:
            - items:
                discriminator:
                  mapping:
                    metadata: "#/components/schemas/MetadataFilter"
                    node_name: "#/components/schemas/NodeNameFilter"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/NodeNameFilter"
                  - $ref: "#/components/schemas/MetadataFilter"
              type: array
            - type: "null"
          description: List of filters to apply to the scorer.
          title: Filters
        name:
          const: uncertainty
          default: uncertainty
          title: Name
          type: string
      title: UncertaintyScorer
      type: object
    UpdateAlertConfigurationRequest:
      properties:
        active:
          anyOf:
            - type: boolean
            - type: "null"
          title: Active
        alert_sent:
          anyOf:
            - type: boolean
            - type: "null"
          title: Alert Sent
        conditions:
          anyOf:
            - items:
                $ref: "#/components/schemas/AlertCondition"
              type: array
            - type: "null"
          title: Conditions
        counter:
          anyOf:
            - type: integer
            - type: "null"
          title: Counter
        counter_since_last_sent:
          anyOf:
            - type: integer
            - type: "null"
          title: Counter Since Last Sent
        interval:
          anyOf:
            - type: integer
            - type: "null"
          title: Interval
        last_sent:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Last Sent
        last_triggered:
          anyOf:
            - format: date-time
              type: string
            - type: "null"
          title: Last Triggered
        processed_by:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Processed By
        schema_version:
          anyOf:
            - $ref: "#/components/schemas/AlertMonitorType"
            - type: "null"
      title: UpdateAlertConfigurationRequest
      type: object
    UpdateDatasetContentRequest:
      properties:
        edits:
          error: Edits list cannot be empty.
          items:
            discriminator:
              mapping:
                add_column: "#/components/schemas/DatasetAddColumn"
                append_row: "#/components/schemas/DatasetAppendRow"
                delete_column: "#/components/schemas/DatasetDeleteColumn"
                delete_row: "#/components/schemas/DatasetDeleteRow"
                rename_column: "#/components/schemas/DatasetRenameColumn"
                update_row: "#/components/schemas/DatasetUpdateRow"
              propertyName: edit_type
            oneOf:
              - $ref: "#/components/schemas/DatasetAppendRow"
              - $ref: "#/components/schemas/DatasetUpdateRow"
              - $ref: "#/components/schemas/DatasetDeleteRow"
              - $ref: "#/components/schemas/DatasetDeleteColumn"
              - $ref: "#/components/schemas/DatasetRenameColumn"
              - $ref: "#/components/schemas/DatasetAddColumn"
          minItems: 1
          title: Edits
          type: array
      required:
        - edits
      title: UpdateDatasetContentRequest
      type: object
    UpdateDatasetRequest:
      properties:
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
      title: UpdateDatasetRequest
      type: object
    UpdateGeneratedScorerRequest:
      properties:
        chain_poll_template:
          anyOf:
            - $ref: "#/components/schemas/ChainPollTemplate"
            - type: "null"
        instructions:
          anyOf:
            - type: string
            - type: "null"
          title: Instructions
        name:
          anyOf:
            - type: string
            - type: "null"
          title: Name
        scoreable_node_types:
          anyOf:
            - items:
                $ref: "#/components/schemas/NodeType"
              type: array
            - type: "null"
          title: Scoreable Node Types
        scorer_configuration:
          anyOf:
            - $ref: "#/components/schemas/GeneratedScorerConfiguration"
            - type: "null"
      title: UpdateGeneratedScorerRequest
      type: object
    UpdateRunResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        created_by:
          format: uuid4
          title: Created By
          type: string
        dataset_hash:
          anyOf:
            - type: string
            - type: "null"
          title: Dataset Hash
        id:
          format: uuid4
          title: Id
          type: string
        last_updated_by:
          format: uuid4
          title: Last Updated By
          type: string
        name:
          anyOf:
            - minLength: 1
              type: string
            - type: "null"
          title: Name
        num_samples:
          title: Num Samples
          type: integer
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          title: Project Id
        run_tags:
          items:
            $ref: "#/components/schemas/RunTagDB"
          title: Run Tags
          type: array
        task_type:
          anyOf:
            - $ref: "#/components/schemas/TaskType"
            - type: "null"
        updated_at:
          format: date-time
          title: Updated At
          type: string
        winner:
          title: Winner
          type: boolean
      required:
        - created_by
        - num_samples
        - winner
        - id
        - created_at
        - updated_at
        - last_updated_by
      title: UpdateRunResponse
      type: object
    UpdateUserResponse:
      properties:
        auth_method:
          $ref: "#/components/schemas/AuthMethod"
          default: email
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          format: email
          title: Email
          type: string
        email_is_verified:
          anyOf:
            - type: boolean
            - type: "null"
          title: Email Is Verified
        first_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: First Name
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Last Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        role:
          $ref: "#/components/schemas/UserRole"
          default: read_only
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - email
        - created_at
        - updated_at
      title: UpdateUserResponse
      type: object
    UploadModel:
      additionalProperties: false
      properties:
        kind:
          $ref: "#/components/schemas/ModelKind"
        parameters:
          title: Parameters
          type: object
      required:
        - parameters
        - kind
      title: UploadModel
      type: object
    UploadModelResponse:
      properties:
        filename:
          title: Filename
          type: string
        id:
          format: uuid4
          title: Id
          type: string
        upload_url:
          title: Upload Url
          type: string
      required:
        - id
        - filename
        - upload_url
      title: UploadModelResponse
      type: object
    UserAction:
      enum:
        - update
        - delete
        - read_api_keys
      title: UserAction
      type: string
    UserCollaborator:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          title: Email
          type: string
        first_name:
          anyOf:
            - type: string
            - type: "null"
          title: First Name
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          title: Last Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        role:
          $ref: "#/components/schemas/CollaboratorRole"
        user_id:
          format: uuid4
          title: User Id
          type: string
      required:
        - id
        - role
        - created_at
        - user_id
        - first_name
        - last_name
        - email
      title: UserCollaborator
      type: object
    UserCollaboratorCreate:
      properties:
        role:
          $ref: "#/components/schemas/CollaboratorRole"
          default: viewer
        user_id:
          format: uuid4
          title: User Id
          type: string
      required:
        - user_id
      title: UserCollaboratorCreate
      type: object
    UserCreate:
      properties:
        auth_method:
          $ref: "#/components/schemas/AuthMethod"
          default: email
        email:
          format: email
          title: Email
          type: string
        email_is_verified:
          anyOf:
            - type: boolean
            - type: "null"
          default: false
          title: Email Is Verified
        first_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: First Name
        last_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Last Name
        password:
          anyOf:
            - format: password
              type: string
              writeOnly: true
            - type: "null"
          title: Password
        role:
          $ref: "#/components/schemas/UserRole"
          default: read_only
      required:
        - email
      title: UserCreate
      type: object
    UserDB:
      properties:
        auth_method:
          $ref: "#/components/schemas/AuthMethod"
          default: email
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          format: email
          title: Email
          type: string
        email_is_verified:
          anyOf:
            - type: boolean
            - type: "null"
          title: Email Is Verified
        first_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: First Name
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Last Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        role:
          $ref: "#/components/schemas/UserRole"
          default: read_only
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - email
        - created_at
        - updated_at
      title: UserDB
      type: object
    UserInfo:
      description: A user's basic information, used for display purposes.
      properties:
        email:
          format: email
          title: Email
          type: string
        first_name:
          anyOf:
            - type: string
            - type: "null"
          title: First Name
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          title: Last Name
      required:
        - id
        - email
      title: UserInfo
      type: object
    UserMetadataFilter:
      properties:
        key:
          title: Key
          type: string
        name:
          const: user_metadata
          default: user_metadata
          title: Name
          type: string
        operator:
          enum:
            - one_of
            - not_in
            - eq
            - ne
          title: Operator
          type: string
        value:
          anyOf:
            - type: string
            - items:
                type: string
              type: array
          title: Value
      required:
        - operator
        - key
        - value
      title: UserMetadataFilter
      type: object
    UserPasswordResetRequest:
      properties:
        email:
          title: Email
          type: string
        email_is_verified:
          default: true
          title: Email Is Verified
          type: boolean
        password:
          anyOf:
            - format: password
              type: string
              writeOnly: true
            - type: "null"
          title: Password
      required:
        - email
      title: UserPasswordResetRequest
      type: object
    UserPasswordResetResponse:
      properties:
        auth_method:
          $ref: "#/components/schemas/AuthMethod"
          default: email
        created_at:
          format: date-time
          title: Created At
          type: string
        email:
          format: email
          title: Email
          type: string
        email_is_verified:
          anyOf:
            - type: boolean
            - type: "null"
          title: Email Is Verified
        first_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: First Name
        id:
          format: uuid4
          title: Id
          type: string
        last_name:
          anyOf:
            - type: string
            - type: "null"
          default: ""
          title: Last Name
        permissions:
          default: []
          items:
            $ref: "#/components/schemas/Permission"
          title: Permissions
          type: array
        role:
          $ref: "#/components/schemas/UserRole"
          default: read_only
        updated_at:
          format: date-time
          title: Updated At
          type: string
      required:
        - id
        - email
        - created_at
        - updated_at
      title: UserPasswordResetResponse
      type: object
    UserRole:
      enum:
        - admin
        - manager
        - user
        - read_only
      title: UserRole
      type: string
    UserRoleInfo:
      properties:
        description:
          examples:
            - Full access
          title: Description
          type: string
        display_name:
          examples:
            - Admin
          title: Display Name
          type: string
        name:
          $ref: "#/components/schemas/UserRole"
          examples:
            - admin
      required:
        - name
        - display_name
        - description
      title: UserRoleInfo
      type: object
    UserUpdate:
      properties:
        email:
          anyOf:
            - format: email
              type: string
            - type: "null"
          title: Email
        email_is_verified:
          anyOf:
            - type: boolean
            - type: "null"
          title: Email Is Verified
        first_name:
          anyOf:
            - type: string
            - type: "null"
          title: First Name
        last_name:
          anyOf:
            - type: string
            - type: "null"
          title: Last Name
        role:
          anyOf:
            - $ref: "#/components/schemas/UserRole"
            - type: "null"
      title: UserUpdate
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
    ValidationRequest:
      properties:
        file_type:
          default: csv
          title: File Type
          type: string
        payload:
          title: Payload
          type: string
      required:
        - payload
      title: ValidationRequest
      type: object
    ValidationResponse:
      properties:
        filename:
          title: Filename
          type: string
        upload_url:
          title: Upload Url
          type: string
      required:
        - upload_url
        - filename
      title: ValidationResponse
      type: object
    ValuePromptFilterParam:
      properties:
        column:
          title: Column
          type: string
        filter_type:
          const: value
          title: Filter Type
          type: string
        relation:
          $ref: "#/components/schemas/Operator"
        value:
          anyOf:
            - type: integer
            - type: number
            - type: boolean
            - type: string
          title: Value
      required:
        - column
        - filter_type
        - value
        - relation
      title: ValuePromptFilterParam
      type: object
    VertexAIIntegration:
      properties:
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        name:
          const: vertex_ai
          default: vertex_ai
          title: Name
          type: string
      title: VertexAIIntegration
      type: object
    VertexAIIntegrationCreate:
      properties:
        token:
          title: Token
          type: string
      required:
        - token
      title: VertexAIIntegrationCreate
      type: object
    Webhook:
      properties:
        notes:
          default: ""
          maxLength: 255
          title: Notes
          type: string
        status:
          $ref: "#/components/schemas/WebhookStatus"
          default: untested
        url:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Url
          type: string
      required:
        - url
      title: Webhook
      type: object
    WebhookStatus:
      enum:
        - active
        - untested
        - failed
        - paused
      title: WebhookStatus
      type: string
    WeeklyChangelog:
      properties:
        changes:
          additionalProperties:
            $ref: "#/components/schemas/Changes"
          title: Changes
          type: object
        week_of:
          format: date
          title: Week Of
          type: string
      required:
        - week_of
      title: WeeklyChangelog
      type: object
    WorkflowCountResponse:
      properties:
        count:
          title: Count
          type: integer
        max_rows:
          default: 512
          title: Max Rows
          type: integer
        max_rows_exceeded:
          default: false
          title: Max Rows Exceeded
          type: boolean
      required:
        - count
      title: WorkflowCountResponse
      type: object
    WorkflowSpan:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        parent:
          anyOf:
            - $ref: "#/components/schemas/StepWithChildSpans"
            - type: "null"
          description: Parent node of the current node. For internal use only.
        spans:
          description: Child spans.
          items:
            discriminator:
              mapping:
                llm: "#/components/schemas/LlmSpan"
                retriever: "#/components/schemas/RetrieverSpan"
                tool: "#/components/schemas/ToolSpan"
                workflow: "#/components/schemas/WorkflowSpan"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowSpan"
              - $ref: "#/components/schemas/LlmSpan"
              - $ref: "#/components/schemas/RetrieverSpan"
              - $ref: "#/components/schemas/ToolSpan"
          title: Spans
          type: array
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        type:
          const: workflow
          default: workflow
          description: Type of the span. By default, it is set to workflow.
          title: Type
          type: string
      required:
        - input
      title: WorkflowSpan
      type: object
    WorkflowStep:
      properties:
        created_at_ns:
          description: Timestamp of the step's creation, as nanoseconds since epoch.
          title: Created At Ns
          type: integer
        duration_ns:
          default: 0
          description: Duration of the step in nanoseconds.
          title: Duration Ns
          type: integer
        ground_truth:
          anyOf:
            - type: string
            - type: "null"
          description: Ground truth expected output for the step.
          title: Ground Truth
        input:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          description: Input to the step.
          title: Input
        metadata:
          additionalProperties:
            type: string
          description: Metadata associated with this step.
          title: Metadata
          type: object
        name:
          default: ""
          description: Name of the step.
          title: Name
          type: string
        output:
          anyOf:
            - type: string
            - $ref: "#/components/schemas/Document"
            - $ref: "#/components/schemas/Message"
            - type: object
            - items:
                type: string
              type: array
            - items:
                $ref: "#/components/schemas/Document"
              type: array
            - items:
                $ref: "#/components/schemas/Message"
              type: array
            - items:
                additionalProperties:
                  type: string
                type: object
              type: array
            - items:
                type: object
              type: array
          default: ""
          description: Output of the step.
          title: Output
        parent:
          anyOf:
            - $ref: "#/components/schemas/StepWithChildren"
            - type: "null"
          description: Parent node of the current node. For internal use only.
        status_code:
          anyOf:
            - type: integer
            - type: "null"
          description: Status code of the step. Used for logging failed/errored steps.
          title: Status Code
        steps:
          description: Steps in the workflow.
          items:
            discriminator:
              mapping:
                agent: "#/components/schemas/AgentStep"
                chain: "#/components/schemas/ChainStep"
                llm: "#/components/schemas/LlmStep"
                retriever: "#/components/schemas/RetrieverStep"
                tool: "#/components/schemas/ToolStep"
                workflow: "#/components/schemas/WorkflowStep"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowStep"
              - $ref: "#/components/schemas/ChainStep"
              - $ref: "#/components/schemas/LlmStep"
              - $ref: "#/components/schemas/RetrieverStep"
              - $ref: "#/components/schemas/ToolStep"
              - $ref: "#/components/schemas/AgentStep"
          title: Steps
          type: array
        type:
          const: workflow
          default: workflow
          description: Type of the step. By default, it is set to workflow.
          title: Type
          type: string
      required:
        - input
      title: WorkflowStep
      type: object
    WorkflowsIngestRequest:
      examples:
        - project_name: my-observe-project
          workflows:
            - created_at_ns: 1739318604889612000
              duration_ns: 0
              input: who is a smart LLM?
              metadata: {}
              name: llm
              output: I am!
              type: llm
        - project_id: 00000000-0000-0000-0000-000000000000
          workflows:
            - created_at_ns: 1739318604889630000
              duration_ns: 0
              input: who is a smart LLM?
              metadata: {}
              name: llm
              output: I am!
              type: llm
      properties:
        project_id:
          anyOf:
            - format: uuid4
              type: string
            - type: "null"
          description: Project ID for the Observe project.
          title: Project Id
        project_name:
          anyOf:
            - type: string
            - type: "null"
          description: Project name for the Observe project.
          title: Project Name
        workflows:
          description: List of workflows to log.
          items:
            discriminator:
              mapping:
                agent: "#/components/schemas/AgentStep"
                chain: "#/components/schemas/ChainStep"
                llm: "#/components/schemas/LlmStep"
                retriever: "#/components/schemas/RetrieverStep"
                tool: "#/components/schemas/ToolStep"
                workflow: "#/components/schemas/WorkflowStep"
              propertyName: type
            oneOf:
              - $ref: "#/components/schemas/WorkflowStep"
              - $ref: "#/components/schemas/ChainStep"
              - $ref: "#/components/schemas/LlmStep"
              - $ref: "#/components/schemas/RetrieverStep"
              - $ref: "#/components/schemas/ToolStep"
              - $ref: "#/components/schemas/AgentStep"
          minItems: 1
          title: Workflows
          type: array
      required:
        - workflows
      title: WorkflowsIngestRequest
      type: object
    WorkflowsIngestResponse:
      properties:
        message:
          title: Message
          type: string
        project_id:
          format: uuid4
          title: Project Id
          type: string
        project_name:
          title: Project Name
          type: string
        records_count:
          title: Records Count
          type: integer
        workflows_count:
          title: Workflows Count
          type: integer
      required:
        - message
        - project_id
        - project_name
        - workflows_count
        - records_count
      title: WorkflowsIngestResponse
      type: object
    WorkflowsReadResponse:
      description: Response model for workflow evaluation results
      properties:
        limit:
          default: 100
          title: Limit
          type: integer
        next_starting_token:
          anyOf:
            - type: integer
            - type: "null"
          title: Next Starting Token
        paginated:
          default: false
          title: Paginated
          type: boolean
        starting_token:
          default: 0
          title: Starting Token
          type: integer
        workflows:
          items:
            $ref: "#/components/schemas/BaseGalileoStep"
          title: Workflows
          type: array
      required:
        - workflows
      title: WorkflowsReadResponse
      type: object
    WriterIntegration:
      properties:
        extra:
          anyOf:
            - type: object
            - type: "null"
          title: Extra
        name:
          const: writer
          default: writer
          title: Name
          type: string
        organization_id:
          title: Organization Id
          type: string
      required:
        - organization_id
      title: WriterIntegration
      type: object
    WriterIntegrationCreate:
      properties:
        organization_id:
          title: Organization Id
          type: string
        token:
          title: Token
          type: string
      required:
        - organization_id
        - token
      title: WriterIntegrationCreate
      type: object
    XRayCardDB:
      properties:
        alert_id:
          title: Alert Id
          type: integer
        dismissed:
          title: Dismissed
          type: boolean
        extra_filters:
          anyOf:
            - $ref: "#/components/schemas/ExtraAlertFilters"
            - type: "null"
        id:
          format: uuid4
          title: Id
          type: string
        importance:
          anyOf:
            - $ref: "#/components/schemas/AlertImportance"
            - type: "null"
        logic:
          anyOf:
            - $ref: "#/components/schemas/FilterParams"
            - type: "null"
        message:
          default: ""
          title: Message
          type: string
        message_fields:
          title: Message Fields
          type: object
        pct_samples:
          anyOf:
            - type: number
            - type: "null"
          title: Pct Samples
        score:
          anyOf:
            - maximum: 1.0
              minimum: 0.0
              type: number
            - type: "null"
          title: Score
        suggestion:
          anyOf:
            - type: string
            - type: "null"
          title: Suggestion
        xray_class:
          $ref: "#/components/schemas/XRayClass"
        xray_classname:
          default: ""
          title: Xray Classname
          type: string
      required:
        - xray_class
        - message_fields
        - id
        - dismissed
        - alert_id
      title: XRayCardDB
      type: object
    XRayClass:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 52
        - 53
      title: XRayClass
      type: integer
    api__schemas__metric_critique__RecomputeSettingsObserve:
      properties:
        filters:
          description: The parsed filters that are used to recompute the metric critique.
          items:
            $ref: "#/components/schemas/QueryFilterV1"
          title: Filters
          type: array
        mode:
          const: observe_filters
          default: observe_filters
          title: Mode
          type: string
      title: RecomputeSettingsObserve
      type: object
    promptgalileo__schemas__metric_critique__RecomputeSettingsObserve:
      properties:
        filters:
          items: {}
          title: Filters
          type: array
        mode:
          const: observe_filters
          default: observe_filters
          title: Mode
          type: string
      required:
        - filters
      title: RecomputeSettingsObserveBase
      type: object
  securitySchemes:
    APIKeyHeader:
      in: header
      name: Galileo-API-Key
      type: apiKey
    HTTPBasic:
      scheme: basic
      type: http
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: http://localhost:8088/login
      type: oauth2
info:
  title: Galileo API Server
  version: 1.378.0
openapi: 3.1.0
paths:
  /changelog:
    get:
      operationId: get_current_changelog_changelog_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RootModel_Sequence_WeeklyChangelog__"
          description: Successful Response
      summary: Get Current Changelog
      tags:
        - changelog
  /collaborator_roles:
    get:
      operationId: get_collaborator_roles_collaborator_roles_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CollaboratorRoleInfo"
                title: Response Get Collaborator Roles Collaborator Roles Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Collaborator Roles
      tags:
        - projects
  /current_user:
    get:
      operationId: current_user_current_user_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrentUserDB"
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Current User
      tags:
        - auth
  /current_user/groups:
    get:
      operationId: list_current_user_groups_current_user_groups_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GroupDB"
                title: Response List Current User Groups Current User Groups Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Current User Groups
      tags:
        - users
  /datasets:
    get:
      operationId: list_datasets_datasets_get
      parameters:
        - description: Actions to include in the 'permissions' field.
          in: query
          name: actions
          required: false
          schema:
            description: Actions to include in the 'permissions' field.
            items:
              $ref: "#/components/schemas/DatasetAction"
            title: Actions
            type: array
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Datasets
      tags:
        - datasets
    post:
      operationId: upload_dataset_datasets_post
      parameters:
        - in: query
          name: format
          required: false
          schema:
            $ref: "#/components/schemas/DatasetFormat"
            default: csv
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_upload_dataset_datasets_post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Upload Dataset
      tags:
        - datasets
  /datasets/query:
    post:
      operationId: query_datasets_datasets_query_post
      parameters:
        - description: Actions to include in the 'permissions' field.
          in: query
          name: actions
          required: false
          schema:
            description: Actions to include in the 'permissions' field.
            items:
              $ref: "#/components/schemas/DatasetAction"
            title: Actions
            type: array
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDatasetParams"
              default:
                filters: []
                sort:
                  ascending: false
                  name: created_at
                  sort_type: column
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Query Datasets
      tags:
        - datasets
  /datasets/{dataset_id}:
    delete:
      operationId: delete_dataset_datasets__dataset_id__delete
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Dataset
      tags:
        - datasets
    get:
      operationId: get_dataset_datasets__dataset_id__get
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Dataset
      tags:
        - datasets
    patch:
      operationId: update_dataset_datasets__dataset_id__patch
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Dataset
      tags:
        - datasets
  /datasets/{dataset_id}/content:
    get:
      operationId: get_dataset_content_datasets__dataset_id__content_get
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetContent"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Dataset Content
      tags:
        - datasets
    patch:
      description: "Update the content of a dataset.


        The `index` and `column_name` fields are treated as keys tied to a specific
        version of the dataset.

        As such, these values are considered immutable identifiers for the dataset's
        structure.


        For example, if an edit operation changes the name of a column, subsequent
        edit operations in

        the same request should reference the column using its original name.


        The `If-Match` header is used to ensure that updates are only applied if the
        client's version of the dataset

        matches the server's version. This prevents conflicts from simultaneous updates.
        The `ETag` header in the response

        provides the new version identifier after a successful update."
      operationId: update_dataset_content_datasets__dataset_id__content_patch
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - description: ETag of the dataset as a version identifier.
          example: d89cce33-549d-4b6d-b220-afb641d859c8
          in: header
          name: If-Match
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            description: ETag of the dataset as a version identifier.
            title: If-Match
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetContentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Dataset Content
      tags:
        - datasets
    put:
      description: Rollback the content of a dataset to a previous version.
      operationId: rollback_dataset_content_datasets__dataset_id__content_put
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RollbackRequest"
        required: true
      responses:
        "204":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Rollback Dataset Content
      tags:
        - datasets
  /datasets/{dataset_id}/content/query:
    post:
      operationId: query_dataset_content_datasets__dataset_id__content_query_post
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryDatasetParams"
              default:
                filters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetContent"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Query Dataset Content
      tags:
        - datasets
  /datasets/{dataset_id}/download:
    get:
      operationId: download_dataset_datasets__dataset_id__download_get
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Download Dataset
      tags:
        - datasets
  /datasets/{dataset_id}/users:
    get:
      description: List the users with which the dataset has been shared.
      operationId: list_user_dataset_collaborators_datasets__dataset_id__users_get
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserCollaboratorsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List User Dataset Collaborators
      tags:
        - datasets
    post:
      operationId: create_user_dataset_collaborators_datasets__dataset_id__users_post
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/UserCollaboratorCreate"
              title: Body
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/UserCollaborator"
                title:
                  Response Create User Dataset Collaborators Datasets  Dataset
                  Id  Users Post
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create User Dataset Collaborators
      tags:
        - datasets
  /datasets/{dataset_id}/users/{user_id}:
    delete:
      description: Remove a user's access to a dataset.
      operationId: delete_user_dataset_collaborator_datasets__dataset_id__users__user_id__delete
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete User Dataset Collaborator
      tags:
        - datasets
    patch:
      description: Update the sharing permissions of a user on a dataset.
      operationId: update_user_dataset_collaborator_datasets__dataset_id__users__user_id__patch
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollaboratorUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCollaborator"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update User Dataset Collaborator
      tags:
        - datasets
  /datasets/{dataset_id}/versions/query:
    post:
      operationId: query_dataset_versions_datasets__dataset_id__versions_query_post
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDatasetVersionParams"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Query Dataset Versions
      tags:
        - datasets
  /datasets/{dataset_id}/versions/{version_index}/content:
    get:
      operationId: get_dataset_version_content_datasets__dataset_id__versions__version_index__content_get
      parameters:
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - in: path
          name: version_index
          required: true
          schema:
            title: Version Index
            type: integer
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetContent"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Dataset Version Content
      tags:
        - datasets
  /edits/export:
    post:
      description: "Exports the resulting dataframe after a series of edits.


        If overrides are provided, and the original edit had a task, the override
        MUST explicitly have a task set (typically

        the same task as the edit)"
      operationId: export_edits_edits_export_post
      parameters:
        - in: query
          name: ignore_conflicting_edits
          required: false
          schema:
            default: true
            title: Ignore Conflicting Edits
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditExportRequest"
              examples:
                - edit_ids:
                    - your-edit-uuid-1
                    - your-edit-uuid-2
                  file_type: csv
        required: true
      responses:
        "200":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Edits
      tags:
        - edits
  /edits/export/remote:
    post:
      description:
        "Exports the resulting dataframe after a series of edits to a remote
        object store.


        Note that the file type is determined by the suffix of the object name. Must
        be one of csv, parquet, json, arrow


        If overrides are provided, and the original edit had a task, the override
        MUST explicitly have a task set (typically

        the same task as the edit)"
      operationId: export_edits_remote_edits_export_remote_post
      parameters:
        - in: query
          name: ignore_conflicting_edits
          required: false
          schema:
            default: true
            title: Ignore Conflicting Edits
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoteEditExportRequest"
              examples:
                - edit_ids:
                    - your-edit-uuid-1
                    - your-edit-uuid-2
                  export_to: s3
                  object_name: /{project_id}/{run_id}/{split}/data_edited.csv
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteEditExportResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Edits Remote
      tags:
        - edits
  /edits/{edit_id}:
    delete:
      operationId: delete_edit_edits__edit_id__delete
      parameters:
        - in: path
          name: edit_id
          required: true
          schema:
            format: uuid4
            title: Edit Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditDeleteResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Edit
      tags:
        - edits
    get:
      description: Gets an edit.
      operationId: get_edit_edits__edit_id__get
      parameters:
        - in: path
          name: edit_id
          required: true
          schema:
            format: uuid4
            title: Edit Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditGetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Edit
      tags:
        - edits
  /edits/{edit_id}/content:
    get:
      description:
        Gets the data for an edit, including the text, predicted label
        and true label.
      operationId: get_edit_content_edits__edit_id__content_get
      parameters:
        - in: path
          name: edit_id
          required: true
          schema:
            format: uuid4
            title: Edit Id
            type: string
        - in: query
          name: page_num
          required: false
          schema:
            default: 0
            title: Page Num
            type: integer
        - in: query
          name: meta_cols
          required: false
          schema:
            anyOf:
              - items:
                  type: string
                type: array
              - type: "null"
            title: Meta Cols
        - in: query
          name: text_pat
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Text Pat
        - in: query
          name: regex
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: "null"
            title: Regex
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditContent"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Edit Content
      tags:
        - edits
  /edits/{edit_id}/review:
    post:
      description: "Add a review for an edit.


        Must have access to the run with which the edit exists in. Users CAN review
        their own edits (as per ticket

        instructions)"
      operationId: add_review_for_edit_edits__edit_id__review_post
      parameters:
        - in: path
          name: edit_id
          required: true
          schema:
            format: uuid4
            title: Edit Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditReviewDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Add Review For Edit
      tags:
        - edits
  /evaluate/run-workflows:
    post:
      description:
        Fetch evaluation results for a specific run including rows and
        aggregate information.
      operationId: get_evaluate_run_results_evaluate_run_workflows_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluateRunResultsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowsReadResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Evaluate Run Results
      tags:
        - evaluate
  /evaluate/runs:
    post:
      description: "Create a new Evaluate run with workflows.


        Use this endpoint to create a new Evaluate run with workflows. The request
        body should contain the `workflows` to be ingested and evaluated.


        Additionally, specify the `project_id` or `project_name` to which the workflows
        should be ingested. If the project does not exist, it will be created. If
        the project exists, the workflows will be logged to it. If both `project_id`
        and `project_name` are provided, `project_id` will take precedence. The `run_name`
        is optional and will be auto-generated (timestamp-based) if not provided.


        The body is also expected to include the configuration for the scorers to
        be used in the evaluation. This configuration will be used to evaluate the
        workflows and generate the results."
      operationId: create_workflows_run_evaluate_runs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluateRunRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluateRunResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Workflows Run
      tags:
        - evaluate
  /generate_password_reset:
    get:
      operationId: generate_password_reset_link_generate_password_reset_get
      parameters:
        - in: query
          name: user_email
          required: true
          schema:
            title: User Email
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PasswordResetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Generate Password Reset Link
      tags:
        - users
  /generate_password_reset_email:
    get:
      operationId: generate_password_reset_email_generate_password_reset_email_get
      parameters:
        - in: query
          name: user_email
          required: true
          schema:
            title: User Email
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PasswordResetEmailResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Generate Password Reset Email
      tags:
        - users
  /generated-scorers:
    get:
      operationId: get_all_generated_scorers_get
      parameters:
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGeneratedScorersResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get All
      tags:
        - scorer
        - llm
    post:
      operationId: create_generated_scorers_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGeneratedScorerRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratedScorerResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create
      tags:
        - scorer
        - llm
  /generated-scorers/generate:
    post:
      operationId: generate_generated_scorers_generate_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerationRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerationResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Generate
      tags:
        - scorer
        - llm
  /generated-scorers/task-results/{task_result_id}:
    get:
      operationId: get_task_result_generated_scorers_task_results__task_result_id__get
      parameters:
        - in: path
          name: task_result_id
          required: true
          schema:
            format: uuid4
            title: Task Result Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratedScorerTaskResultResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Task Result
      tags:
        - scorer
        - llm
  /generated-scorers/validate:
    post:
      operationId: validate_generated_scorers_validate_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneratedScorerValidationRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratedScorerValidationResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Validate
      tags:
        - scorer
        - llm
  /generated-scorers/{generated_scorer_id}:
    delete:
      operationId: delete_generated_scorers__generated_scorer_id__delete
      parameters:
        - in: path
          name: generated_scorer_id
          required: true
          schema:
            format: uuid4
            title: Generated Scorer Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete
      tags:
        - scorer
        - llm
    get:
      operationId: get_generated_scorers__generated_scorer_id__get
      parameters:
        - in: path
          name: generated_scorer_id
          required: true
          schema:
            format: uuid4
            title: Generated Scorer Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratedScorerResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get
      tags:
        - scorer
        - llm
    patch:
      operationId: update_generated_scorers__generated_scorer_id__patch
      parameters:
        - in: path
          name: generated_scorer_id
          required: true
          schema:
            format: uuid4
            title: Generated Scorer Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGeneratedScorerRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratedScorerResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update
      tags:
        - scorer
        - llm
  /group_roles:
    get:
      operationId: get_group_roles_group_roles_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GroupRoleInfo"
                title: Response Get Group Roles Group Roles Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Group Roles
      tags:
        - groups
  /groups:
    get:
      operationId: list_groups_groups_get
      parameters:
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Groups
      tags:
        - groups
    post:
      operationId: create_group_groups_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupCreate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Group
      tags:
        - groups
  /groups/{group_id}:
    delete:
      operationId: delete_group_groups__group_id__delete
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Group
      tags:
        - groups
    get:
      operationId: get_group_groups__group_id__get
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Group
      tags:
        - groups
    patch:
      operationId: update_group_groups__group_id__patch
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Group
      tags:
        - groups
  /groups/{group_id}/members:
    get:
      operationId: list_group_members_groups__group_id__members_get
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupMembersResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Group Members
      tags:
        - groups
    post:
      operationId: add_user_to_group_groups__group_id__members_post
      parameters:
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/GroupMemberCreate"
              title: Body
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GroupMemberDB"
                title: Response Add User To Group Groups  Group Id  Members Post
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Add User To Group
      tags:
        - groups
  /groups/{group_id}/members/{user_id}:
    delete:
      operationId: delete_group_member_groups__group_id__members__user_id__delete
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Group Member
      tags:
        - groups
    patch:
      operationId: update_group_member_groups__group_id__members__user_id__patch
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupMemberUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupMemberDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Group Member
      tags:
        - groups
  /healthcheck:
    get:
      operationId: healthcheck_healthcheck_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthcheckResponse"
          description: Successful Response
      summary: Healthcheck
      tags:
        - health
  /integrations:
    get:
      description: List the created integrations for the requesting user.
      operationId: list_integrations_integrations_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/IntegrationDB"
                title: Response List Integrations Integrations Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Integrations
      tags:
        - integrations
  /integrations/anthropic:
    put:
      description: Create or update an Anthropic integration for this user from Galileo.
      operationId: create_or_update_integration_integrations_anthropic_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnthropicIntegrationCreate"
              examples:
                - token: my_secret_api_token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/available:
    get:
      description: List all of the available integrations to be created in Galileo.
      operationId: list_available_integrations_integrations_available_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailableIntegrations"
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Available Integrations
      tags:
        - integrations
  /integrations/aws_bedrock:
    put:
      description: Create or update an AWS integration for this user from Galileo.
      operationId: create_or_update_integration_integrations_aws_bedrock_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseAwsIntegrationCreate"
              examples:
                - credential_type: key_secret
                  region: us-west-2
                  token:
                    aws_access_key_id: AWSA46AWSAWSBEDR0C45K
                    aws_secret_access_key: sagasg2t0-9527@$s1ashsahfahfddsg
                - credential_type: assumed_role
                  region: eu-west-1
                  token:
                    aws_role_arn: arn:aws:iam::1234567901:role/AWSBedrockAccessRole
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/aws_sagemaker:
    put:
      description: Create or update an AWS integration for this user from Galileo.
      operationId: create_or_update_integration_integrations_aws_sagemaker_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AwsSageMakerIntegrationCreate"
              examples:
                - credential_type: key_secret
                  models:
                    - alias: aws_hello_world
                      completion_only: true
                      cost_by: tokens
                      formatting_tokens: 0
                      input_map:
                        prefix: ""
                        prompt: prompt
                        suffix: ""
                      input_price: 0.0
                      integration: aws_sagemaker
                      is_chat: false
                      name: huggingface-pytorch-inference-2024-02-29-14-53-51-829
                      output_price: 0.0
                      params_map:
                        model: model
                      provides_log_probs: false
                      response_prefix_tokens: 0
                      system_supported: false
                      token_limit: 4000
                  region: us-west-2
                  token:
                    aws_access_key_id: AWSA46AWSAWSBEDR0C45K
                    aws_secret_access_key: sagasg2t0-9527@$s1ashsahfahfddsg
                - credential_type: assumed_role
                  models: []
                  region: eu-west-1
                  token:
                    aws_role_arn: arn:aws:iam::1234567901:role/AWSSagemakerAccessRole
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/azure:
    put:
      description: Create or update an Azure integration for this user from Galileo.
      operationId: create_or_update_integration_integrations_azure_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AzureIntegrationCreate"
              examples:
                - available_deployments:
                    - id: id1
                      model: gpt-35-turbo
                    - id: id2
                      model: gpt-4o-mini
                  endpoint: https://example-proxy.rungalileo.io
                  proxy: true
                  token: my_secret_api_token
                - available_deployments:
                    - id: id1
                      model: gpt-35-turbo
                    - id: id2
                      model: gpt-4o-mini
                  endpoint: https://example-endpoint.openai.azure.com
                  token: my_secret_api_token
                - endpoint: https://example-endpoint.openai.azure.com
                  headers:
                    project_name: foo-bar
                    user_id: user@example.com
                  token: my_secret_api_token
                - endpoint: https://example-proxy.rungalileo.io
                  proxy: true
                  token: my_secret_api_token
                - endpoint: https://example-endpoint.openai.azure.com
                  token: my_secret_api_token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/databricks:
    put:
      description: Create or update a databricks integration for this user from Galileo.
      operationId: create_or_update_unity_catalog_integration_integrations_databricks_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabricksIntegrationCreate"
              examples:
                - hostname: https://dbc-00000000-0000.cloud.databricks.com
                  path: /sql/1.0/warehouses/a000000000000000
                  storage: true
                  token: my_secret_api_token
                - hostname: https://dbc-00000000-0000.cloud.databricks.com
                  llm: true
                  token: my_secret_api_token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Unity Catalog Integration
      tags:
        - integrations
  /integrations/databricks/catalogs:
    get:
      operationId: get_databricks_catalogs_integrations_databricks_catalogs_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title:
                  Response Get Databricks Catalogs Integrations Databricks Catalogs
                  Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Databricks Catalogs
      tags:
        - integrations
  /integrations/databricks/databases:
    get:
      operationId: get_databases_for_cluster_integrations_databricks_databases_get
      parameters:
        - in: query
          name: catalog
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Catalog
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title:
                  Response Get Databases For Cluster Integrations Databricks
                  Databases Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Databases For Cluster
      tags:
        - integrations
  /integrations/databricks/edits/export:
    post:
      description:
        "Exports the resulting dataframe after a series of edits to databricks
        delta lake.


        If overrides are provided, and the original edit had a task, the override
        MUST explicitly have a task set (typically

        the same task as the edit)"
      operationId: export_edits_databricks_integrations_databricks_edits_export_post
      parameters:
        - in: query
          name: ignore_conflicting_edits
          required: false
          schema:
            default: true
            title: Ignore Conflicting Edits
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabricksEditExportRequest"
              examples:
                - database_name: galileo_delta_db
                  edit_ids:
                    - your-edit-uuid-1
                    - your-edit-uuid-2
                  table_name: table_1
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabricksEditExportResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Edits Databricks
      tags:
        - integrations
        - integrations
        - edits
  /integrations/databricks/export:
    post:
      operationId: export_to_databricks_integrations_databricks_export_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabricksExportRequest"
              examples:
                - database_name: galileo_delta_db
                  project_id: "{uuid4}"
                  run_id: "{uuid4}"
                  split: training
                  table_name: table_1
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabricksExportResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export To Databricks
      tags:
        - integrations
  /integrations/databricks/unity-catalog/edits/export:
    post:
      operationId: export_edits_databricks_unity_catalog_integrations_databricks_unity_catalog_edits_export_post
      parameters:
        - in: query
          name: ignore_conflicting_edits
          required: false
          schema:
            default: true
            title: Ignore Conflicting Edits
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabricksUnityCatalogEditExportRequest"
              examples:
                - catalog_name: catalog0
                  edit_ids:
                    - your-edit-uuid-1
                    - your-edit-uuid-2
                  psl_content_file_name: data0.parquet
                  schema_name: schema0
                  table_name: table0
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabricksUnityCatalogExportEditsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Edits Databricks Unity Catalog
      tags:
        - integrations
        - integrations
        - edits
  /integrations/databricks/unity-catalog/export:
    post:
      operationId: export_to_databricks_unity_catalog_integrations_databricks_unity_catalog_export_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabricksExportRequest"
              examples:
                - catalog_name: catalog0
                  project_id: "{uuid4}"
                  psl_content_file_name: data0.parquet
                  run_id: "{uuid4}"
                  schema_name: schema0
                  split: training
                  table_name: table0
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabricksUnityCatalogExportResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export To Databricks Unity Catalog
      tags:
        - integrations
  /integrations/databricks/unity-catalog/sql:
    put:
      deprecated: true
      description: Create or update a databricks integration for this user from Galileo.
      operationId: create_or_update_unity_catalog_integration_integrations_databricks_unity_catalog_sql_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabricksIntegrationCreate"
              examples:
                - hostname: https://dbc-00000000-0000.cloud.databricks.com
                  path: /sql/1.0/warehouses/a000000000000000
                  storage: true
                  token: my_secret_api_token
                - hostname: https://dbc-00000000-0000.cloud.databricks.com
                  llm: true
                  token: my_secret_api_token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Unity Catalog Integration
      tags:
        - integrations
  /integrations/labelstudio:
    put:
      description: Create or update a labelstudio integration for this user from Galileo.
      operationId: create_or_update_integration_integrations_labelstudio_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelStudioIntegrationCreate"
              examples:
                - is_enterprise: false
                  token: my_secret_api_token
                  url: https://app.heartex.com
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/labelstudio/export:
    post:
      operationId: export_to_labelstudio_integrations_labelstudio_export_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelStudioExportRequest"
              examples:
                - project_id: "{uuid4}"
                  project_name: my_galileo_labelstudio_project
                  run_id: "{uuid4}"
                  split: training
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export To Labelstudio
      tags:
        - integrations
  /integrations/labelstudio/projects:
    get:
      operationId: get_labelstudio_projects_integrations_labelstudio_projects_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LabelStudioProject"
                title:
                  Response Get Labelstudio Projects Integrations Labelstudio
                  Projects Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Labelstudio Projects
      tags:
        - integrations
  /integrations/mistral:
    put:
      description: Create or update an Mistral integration for this user from Galileo.
      operationId: create_or_update_integration_integrations_mistral_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MistralIntegrationCreate"
              examples:
                - token: my_secret_api_token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/openai:
    put:
      description: Create or update an OpenAI integration for this user from Galileo.
      operationId: create_or_update_integration_integrations_openai_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenAIIntegrationCreate"
              examples:
                - token: my_secret_api_token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/vertex_ai:
    put:
      description: Create or update a Google Vertex AI integration for a user.
      operationId: create_or_update_integration_integrations_vertex_ai_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VertexAIIntegrationCreate"
              examples:
                - token:
                    '{"type": "service_account", "project_id": "project-id", "private_key_id":
                    "foo-bar", "private_key": "-----BEGIN RSA PRIVATE KEY-----\n                ...\n                -----END
                    RSA PRIVATE KEY-----", "client_email": "user@iam.gserviceaccount.com",
                    "client_id": "12353152646346", "auth_uri": "https://accounts.google.com/o/oauth2/auth",
                    "token_uri": "https://oauth2.googleapis.com/token", "auth_provider_x509_cert_url":
                    "https://www.googleapis.com/oauth2/v1/certs", "client_x509_cert_url":
                    "https://www.googleapis.com/robot/v1/metadata/x509/user%40iam.gserviceaccount.com",
                    "universe_domain": "googleapis.com"}'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/writer:
    put:
      description: Create or update a Writer integration for a user.
      operationId: create_or_update_integration_integrations_writer_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WriterIntegrationCreate"
              examples:
                - organization_id: "123456789"
                  token: my_secret_api_token
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update Integration
      tags:
        - integrations
  /integrations/{name}:
    delete:
      description: Delete the integration created by this user.
      operationId: delete_integration_integrations__name__delete
      parameters:
        - in: path
          name: name
          required: true
          schema:
            $ref: "#/components/schemas/IntegrationName"
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Integration
      tags:
        - integrations
    get:
      description: Gets the integration data formatted for the specified integration.
      operationId: get_integration_integrations__name__get
      parameters:
        - in: path
          name: name
          required: true
          schema:
            $ref: "#/components/schemas/IntegrationName"
      responses:
        "200":
          content:
            application/json:
              schema:
                discriminator:
                  mapping:
                    anthropic: "#/components/schemas/AnthropicIntegration"
                    aws_bedrock: "#/components/schemas/AwsBedrockIntegration"
                    aws_sagemaker: "#/components/schemas/AwsSageMakerIntegration"
                    azure: "#/components/schemas/AzureIntegration"
                    databricks: "#/components/schemas/DatabricksIntegration"
                    labelstudio: "#/components/schemas/LabelStudioIntegration"
                    mistral: "#/components/schemas/MistralIntegration"
                    openai: "#/components/schemas/OpenAIIntegration"
                    vertex_ai: "#/components/schemas/VertexAIIntegration"
                    writer: "#/components/schemas/WriterIntegration"
                  propertyName: name
                oneOf:
                  - $ref: "#/components/schemas/AwsBedrockIntegration"
                  - $ref: "#/components/schemas/AwsSageMakerIntegration"
                  - $ref: "#/components/schemas/AzureIntegration"
                  - $ref: "#/components/schemas/DatabricksIntegration"
                  - $ref: "#/components/schemas/LabelStudioIntegration"
                  - $ref: "#/components/schemas/OpenAIIntegration"
                  - $ref: "#/components/schemas/VertexAIIntegration"
                  - $ref: "#/components/schemas/WriterIntegration"
                  - $ref: "#/components/schemas/AnthropicIntegration"
                  - $ref: "#/components/schemas/MistralIntegration"
                title: Response Get Integration Integrations  Name  Get
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Integration
      tags:
        - integrations
  /integrations/{name}/status:
    get:
      description: Checks if the integration status is active or not.
      operationId: get_integration_status_integrations__name__status_get
      parameters:
        - in: path
          name: name
          required: true
          schema:
            $ref: "#/components/schemas/IntegrationName"
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                title:
                  Response Get Integration Status Integrations  Name  Status
                  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Integration Status
      tags:
        - integrations
  /invite_users:
    post:
      operationId: invite_users_invite_users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteUsersRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Invite Users
      tags:
        - users
  /jobs:
    post:
      operationId: create_job_jobs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateJobRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateJobResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Job
      tags:
        - jobs
  /jobs/{job_id}:
    get:
      description: Get a job by id.
      operationId: get_job_jobs__job_id__get
      parameters:
        - in: path
          name: job_id
          required: true
          schema:
            format: uuid4
            title: Job Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Job
      tags:
        - jobs
  /llm_integrations/{llm_integration}/models:
    get:
      description: Get the list of supported models for the LLM integration.
      operationId: get_available_models_llm_integrations__llm_integration__models_get
      parameters:
        - in: path
          name: llm_integration
          required: true
          schema:
            $ref: "#/components/schemas/LLMIntegration"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title:
                  Response Get Available Models Llm Integrations  Llm Integration  Models
                  Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Available Models
      tags:
        - llm_integrations
  /llm_integrations/{llm_integration}/scorer_models:
    get:
      description: Get the list of supported scorer models for the LLM integration.
      operationId: get_available_scorer_models_llm_integrations__llm_integration__scorer_models_get
      parameters:
        - in: path
          name: llm_integration
          required: true
          schema:
            $ref: "#/components/schemas/LLMIntegration"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title:
                  Response Get Available Scorer Models Llm Integrations  Llm
                  Integration  Scorer Models Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Available Scorer Models
      tags:
        - llm_integrations
  /login:
    post:
      operationId: login_email_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Body_login_email_login_post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Login Email
      tags:
        - auth
  /login/api_key:
    post:
      operationId: login_api_key_login_api_key_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyLoginRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Login Api Key
      tags:
        - auth
  /login/social:
    post:
      operationId: login_social_login_social_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SocialLoginRequest"
              examples:
                - id_token: token1234
                  provider: google
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Login Social
      tags:
        - auth
  /logout:
    post:
      operationId: logout_logout_post
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Logout
      tags:
        - auth
  /models:
    get:
      description:
        "Gets all models for a run :param project_id: project id :param
        run_id: run id :param db_read: database session

        :param current_user: current user."
      operationId: get_all_models_models_get
      parameters:
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TrainingModelResponse"
                title: Response Get All Models Models Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get All Models
      tags:
        - models
  /models/{model_id}:
    get:
      description:
        "Gets a model from the database and returns the presigned url to
        download it :param project_id: project id :param

        run_id: run id :param model_id: model id :param db_read: database session
        :param current_user: current user."
      operationId: get_model_endpoint_models__model_id__get
      parameters:
        - in: path
          name: model_id
          required: true
          schema:
            format: uuid4
            title: Model Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainingModelResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Model Endpoint
      tags:
        - models
  /observe/projects/{project_id}/workflows:
    post:
      description: Get workflows for a specific run in an Observe project.
      operationId: get_workflows_observe_projects__project_id__workflows_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: start_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: Start Time
        - in: query
          name: end_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: End Time
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetObserveWorkflowsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowsReadResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Workflows
      tags:
        - observe
  /observe/workflows:
    post:
      description: "Log workflows to an Observe project.


        Use this endpoint to log workflows to an Observe project. The request body
        should contain the

        `workflows` to be ingested.


        Additionally, specify the `project_id` or `project_name` to which the workflows
        should be ingested.

        If the project does not exist, it will be created. If the project exists,
        the workflows will be logged to it.

        If both `project_id` and `project_name` are provided, `project_id` will take
        precedence."
      operationId: log_workflows_observe_workflows_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowsIngestRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowsIngestResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Log Workflows
      tags:
        - observe
  /password_reset:
    post:
      description: "Reset a user's password.


        A password reset with a valid token should always verify the user. (See default
        of

        UserPasswordResetRequest.email_is_verified is True)"
      operationId: password_reset_password_reset_post
      parameters:
        - in: query
          name: reset_token
          required: true
          schema:
            title: Reset Token
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPasswordResetRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPasswordResetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Password Reset
      tags:
        - users
  /presigned_url:
    get:
      operationId: get_presigned_url_presigned_url_get
      parameters:
        - in: query
          name: api_url
          required: true
          schema:
            title: Api Url
            type: string
        - in: query
          name: method
          required: true
          schema:
            $ref: "#/components/schemas/Method"
        - in: query
          name: bucket_name
          required: true
          schema:
            title: Bucket Name
            type: string
        - in: query
          name: object_name
          required: true
          schema:
            title: Object Name
            type: string
        - in: query
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPresignedUrlResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Presigned Url
      tags:
        - auth
  /project/{project_id}/settings/scorers_config:
    get:
      operationId: get_scorers_config_project__project_id__settings_scorers_config_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScorersConfig"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Scorers Config
      tags:
        - project_settings
  /project_settings/{project_id}:
    put:
      operationId: update_project_settings_legacy_project_settings__project_id__put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompositeProjectSettings"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectSettingsDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Project Settings Legacy
      tags:
        - project_settings
  /projects:
    get:
      deprecated: true
      description: "Gets projects for a user.


        If provided, filters on project_name and project_type.


        DEPRECATED in favor of `get_projects_paginated`."
      operationId: get_projects_projects_get
      parameters:
        - in: query
          name: project_name
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Project Name
        - in: query
          name: type
          required: false
          schema:
            anyOf:
              - $ref: "#/components/schemas/ProjectType"
              - type: "null"
            title: Type
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectDB"
                title: Response Get Projects Projects Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Projects
      tags:
        - projects
    post:
      description: Create a new project.
      operationId: create_project_projects_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreate"
              examples:
                - name: my_first_project
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectCreateResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Project
      tags:
        - projects
  /projects/all:
    get:
      deprecated: true
      description:
        "Gets all public projects and all private projects that the user
        has access to.


        For Enterprise SaaS Clusters, this will return all projects in the cluster.


        DEPRECATED in favor of `get_projects_paginated`."
      operationId: get_all_projects_projects_all_get
      parameters:
        - in: query
          name: type
          required: false
          schema:
            anyOf:
              - $ref: "#/components/schemas/ProjectType"
              - type: "null"
            title: Type
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectDBThin"
                title: Response Get All Projects Projects All Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get All Projects
      tags:
        - projects
  /projects/count:
    post:
      description: Gets total count of projects for a user with applied filters.
      operationId: get_projects_count_projects_count_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCollectionParams"
              default:
                filters: []
                sort:
                  ascending: false
                  name: created_at
                  sort_type: column
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Get Projects Count Projects Count Post
                type: integer
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Projects Count
      tags:
        - projects
  /projects/paginated:
    post:
      description: "Gets projects for a user with pagination.


        If provided, filters on project_name and project_type."
      operationId: get_projects_paginated_projects_paginated_post
      parameters:
        - description: Actions to include in the 'permissions' field.
          in: query
          name: actions
          required: false
          schema:
            description: Actions to include in the 'permissions' field.
            items:
              $ref: "#/components/schemas/ProjectAction"
            title: Actions
            type: array
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCollectionParams"
              default:
                filters: []
                sort:
                  ascending: false
                  name: created_at
                  sort_type: column
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProjectsPaginatedResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Projects Paginated
      tags:
        - projects
  /projects/{project_id}:
    delete:
      description: "Deletes a project and all associated runs and objects.


        Any user with project access can delete a project.

        Note that `get_project_by_id` calls `user_can_access_project`."
      operationId: delete_project_projects__project_id__delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDeleteResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Project
      tags:
        - projects
    get:
      operationId: get_project_projects__project_id__get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project
      tags:
        - projects
    put:
      operationId: update_project_projects__project_id__put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdate"
              examples:
                - name: my_updated_project
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectUpdateResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Project
      tags:
        - projects
  /projects/{project_id}/alerts:
    get:
      operationId: list_alerts_by_project_projects__project_id__alerts_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAlertConfigurationsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Alerts By Project
      tags:
        - observe
  /projects/{project_id}/alerts/create:
    post:
      description: Create alert for llm-monitor.
      operationId: create_projects__project_id__alerts_create_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlertConfigurationRequest"
              examples:
                - conditions:
                    - aggregation: max
                      condition_type: metric/numeric/1
                      field: uncertainty
                      operator: lte
                      value: 0.3
                      window: 900
                  interval: 300
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertConfigurationResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create
      tags:
        - observe
  /projects/{project_id}/alerts/{monitor_alert_config_id}:
    delete:
      description: "Get all rows from monitor_records.


        Returns them in order of creation from newest to oldest."
      operationId: delete_alert_projects__project_id__alerts__monitor_alert_config_id__delete
      parameters:
        - in: path
          name: monitor_alert_config_id
          required: true
          schema:
            format: uuid4
            title: Monitor Alert Config Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertStatusResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Alert
      tags:
        - observe
    get:
      operationId: get_alert_by_id_projects__project_id__alerts__monitor_alert_config_id__get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: monitor_alert_config_id
          required: true
          schema:
            format: uuid4
            title: Monitor Alert Config Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertConfigurationResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Alert By Id
      tags:
        - observe
  /projects/{project_id}/alerts/{monitor_alert_config_id}/update:
    put:
      description: Create alert for llm-monitor.
      operationId: update_projects__project_id__alerts__monitor_alert_config_id__update_put
      parameters:
        - in: path
          name: monitor_alert_config_id
          required: true
          schema:
            format: uuid4
            title: Monitor Alert Config Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlertConfigurationRequest"
              examples:
                - conditions:
                    - aggregation: max
                      condition_type: metric/numeric/1
                      field: uncertainty
                      operator: lte
                      value: 0.3
                      window: 900
                  interval: 300
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertConfigurationResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update
      tags:
        - observe
  /projects/{project_id}/bookmark:
    delete:
      operationId: unbookmark_project_projects__project_id__bookmark_delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Unbookmark Project
      tags:
        - projects
        - user
    put:
      operationId: bookmark_project_projects__project_id__bookmark_put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Bookmark Project
      tags:
        - projects
        - user
  /projects/{project_id}/feedback/templates:
    get:
      operationId: list_feedback_templates_projects__project_id__feedback_templates_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FeedbackTemplateDB"
                title:
                  Response List Feedback Templates Projects  Project Id  Feedback
                  Templates Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Feedback Templates
      tags:
        - feedback
    post:
      operationId: create_feedback_template_projects__project_id__feedback_templates_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackTemplateCreate"
              examples:
                - constraints:
                    feedback_type: score
                    max: 10
                    min: 1
                  criteria: How creative was the response?
                  name: creativity
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackTemplateDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Feedback Template
      tags:
        - feedback
  /projects/{project_id}/feedback/templates/{template_id}:
    delete:
      operationId: delete_feedback_template_projects__project_id__feedback_templates__template_id__delete
      parameters:
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Feedback Template
      tags:
        - feedback
    get:
      operationId: get_feedback_template_projects__project_id__feedback_templates__template_id__get
      parameters:
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackTemplateDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Feedback Template
      tags:
        - feedback
    patch:
      operationId: update_feedback_template_projects__project_id__feedback_templates__template_id__patch
      parameters:
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackTemplateUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackTemplateDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Feedback Template
      tags:
        - feedback
  /projects/{project_id}/feedback/templates/{template_id}/nodes/{node_id}/rating:
    delete:
      operationId: delete_feedback_rating_observe_projects__project_id__feedback_templates__template_id__nodes__node_id__rating_delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: node_id
          required: true
          schema:
            format: uuid4
            title: Node Id
            type: string
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Feedback Rating Observe
      tags:
        - feedback
    get:
      operationId: get_feedback_rating_observe_projects__project_id__feedback_templates__template_id__nodes__node_id__rating_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: node_id
          required: true
          schema:
            format: uuid4
            title: Node Id
            type: string
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackRatingDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Feedback Rating Observe
      tags:
        - feedback
    put:
      description:
        Record a feedack rating for a specific sample in a run. For prompt
        chains, the index must be the root node.
      operationId: create_feedback_rating_observe_projects__project_id__feedback_templates__template_id__nodes__node_id__rating_put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: node_id
          required: true
          schema:
            format: uuid4
            title: Node Id
            type: string
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackRatingCreate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackRatingDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Feedback Rating Observe
      tags:
        - feedback
  /projects/{project_id}/groups:
    get:
      description: List the groups with which the project has been shared.
      operationId: list_group_project_collaborators_projects__project_id__groups_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupCollaboratorsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Group Project Collaborators
      tags:
        - projects
    post:
      description: Share a project with groups.
      operationId: create_group_project_collaborators_projects__project_id__groups_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/GroupCollaboratorCreate"
              title: Body
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GroupCollaborator"
                title:
                  Response Create Group Project Collaborators Projects  Project
                  Id  Groups Post
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Group Project Collaborators
      tags:
        - projects
  /projects/{project_id}/groups/{group_id}:
    delete:
      description: Remove a group's access to a project.
      operationId: delete_group_project_collaborator_projects__project_id__groups__group_id__delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Group Project Collaborator
      tags:
        - projects
    patch:
      description: Update the sharing permissions of a group on a project.
      operationId: update_group_project_collaborator_projects__project_id__groups__group_id__patch
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: group_id
          required: true
          schema:
            format: uuid4
            title: Group Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollaboratorUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupCollaborator"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Group Project Collaborator
      tags:
        - projects
  /projects/{project_id}/metric_critiques:
    post:
      operationId: create_metric_critiques_projects__project_id__metric_critiques_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMetricCritiquesRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MetricCritique"
                title:
                  Response Create Metric Critiques Projects  Project Id  Metric
                  Critiques Post
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Metric Critiques
      tags:
        - metric-critiques
  /projects/{project_id}/metric_critiques/{critique_id}:
    delete:
      operationId: delete_metric_critique_projects__project_id__metric_critiques__critique_id__delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: critique_id
          required: true
          schema:
            format: uuid4
            title: Critique Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Metric Critique
      tags:
        - metric-critiques
  /projects/{project_id}/models/all:
    get:
      description:
        "Gets all models for a run :param project_id: project id :param
        run_id: run id :param db_read: database

        session."
      operationId: get_all_models_for_project_projects__project_id__models_all_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TrainingModelResponse"
                title:
                  Response Get All Models For Project Projects  Project Id  Models
                  All Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get All Models For Project
      tags:
        - models
  /projects/{project_id}/observe/column_schema:
    get:
      description: Get column_schema for each metric.
      operationId: get_metrics_schema_endpoint_projects__project_id__observe_column_schema_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                title:
                  Response Get Metrics Schema Endpoint Projects  Project Id  Observe
                  Column Schema Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Metrics Schema Endpoint
      tags:
        - observe
  /projects/{project_id}/observe/delete:
    post:
      description: "Get all rows from monitor_records.


        Returns them in order of creation from newest to oldest."
      operationId: delete_rows_projects__project_id__observe_delete_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRowsRequestBody"
              examples:
                - filters:
                    - col_name: metrics
                      json_field: uncertainty
                      json_field_type: float
                      operator: gt
                      value: 0.8
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionRecordsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Rows
      tags:
        - observe
  /projects/{project_id}/observe/export:
    post:
      description: Export rows from monitor_records as jsonl or csv.
      operationId: export_rows_projects__project_id__observe_export_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: start_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: Start Time
        - in: query
          name: end_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: End Time
        - in: query
          name: chain_id
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Chain Id
        - in: query
          name: include_chains
          required: false
          schema:
            default: false
            title: Include Chains
            type: boolean
        - in: query
          name: test_set
          required: false
          schema:
            default: false
            title: Test Set
            type: boolean
        - in: query
          name: export_format
          required: false
          schema:
            $ref: "#/components/schemas/LLMExportFormat"
            default: jsonl
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRowsRequestBody"
              examples:
                - columns: []
                  filters:
                    - col_name: metrics
                      json_field: uncertainty
                      json_field_type: float
                      operator: gt
                      value: 0.8
                  sort_spec:
                    - col_name: metrics
                      json_field: cost
                      json_field_type: float
                      sort_dir: desc
      responses:
        "200":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Rows
      tags:
        - observe
  /projects/{project_id}/observe/export/databricks:
    post:
      description: Export rows from monitor_records to databricks.
      operationId: export_rows_databricks_projects__project_id__observe_export_databricks_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: start_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: Start Time
        - in: query
          name: end_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: End Time
        - in: query
          name: chain_id
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Chain Id
        - in: query
          name: test_set
          required: false
          schema:
            default: false
            title: Test Set
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabricksObserveExportRequest"
              examples:
                - columns: []
                  database_name: galileo_delta_db
                  filters:
                    - col_name: metrics
                      json_field: uncertainty
                      json_field_type: float
                      operator: gt
                      value: 0.8
                  sort_spec:
                    - col_name: metrics
                      json_field: cost
                      json_field_type: float
                      sort_dir: desc
                  table_name: table_1
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Rows Databricks
      tags:
        - observe
  /projects/{project_id}/observe/filter_options:
    get:
      description: Get filter options for the observe view.
      operationId: get_filter_options_projects__project_id__observe_filter_options_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: start_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: Start Time
        - in: query
          name: end_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: End Time
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterOptionsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Filter Options
      tags:
        - observe
  /projects/{project_id}/observe/ingest:
    post:
      description: Ingest batches of transaction records from llm-monitor.
      operationId: ingest_projects__project_id__observe_ingest_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRecordBatch"
              examples:
                - records:
                    - chain_id: <function uuid4 at 0x102e669e0>
                      created_at: "2023-08-07T15:14:30.519922"
                      input_text: This is a prompt.
                      latency_ms: 894
                      model: gpt-3.5-turbo
                      node_id: 10db6a27-9f5c-4784-a47b-cbb5de92eb92
                      num_input_tokens: 7
                      num_output_tokens: 8
                      num_total_tokens: 15
                      output_logprobs: {}
                      output_text: This is a response.
                      status_code: 200
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Ingest
      tags:
        - observe
  /projects/{project_id}/observe/integrations:
    get:
      description: Get the integrations for a project.
      operationId: get_project_integrations_projects__project_id__observe_integrations_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectIntegrationsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project Integrations
      tags:
        - observe
  /projects/{project_id}/observe/metric_critique_columns:
    get:
      description: Get the metadata for the columns in the observe view.
      operationId: get_metric_critique_columns_projects__project_id__observe_metric_critique_columns_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricCritiqueColumns"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Metric Critique Columns
      tags:
        - observe
  /projects/{project_id}/observe/metrics:
    post:
      operationId: get_metrics_projects__project_id__observe_metrics_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: start_time
          required: true
          schema:
            format: date-time
            title: Start Time
            type: string
        - in: query
          name: end_time
          required: true
          schema:
            format: date-time
            title: End Time
            type: string
        - in: query
          name: interval
          required: false
          schema:
            default: 5
            title: Interval
            type: integer
        - in: query
          name: group_by
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Group By
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FiltersRequestBody"
              examples:
                - filters:
                    - col_name: metrics
                      json_field: uncertainty
                      json_field_type: float
                      operator: gt
                      value: 0.8
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionMetricsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Metrics
      tags:
        - observe
  /projects/{project_id}/observe/rows:
    post:
      description: "Get all rows from monitor_records.


        Returns them in order of creation from newest to oldest."
      operationId: get_rows_projects__project_id__observe_rows_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: start_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: Start Time
        - in: query
          name: end_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: End Time
        - in: query
          name: chain_id
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Chain Id
        - in: query
          name: limit
          required: false
          schema:
            default: 50
            title: Limit
            type: integer
        - in: query
          name: offset
          required: false
          schema:
            default: 0
            title: Offset
            type: integer
        - in: query
          name: include_chains
          required: false
          schema:
            default: false
            title: Include Chains
            type: boolean
        - in: query
          name: return_col_schema
          required: false
          schema:
            default: true
            title: Return Col Schema
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRowsRequestBody"
              examples:
                - columns: []
                  filters:
                    - col_name: metrics
                      json_field: uncertainty
                      json_field_type: float
                      operator: gt
                      value: 0.8
                  sort_spec:
                    - col_name: metrics
                      json_field: cost
                      json_field_type: float
                      sort_dir: desc
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionRecordsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Rows
      tags:
        - observe
  /projects/{project_id}/observe/user_metadata:
    get:
      description: Get user_metadata fields for a project.
      operationId: get_user_metadata_endpoint_projects__project_id__observe_user_metadata_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title:
                  Response Get User Metadata Endpoint Projects  Project Id  Observe
                  User Metadata Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get User Metadata Endpoint
      tags:
        - observe
  /projects/{project_id}/observe/workflows-count:
    post:
      operationId: get_workflow_count_projects__project_id__observe_workflows_count_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FiltersRequestBody"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowCountResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Workflow Count
      tags:
        - observe
  /projects/{project_id}/prompt_datasets:
    get:
      deprecated: true
      operationId: list_prompt_datasets_projects__project_id__prompt_datasets_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPromptDatasetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Prompt Datasets
      tags:
        - datasets
    post:
      deprecated: true
      operationId: upload_prompt_evaluation_dataset_projects__project_id__prompt_datasets_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: format
          required: false
          schema:
            $ref: "#/components/schemas/DatasetFormat"
            default: csv
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_upload_prompt_evaluation_dataset_projects__project_id__prompt_datasets_post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptDatasetDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Upload Prompt Evaluation Dataset
      tags:
        - datasets
  /projects/{project_id}/prompt_datasets/{dataset_id}:
    delete:
      deprecated: true
      operationId: delete_prompt_dataset_projects__project_id__prompt_datasets__dataset_id__delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Prompt Dataset
      tags:
        - datasets
    get:
      deprecated: true
      operationId: download_prompt_dataset_projects__project_id__prompt_datasets__dataset_id__get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
      responses:
        "200":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Download Prompt Dataset
      tags:
        - datasets
    put:
      deprecated: true
      operationId: update_prompt_dataset_projects__project_id__prompt_datasets__dataset_id__put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: dataset_id
          required: true
          schema:
            format: uuid4
            title: Dataset Id
            type: string
        - in: query
          name: file_name
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: File Name
        - in: query
          name: num_rows
          required: false
          schema:
            anyOf:
              - type: integer
              - type: "null"
            title: Num Rows
        - in: query
          name: format
          required: false
          schema:
            $ref: "#/components/schemas/DatasetFormat"
            default: csv
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_update_prompt_dataset_projects__project_id__prompt_datasets__dataset_id__put"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptDatasetDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Prompt Dataset
      tags:
        - datasets
  /projects/{project_id}/prompts/runs:
    get:
      description: "Gets all prompt runs for a project.


        This is different from get_project_runs because it adds extra details that
        are needed for the prompt run page."
      operationId: get_project_prompt_runs_projects__project_id__prompts_runs_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: sort_by
          required: false
          schema:
            default: id
            title: Sort By
            type: string
        - in: query
          name: sort_ascending
          required: false
          schema:
            default: true
            title: Sort Ascending
            type: boolean
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRunsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project Prompt Runs
      tags:
        - runs
  /projects/{project_id}/prompts/runs/columnar:
    get:
      deprecated: true
      description: "Gets all prompt runs for a project in a columnar format.


        This is different from get_project_prompt_runs because it:

        1. Returns results in a columnar format instead of a key-value pair of arrays.

        2. Includes metadata about each of the columns.

        3. Includes mappings to each column's display names and super column names."
      operationId: get_project_prompt_runs_as_columns_projects__project_id__prompts_runs_columnar_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: sort_by
          required: false
          schema:
            default: id
            title: Sort By
            type: string
        - in: query
          name: sort_ascending
          required: false
          schema:
            default: true
            title: Sort Ascending
            type: boolean
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRunColumnsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project Prompt Runs As Columns
      tags:
        - runs
    post:
      description: "Gets all prompt runs for a project in a columnar format.


        This is different from get_project_prompt_runs because it:

        1. Returns results in a columnar format instead of a key-value pair of arrays.

        2. Includes metadata about each of the columns.

        3. Includes mappings to each column's display names and super column names."
      operationId: get_project_prompt_runs_as_columns_with_filters_projects__project_id__prompts_runs_columnar_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: sort_by
          required: false
          schema:
            default: id
            title: Sort By
            type: string
        - in: query
          name: sort_ascending
          required: false
          schema:
            default: true
            title: Sort Ascending
            type: boolean
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptFilterParams"
              default:
                filters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRunColumnsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project Prompt Runs As Columns With Filters
      tags:
        - runs
  /projects/{project_id}/prompts/runs/{run_id}:
    get:
      deprecated: true
      description: "Gets a specific prompt run for the project.


        This is different from get_project_runs because it adds extra details that
        are needed for the prompt run page."
      operationId: get_prompt_run_projects__project_id__prompts_runs__run_id__get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRun"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Prompt Run
      tags:
        - runs
  /projects/{project_id}/runs:
    delete:
      description: "Deletes runs by their ids.


        Only runs within the same project can be deleted."
      operationId: delete_runs_projects__project_id__runs_delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRunsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRunsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Runs
      tags:
        - runs
    get:
      description: "Gets all runs for a project.


        If a run_name is provided, gets the run with that name, or []"
      operationId: get_project_runs_projects__project_id__runs_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: run_name
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Run Name
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RunDB"
                title: Response Get Project Runs Projects  Project Id  Runs Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project Runs
      tags:
        - runs
    post:
      operationId: create_run_projects__project_id__runs_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunCreate"
              examples:
                - name: my_first_run
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRunResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Run
      tags:
        - runs
  /projects/{project_id}/runs/prompts/rows/columnar:
    get:
      description:
        Given a list of runs with the same inputs, output the indices of
        each sample in each run.
      operationId: get_multi_run_sample_ids_projects__project_id__runs_prompts_rows_columnar_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: run_ids
          required: true
          schema:
            items:
              format: uuid4
              type: string
            minItems: 2
            title: Run Ids
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptSampleIDs"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Multi Run Sample Ids
      tags:
        - data
        - prompts
        - rows
    post:
      description:
        Given run_ids with their corresponding row ids, retrieve the samples
        for those row_ids.
      operationId: get_multi_run_samples_for_row_ids_projects__project_id__runs_prompts_rows_columnar_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                type: integer
              minProperties: 2
              propertyNames:
                format: uuid4
              title: Row Ids
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/GetPromptRowsColumnarResponse"
                propertyNames:
                  format: uuid4
                title:
                  Response Get Multi Run Samples For Row Ids Projects  Project
                  Id  Runs Prompts Rows Columnar Post
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Multi Run Samples For Row Ids
      tags:
        - data
        - prompts
        - rows
  /projects/{project_id}/runs/{run_id}:
    delete:
      operationId: delete_run_projects__project_id__runs__run_id__delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRunResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Run
      tags:
        - runs
    get:
      operationId: get_run_projects__project_id__runs__run_id__get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Run
      tags:
        - runs
    put:
      operationId: update_run_projects__project_id__runs__run_id__put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunUpdateRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRunResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Run
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/chains/ingest:
    post:
      operationId: ingest_prompt_chain_run_projects__project_id__runs__run_id__chains_ingest_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptChainIngestRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptChainIngestResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Ingest Prompt Chain Run
      tags:
        - prompts
        - chains
  /projects/{project_id}/runs/{run_id}/chains/ingest/batch:
    post:
      operationId: ingest_batch_projects__project_id__runs__run_id__chains_ingest_batch_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptChainIngestBatchRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptChainIngestBatchResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Ingest Batch
      tags:
        - prompts
        - chains
  /projects/{project_id}/runs/{run_id}/chains/{chain_id}:
    get:
      operationId: get_prompt_chain_rows_projects__project_id__runs__run_id__chains__chain_id__get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: chain_id
          required: true
          schema:
            format: uuid4
            title: Chain Id
            type: string
        - in: query
          name: task_type
          required: false
          schema:
            $ref: "#/components/schemas/TaskType"
            default: 12
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRowsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Prompt Chain Rows
      tags:
        - data
        - prompts
        - rows
  /projects/{project_id}/runs/{run_id}/features/columns:
    get:
      description:
        "Lists the names of the features for a given project_id/run_id.


        This endpoint is for tabular data only."
      operationId: list_feature_columns_projects__project_id__runs__run_id__features_columns_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureColumnsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Feature Columns
      tags:
        - features
  /projects/{project_id}/runs/{run_id}/feedback/templates/{template_id}/index/{index}/rating:
    delete:
      operationId: delete_feedback_rating_projects__project_id__runs__run_id__feedback_templates__template_id__index__index__rating_delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
        - in: path
          name: index
          required: true
          schema:
            title: Index
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Feedback Rating
      tags:
        - feedback
    get:
      operationId: get_feedback_rating_projects__project_id__runs__run_id__feedback_templates__template_id__index__index__rating_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: index
          required: true
          schema:
            title: Index
            type: integer
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackRatingDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Feedback Rating
      tags:
        - feedback
    put:
      description:
        Record a feedack rating for a specific sample in a run. For prompt
        chains, the index must be the root node.
      operationId: create_feedback_rating_projects__project_id__runs__run_id__feedback_templates__template_id__index__index__rating_put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: index
          required: true
          schema:
            title: Index
            type: integer
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackRatingCreate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackRatingDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Feedback Rating
      tags:
        - feedback
  /projects/{project_id}/runs/{run_id}/inference_names:
    get:
      description: "Gets logged inference names for a given project_id/run_id.


        If no inference names are logged, this will return an empty list"
      operationId: get_run_inference_names_projects__project_id__runs__run_id__inference_names_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InferenceNamesResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Run Inference Names
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/jobs:
    get:
      description: "Get all jobs by for a project and run.


        Returns them in order of creation from newest to oldest."
      operationId: get_jobs_for_project_run_projects__project_id__runs__run_id__jobs_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: query
          name: status
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Status
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/JobDB"
                title:
                  Response Get Jobs For Project Run Projects  Project Id  Runs  Run
                  Id  Jobs Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Jobs For Project Run
      tags:
        - jobs
  /projects/{project_id}/runs/{run_id}/jobs/latest:
    get:
      description: Returns the most recently updated job for a run.
      operationId: get_latest_job_for_project_run_projects__project_id__runs__run_id__jobs_latest_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/JobDB"
                  - type: "null"
                title:
                  Response Get Latest Job For Project Run Projects  Project Id  Runs  Run
                  Id  Jobs Latest Get
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Latest Job For Project Run
      tags:
        - jobs
  /projects/{project_id}/runs/{run_id}/labels:
    get:
      description: "Gets labels for a given project_id/run_id.


        Split is not required because labels are the same across splits. If this is
        a multi-label run, a task is required,

        otherwise it is not expected"
      operationId: get_run_labels_projects__project_id__runs__run_id__labels_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: query
          name: task
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Task
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Run Labels
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/link:
    get:
      operationId: get_run_link_projects__project_id__runs__run_id__link_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunLinkResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Run Link
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/metrics:
    get:
      description: "List metrics for a run.


        Optionally provide a key to narrow the search"
      operationId: get_metrics_for_run_projects__project_id__runs__run_id__metrics_get
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: key
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Key
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RunMetricDB"
                title:
                  Response Get Metrics For Run Projects  Project Id  Runs  Run
                  Id  Metrics Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Metrics For Run
      tags:
        - runs
    put:
      description: Sets or updates a metric for a run.
      operationId: set_metric_for_run_projects__project_id__runs__run_id__metrics_put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunMetricCreateRequest"
              examples:
                - epoch: 0
                  extra:
                    cool: beans
                  key: train-acc
                  value: 0.8
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunMetricDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Set Metric For Run
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/model:
    get:
      description:
        "Gets a model from the database and returns the presigned url to
        download it :param run_id: run id :param db_read:


        database session."
      operationId: get_model_by_run_projects__project_id__runs__run_id__model_get
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainingModelResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Model By Run
      tags:
        - models
    post:
      description:
        "Uploads a model to the object store and creates a model record
        in the database :param project_id: project id

        :param run_id: run id :param validation_request: model upload request."
      operationId: upload_model_projects__project_id__runs__run_id__model_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UploadModel"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadModelResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Upload Model
      tags:
        - models
  /projects/{project_id}/runs/{run_id}/prompts/alerts:
    get:
      operationId: list_evaluate_alerts_projects__project_id__runs__run_id__prompts_alerts_get
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EvaluateAlertDB"
                title:
                  Response List Evaluate Alerts Projects  Project Id  Runs  Run
                  Id  Prompts Alerts Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Evaluate Alerts
      tags:
        - evaluate-alerts
  /projects/{project_id}/runs/{run_id}/prompts/export_prompt_dataset:
    get:
      deprecated: true
      operationId: export_prompt_dataset_projects__project_id__runs__run_id__prompts_export_prompt_dataset_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: query
          name: export_format
          required: false
          schema:
            $ref: "#/components/schemas/LLMExportFormat"
            default: csv
        - in: query
          name: include_chains
          required: false
          schema:
            default: true
            title: Include Chains
            type: boolean
        - in: query
          name: columns
          required: false
          schema:
            items:
              type: string
            title: Columns
            type: array
        - in: query
          name: inputs
          required: false
          schema:
            default: true
            title: Inputs
            type: boolean
        - in: query
          name: prompts
          required: false
          schema:
            default: true
            title: Prompts
            type: boolean
        - in: query
          name: responses
          required: false
          schema:
            default: true
            title: Responses
            type: boolean
        - in: query
          name: metrics
          required: false
          schema:
            default: true
            title: Metrics
            type: boolean
      responses:
        "200":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Prompt Dataset
      tags:
        - data
        - prompts
        - rows
  /projects/{project_id}/runs/{run_id}/prompts/insights/metrics:
    post:
      operationId: get_metric_insights_with_filters_projects__project_id__runs__run_id__prompts_insights_metrics_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptFilterParams"
              default:
                filters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MetricInsight"
                title:
                  Response Get Metric Insights With Filters Projects  Project
                  Id  Runs  Run Id  Prompts Insights Metrics Post
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Metric Insights With Filters
      tags:
        - data
        - prompts
        - insights
  /projects/{project_id}/runs/{run_id}/prompts/metrics:
    get:
      operationId: get_prompt_aggregate_metrics_as_singleton_columns_projects__project_id__runs__run_id__prompts_metrics_get
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRunColumnsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Prompt Aggregate Metrics As Singleton Columns
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/prompts/rows:
    get:
      deprecated: true
      operationId: get_rows_projects__project_id__runs__run_id__prompts_rows_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: query
          name: task_type
          required: false
          schema:
            $ref: "#/components/schemas/TaskType"
            default: 7
        - in: query
          name: sort_by
          required: false
          schema:
            default: _id
            title: Sort By
            type: string
        - in: query
          name: sort_ascending
          required: false
          schema:
            default: true
            title: Sort Ascending
            type: boolean
        - in: query
          name: text_column
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Text Column
        - in: query
          name: text_pattern
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Text Pattern
        - in: query
          name: regex
          required: false
          schema:
            default: false
            title: Regex
            type: boolean
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRowsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Rows
      tags:
        - data
        - prompts
        - rows
  /projects/{project_id}/runs/{run_id}/prompts/rows/chains/{chain_id}/columnar:
    get:
      operationId: get_chain_as_columns_projects__project_id__runs__run_id__prompts_rows_chains__chain_id__columnar_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: chain_id
          required: true
          schema:
            format: uuid
            title: Chain Id
            type: string
        - in: query
          name: root
          required: false
          schema:
            default: false
            title: Root
            type: boolean
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRowsColumnarResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Chain As Columns
      tags:
        - data
        - prompts
        - rows
  /projects/{project_id}/runs/{run_id}/prompts/rows/columnar:
    post:
      operationId: get_rows_as_columns_with_filters_projects__project_id__runs__run_id__prompts_rows_columnar_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: query
          name: sort_by
          required: false
          schema:
            default: _id
            title: Sort By
            type: string
        - in: query
          name: sort_ascending
          required: false
          schema:
            default: true
            title: Sort Ascending
            type: boolean
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptFilterParams"
              default:
                filters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRowsColumnarResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Rows As Columns With Filters
      tags:
        - data
        - prompts
        - rows
  /projects/{project_id}/runs/{run_id}/prompts/rows/{row_id}/columnar:
    get:
      operationId: get_row_as_column_projects__project_id__runs__run_id__prompts_rows__row_id__columnar_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: row_id
          required: true
          schema:
            title: Row Id
            type: integer
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPromptRowsColumnarResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Row As Column
      tags:
        - data
        - prompts
        - rows
  /projects/{project_id}/runs/{run_id}/prompts/scorers/{scorer_name}:
    put:
      operationId: put_score_projects__project_id__runs__run_id__prompts_scorers__scorer_name__put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: scorer_name
          required: true
          schema:
            title: Scorer Name
            type: string
        - in: query
          name: monitor_batch_id
          required: false
          schema:
            anyOf:
              - format: uuid4
                type: string
              - type: "null"
            title: Monitor Batch Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutPromptScoreRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutPromptScoreResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Put Score
      tags:
        - prompts
        - models
        - integrations
  /projects/{project_id}/runs/{run_id}/ratings:
    post:
      description: Record multiple feedback ratings
      operationId: apply_bulk_feedback_projects__project_id__runs__run_id__ratings_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkFeedbackRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BulkFeedbackRatingStatus"
                title:
                  Response Apply Bulk Feedback Projects  Project Id  Runs  Run
                  Id  Ratings Post
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Apply Bulk Feedback
      tags:
        - feedback
  /projects/{project_id}/runs/{run_id}/scorer-settings:
    get:
      operationId: get_settings_projects__project_id__runs__run_id__scorer_settings_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunScorerSettingsRequest"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Settings
      tags:
        - run_scorer_settings
    post:
      operationId: upsert_scorers_config_projects__project_id__runs__run_id__scorer_settings_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunScorerSettingsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunScorerSettingsRequest"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Upsert Scorers Config
      tags:
        - run_scorer_settings
  /projects/{project_id}/runs/{run_id}/split/{split}/edits:
    get:
      description: "Gets all edits in a project/run/split.


        :param project_id: project_id :param run_id: run_id :param split: split :param
        include_exported: Whether to also

        query exported (past) edits. Default True. If True, return will include historical
        edits that have already been

        exported"
      operationId: get_run_edits_projects__project_id__runs__run_id__split__split__edits_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Inference Name
        - in: query
          name: include_exported
          required: false
          schema:
            default: true
            title: Include Exported
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EditGetResponse"
                title:
                  Response Get Run Edits Projects  Project Id  Runs  Run Id  Split  Split  Edits
                  Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Run Edits
      tags:
        - edits
    post:
      description: "Creates a Edit.


        If setting sample_ids, the IDs must exist in the project/run/split. If setting
        filter, use the same filter params as

        used in /insights/summary


        **Cannot set both sample_ids and filter, must use only one.**


        If in a run type that has tasks (see multi-label runs) you must set a task
        as part of the body."
      operationId: create_edit_projects__project_id__runs__run_id__split__split__edits_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Inference Name
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCreateRequest"
              examples:
                - filter:
                    likely_mislabeled: "true"
                  note: Note for my edit!
                  sample_ids:
                    - 2
                    - 5
                    - 7
                    - 4
                    - 1
                    - 99
                    - 234
                    - 1152
                    - 3435
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditCreateResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Edit
      tags:
        - edits
  /projects/{project_id}/runs/{run_id}/split/{split}/edits/content:
    get:
      description: "Gets the data for all edits in a run.


        Equivalent logic to /edits/edit_id/content except for all edits in a run"
      operationId: get_edit_contents_for_run_projects__project_id__runs__run_id__split__split__edits_content_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Inference Name
        - in: query
          name: include_exported
          required: false
          schema:
            default: true
            title: Include Exported
            type: boolean
        - in: query
          name: page_num
          required: false
          schema:
            default: 0
            title: Page Num
            type: integer
        - in: query
          name: meta_cols
          required: false
          schema:
            anyOf:
              - items:
                  type: string
                type: array
              - type: "null"
            title: Meta Cols
        - in: query
          name: text_pat
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Text Pat
        - in: query
          name: regex
          required: false
          schema:
            anyOf:
              - type: boolean
              - type: "null"
            title: Regex
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EditContent"
                title:
                  Response Get Edit Contents For Run Projects  Project Id  Runs  Run
                  Id  Split  Split  Edits Content Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Edit Contents For Run
      tags:
        - edits
  /projects/{project_id}/runs/{run_id}/split/{split}/edits/exports:
    get:
      description: "Gets all exported edits from a project/run/split.


        Returns the id, edit_id, time of export, and user id that made the export"
      operationId: get_edits_exports_projects__project_id__runs__run_id__split__split__edits_exports_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/EditExportDB"
                title:
                  Response Get Edits Exports Projects  Project Id  Runs  Run
                  Id  Split  Split  Edits Exports Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Edits Exports
      tags:
        - edits
  /projects/{project_id}/runs/{run_id}/split/{split}/edits/labels:
    get:
      description:
        "Returns any newly created labels for the edits within a run/split.


        Newly created labels are those that were created via the `create_new_label`
        action"
      operationId: get_new_labels_for_run_edits_projects__project_id__runs__run_id__split__split__edits_labels_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title:
                  Response Get New Labels For Run Edits Projects  Project Id  Runs  Run
                  Id  Split  Split  Edits Labels Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get New Labels For Run Edits
      tags:
        - edits
  /projects/{project_id}/runs/{run_id}/split/{split}/embeddings:
    post:
      description:
        "Get all embedding data for 500k (or otherwise requested) data
        points.


        This will take a random sample of the dataset. It exports the result as a
        csv

        in order to reduce request size and response latency (as results can be large)

        This will return:

        * id

        * gold (index)

        * prediction (index)

        * data quality

        * text_sample

        * x coordinate

        * y coordinate

        ** any metadata columns explicitly requested


        Set data_view=true to return data embeddings instead of model embeddings.
        If

        data embeddings are not available, an exception will be thrown


        Set use_seed=false for random batches of embeddings on every response. This
        is

        useful for batching, but should remain true if you are requesting a single
        set

        of embeddings. If you are returning all embeddings, this parameter is useless"
      operationId: get_embeddings_projects__project_id__runs__run_id__split__split__embeddings_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
        - in: query
          name: data_view
          required: false
          schema:
            default: false
            title: Data View
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmbeddingRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    text_pat: the
        required: true
      responses:
        "200":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Embeddings
      tags:
        - embeddings
  /projects/{project_id}/runs/{run_id}/split/{split}/embeddings/available:
    get:
      description:
        Returns whether or not model embeddings are available for this
        run/split.
      operationId: has_embeddings_projects__project_id__runs__run_id__split__split__embeddings_available_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HasEmbeddingsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Has Embeddings
      tags:
        - embeddings
  /projects/{project_id}/runs/{run_id}/split/{split}/embeddings/point:
    post:
      description:
        'Get all data (including text) for requested embedding points.


        Select either via point IDs, or by selecting a Circle around them (providing

        an x, y, and radius (eg "circle": {"x": 0.1, "y": 0.2, "radius": 0.5}).


        Only points or a circle are allowed, not both. Max 15 points per request.

        This will return:

        * id

        * gold (string) (for non inference)

        * prediction (string)

        * dep (for non inference)

        * confidence

        * text_sample

        * x coordinate

        * y coordinate


        Set data_view=true to return data embeddings instead of model embeddings.
        If

        data embeddings are not available, an error will be thrown'
      operationId: get_point_embeddings_projects__project_id__runs__run_id__split__split__embeddings_point_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
        - in: query
          name: data_view
          required: false
          schema:
            default: false
            title: Data View
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmbeddingPointRequest"
              examples:
                - ids:
                    - 1
                    - 2
                    - 5
                    - 7
                    - 3
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmbeddingPointResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Point Embeddings
      tags:
        - embeddings
  /projects/{project_id}/runs/{run_id}/split/{split}/epochs:
    get:
      description: Gets the number of training epochs for the run.
      operationId: get_num_epochs_for_run_projects__project_id__runs__run_id__split__split__epochs_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: integer
                title:
                  Response Get Num Epochs For Run Projects  Project Id  Runs  Run
                  Id  Split  Split  Epochs Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Num Epochs For Run
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/split/{split}/export:
    post:
      operationId: export_data_projects__project_id__runs__run_id__split__split__export_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportRequest"
              examples:
                - all_but: false
                  col_mapping:
                    text: Sentence
                  filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    text_pat: the
                  include_cols:
                    - id
                    - text
                    - gold
                    - pred
                  include_emb: false
        required: true
      responses:
        "200":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Data
      tags:
        - export
  /projects/{project_id}/runs/{run_id}/split/{split}/export/remote:
    post:
      operationId: export_data_remote_projects__project_id__runs__run_id__split__split__export_remote_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoteExportRequest"
              examples:
                - export_to: s3
                  filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteExportResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Export Data Remote
      tags:
        - export
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/alerts:
    get:
      description: "Gets alerts for project/run/split.


        Optionally gets dismissed cards as well"
      operationId: get_alerts_for_run_projects__project_id__runs__run_id__split__split__insights_alerts_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
        - in: query
          name: include_dismissed
          required: false
          schema:
            default: false
            title: Include Dismissed
            type: boolean
        - in: query
          name: map_threshold
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Map Threshold
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/XRayCardDB"
                title:
                  Response Get Alerts For Run Projects  Project Id  Runs  Run
                  Id  Split  Split  Insights Alerts Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Alerts For Run
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/alerts/{alert_id}:
    delete:
      description:
        "Marks an alert as dismissed. Dismissed alerts wont be queries
        by the GET.


        This is the new name for xray. After some deprecation time we will rename
        everything"
      operationId: dismiss_alert_projects__project_id__runs__run_id__split__split__insights_alerts__alert_id__delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: path
          name: alert_id
          required: true
          schema:
            format: uuid4
            title: Alert Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Dismiss Alert
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/cartograph_clusters:
    post:
      description: Get information about the Cartograph clusters found for a split.
      operationId: get_cartograph_clusters_for_split_projects__project_id__runs__run_id__split__split__insights_cartograph_clusters_post
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartographClusterResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Cartograph Clusters For Split
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/cbo_clusters:
    post:
      deprecated: true
      description:
        "Returns the list of available CBO (class boundary overlap) clusters
        for the.


        dataframe given some (or no) filters.


        The clusters are returned as a list of CBOCluster in order of num_samples
        descending"
      operationId: get_cbo_clusters_for_split_projects__project_id__runs__run_id__split__split__insights_cbo_clusters_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CBOClusterRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CBOClusterResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Cbo Clusters For Split
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/charts/correlation:
    post:
      description: "Fetches data to populate a chart on the UI.


        Dataframe given some (or no) filters.


        Available charts are:

        - correlation matrix (tabular data)

        - feature pairwise accuracy matrix (tabular data), to come..."
      operationId: get_correlation_matrix_chart_projects__project_id__runs__run_id__split__split__insights_charts_correlation_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InsightChartRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsightChartResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Correlation Matrix Chart
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/co_occurrence:
    post:
      description: "[MLTC ONLY] This route calculates label co-occurrence across tasks."
      operationId: get_label_co_occurrence_projects__project_id__runs__run_id__split__split__insights_co_occurrence_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
        - in: query
          name: threshold
          required: false
          schema:
            default: 0.3
            title: Threshold
            type: number
        - in: query
          name: top_n
          required: false
          schema:
            default: 5
            title: Top N
            type: integer
        - in: query
          name: starting_label
          required: false
          schema:
            default: ""
            title: Starting Label
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricsRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultiLabelCoOccurrence"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Label Co Occurrence
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/communities:
    post:
      description: Returns the list of available Communities (class confusions)
      operationId: get_communities_for_split_projects__project_id__runs__run_id__split__split__insights_communities_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CommunityResponse"
                title:
                  Response Get Communities For Split Projects  Project Id  Runs  Run
                  Id  Split  Split  Insights Communities Post
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Communities For Split
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/distribution:
    post:
      description:
        "Calculates density distribution / histogram for a numeric column.\n\
        \nArgs:\n    project_id\n    run_id\n    split\n    inference_name (bool,\
        \ default \"\"): Optional inference name. Required if split\n        is inference\n\
        \    current_user (User, optional): The current user making the HTTP request.\n\
        \        Defaults to Depends(authentication_service.current_user).\n\n   \
        \ distribution_request (DistributionRequest):\n    In request body:\n    col:\
        \ Required. The column to calculate distribution on\n    nbins: Number of\
        \ bins for the distribution. Default 20\n    limit_min: Minimum value for\
        \ the limit of the dist. Default to min of column\n    limit_max: Maximum\
        \ value for the limit of the dist. Default to min of column\n    Inherits\
        \ from ContentRequest.\n        - Optional filters for the request\n\nReturns:\n\
        \    Distribution"
      operationId: get_column_distribution_projects__project_id__runs__run_id__split__split__insights_distribution_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DistributionRequest"
              examples:
                - col: confidence
                  filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
                  include_metrics: false
                  nbins: 20
                  remove_outliers: false
                  task: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Distribution"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Column Distribution
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/errors:
    get:
      description: Get the available errors for a run (if any)
      operationId: get_errors_projects__project_id__runs__run_id__split__split__insights_errors_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title:
                  Response Get Errors Projects  Project Id  Runs  Run Id  Split  Split  Insights
                  Errors Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Errors
      tags:
        - insights
    post:
      description: "Returns the counts of errors, per error type.


        Currently NER and OD support"
      operationId: get_error_counts_projects__project_id__runs__run_id__split__split__insights_errors_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BarChart"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Error Counts
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/errors/{error_name}/distribution:
    post:
      description: Returns the breakdown of a given error per unique column.
      operationId: get_error_distribution_for_column_projects__project_id__runs__run_id__split__split__insights_errors__error_name__distribution_post
      parameters:
        - in: path
          name: error_name
          required: true
          schema:
            title: Error Name
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: column_name
          required: false
          schema:
            default: class
            title: Column Name
            type: string
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDistribution"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Error Distribution For Column
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/groupby:
    post:
      description:
        "Calculates statistics for a particular categorical groupby column.\n\
        \nCalculates f1, precision, recall, DEP (if applicable), confidence (if applicable),\n\
        and count, for each group in the groupby column.\n\nArgs:\n    project_id\n\
        \    run_id\n    split\n    groupby_col: Required query param. The column\
        \ to calculate statistics on\n    current_user (User, optional): The current\
        \ user making the HTTP request.\n        Defaults to Depends(authentication_service.current_user).\n\
        \    inference_name (bool, default \"\"): Optional inference name. Required\
        \ if split\n        is inference\n    groupby_request (ContentRequest, optional):\
        \ See ContentRequest. Optional filters\n    for the request\n\nReturns:\n\
        \    GroupByMetrics"
      operationId: get_groupby_statistics_projects__project_id__runs__run_id__split__split__insights_groupby_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: groupby_col
          required: true
          schema:
            title: Groupby Col
            type: string
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
                  task: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupByMetrics"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Groupby Statistics
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/ids:
    post:
      description:
        "Gets ids from a given filter.\n\nRequest params should match the\
        \ /summary request\n\nReturns:\n    List[int]"
      operationId: get_insight_ids_projects__project_id__runs__run_id__split__split__insights_ids_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SummaryIDRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
                  hard_easy_threshold: true
                  include_emb: true
                  sort_ascending: false
                  sort_by: data_error_potential
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SummaryIDResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Insight Ids
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/map:
    post:
      description:
        "[OD ONLY] Calculates mean Average Precision for the (potentially
        filtered) df.


        Also includes the errors and their scores for the insights chart. The

        `map_threshold` defaults to 0.5, but can be changed in the ContentRequest"
      operationId: get_map_for_run_projects__project_id__runs__run_id__split__split__insights_map_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
                  map_threshold: 0.5
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MAPResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Map For Run
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/metrics:
    post:
      description:
        "Calculates f1, precision, and recall for a run/split given a set
        of filters.


        :param macro: Whether to macro average or weighted average metrics.     Default
        False (weighted) :param

        metrics_request: Filters to pass in before calculating metrics"
      operationId: get_model_metrics_projects__project_id__runs__run_id__split__split__insights_metrics_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
        - in: query
          name: macro
          required: false
          schema:
            default: false
            title: Macro
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricsRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Model Metrics
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/metrics/tasks:
    post:
      description: "[MLTC ONLY] This route calculates the overall F1 score per task."
      operationId: get_task_metrics_projects__project_id__runs__run_id__split__split__insights_metrics_tasks_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
        - in: query
          name: macro
          required: false
          schema:
            default: false
            title: Macro
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricsRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultiLabelTaskMetrics"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Task Metrics
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/percentage/sample:
    post:
      description:
        "Gets the percentage of the current filter against the original
        dataframe.


        Use this route if you just need a percentage without calculating all summary
        stats"
      operationId: get_percentage_projects__project_id__runs__run_id__split__split__insights_percentage_sample_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FilterPercentageRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FilterPercentageResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Percentage
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/rows:
    post:
      description:
        "Returns rows of data for the run/split with optional filters applied.\n\
        \nAlso responds if there is a next page available (more rows)\n[MLTC] - A\
        \ task must be provided\n[OD] - A default map_threshold is provided at 0.5.\
        \ This can be changed in the body\n    of the request, and will result in\
        \ different error values for each returned row"
      operationId: get_data_rows_projects__project_id__runs__run_id__split__split__insights_rows_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SummaryRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
                  sort_ascending: false
                  sort_by: data_error_potential
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataRows"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Data Rows
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/semseg/metrics:
    post:
      description:
        "[Sem Seg ONLY] Calculates mean and boundary IoU for the (filtered)
        df."
      operationId: get_segmentation_metrics_for_run_projects__project_id__runs__run_id__split__split__insights_semseg_metrics_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SegmentationMetricsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Segmentation Metrics For Run
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/seq2seq/metrics:
    post:
      description:
        "[Seq2Seq ONLY] Calculates bleu, rouge, and DEP for the (filtered)
        df."
      operationId: get_seq2seq_metrics_for_run_projects__project_id__runs__run_id__split__split__insights_seq2seq_metrics_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Seq2SeqMetricsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Seq2Seq Metrics For Run
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/similar:
    post:
      description: "Gets similar samples from another split.


        Given a set of samples from a dataframe from split {split}, find the most
        similar samples from split {from_split}

        and return those IDs"
      operationId: get_similar_from_split_projects__project_id__runs__run_id__split__split__insights_similar_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: from_split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
        - in: query
          name: from_inference_name
          required: false
          schema:
            default: ""
            title: From Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
                  task: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimilarToResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Similar From Split
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/summary:
    post:
      description:
        "Populates the core components of the Galileo Console.\n\nCalculate\
        \ summary statistics, data rows, hard/easy thresholds, DEP distribution for\n\
        \ the cohort, and applies any filters requested.\n\nArgs:\n    project_id\n\
        \    run_id\n    split\n    current_user (User, optional): The current user\
        \ making the HTTP request.\n        Defaults to Depends(authentication_service.current_user).\n\
        \    inference_name (bool, default \"\"): Optional inference name. Required\
        \ if split\n        is inference\n    summary_request (SummaryRequest, optional):\
        \ See SummaryRequest.\n\nReturns:\n    SplitRunResults"
      operationId: get_summary_statistics_projects__project_id__runs__run_id__split__split__insights_summary_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SummaryRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
                  hard_easy_threshold: true
                  include_emb: true
                  sort_ascending: false
                  sort_by: data_error_potential
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RootModel_Union_InferenceRunResults__SplitRunResults__"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Summary Statistics
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/thresholds:
    post:
      description:
        "Gets the DEP score hard/easy thresholds for a project/run/split.


        If in a multi-label model, you must provide a task"
      operationId: get_thresholds_projects__project_id__runs__run_id__split__split__insights_thresholds_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ThresholdRequest"
              examples:
                - {}
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThresholdResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Thresholds
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/insights/top:
    post:
      description: "Returns the list of top insights for UI to consume.


        Dataframe given some (or no) filters.


        The insights returned are:

        - top erroneous words (NER)

        - top misclassified pairs

        - top correlation pairs (tabular data)"
      operationId: get_top_insights_projects__project_id__runs__run_id__split__split__insights_top_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TopInsightsRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopInsightsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Top Insights
      tags:
        - insights
  /projects/{project_id}/runs/{run_id}/split/{split}/meta/columns:
    post:
      description:
        "Describes the available metadata columns for a given project_id/run_id.


        Response is a list of MetaInfo objects with fields:

        name

        is_categorical

        unique_values

        unique_values_filtered (if filter applied)

        n_unique_values

        n_unique_values_filtered (if filter applied)

        max

        min"
      operationId: list_metadata_columns_projects__project_id__runs__run_id__split__split__meta_columns_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListMetaRequest"
              examples:
                - filter_params:
                    data_error_potential_high: 0.8
                    data_error_potential_low: 0.3
                    misclassified_only: false
                    text_pat: the
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMetaResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Metadata Columns
      tags:
        - meta
  /projects/{project_id}/runs/{run_id}/split/{split}/slices:
    get:
      description: "Gets all slices in specific run.


        We apply the logic and compute metrics for each slice."
      operationId: get_slice_metrics_for_run_projects__project_id__runs__run_id__split__split__slices_get
      parameters:
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: inference_name
          required: false
          schema:
            default: ""
            title: Inference Name
            type: string
        - in: query
          name: task
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Task
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SliceMetrics"
                title:
                  Response Get Slice Metrics For Run Projects  Project Id  Runs  Run
                  Id  Split  Split  Slices Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Slice Metrics For Run
      tags:
        - slices
  /projects/{project_id}/runs/{run_id}/splits:
    get:
      description: Gets logged splits for a given project_id/run_id.
      operationId: get_splits_projects__project_id__runs__run_id__splits_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSplitsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Splits
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/tags:
    get:
      description: Gets tags for a given project_id/run_id.
      operationId: get_run_tags_projects__project_id__runs__run_id__tags_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RunTagDB"
                title:
                  Response Get Run Tags Projects  Project Id  Runs  Run Id  Tags
                  Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Run Tags
      tags:
        - runs
    post:
      description: Sets or updates a tag for a run.
      operationId: set_tag_for_run_projects__project_id__runs__run_id__tags_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunTagCreateRequest"
              examples:
                - key: Vector DB
                  tag_type: rag
                  value: Pinecone
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunTagDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Set Tag For Run
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/tags/{tag_id}:
    delete:
      operationId: delete_run_tag_projects__project_id__runs__run_id__tags__tag_id__delete
      parameters:
        - in: path
          name: tag_id
          required: true
          schema:
            format: uuid4
            title: Tag Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRunResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Run Tag
      tags:
        - runs
    get:
      description: Gets tags for a given project_id/run_id.
      operationId: get_run_tag_projects__project_id__runs__run_id__tags__tag_id__get
      parameters:
        - in: path
          name: tag_id
          required: true
          schema:
            format: uuid4
            title: Tag Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunTagDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Run Tag
      tags:
        - runs
    put:
      description: Sets or updates a tag for a run.
      operationId: update_tag_for_run_projects__project_id__runs__run_id__tags__tag_id__put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: tag_id
          required: true
          schema:
            format: uuid4
            title: Tag Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunTagCreateRequest"
              examples:
                - key: Vector DB
                  tag_type: rag
                  value: Pinecone
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunTagDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Tag For Run
      tags:
        - runs
  /projects/{project_id}/runs/{run_id}/tasks:
    get:
      description: "Gets tasks for a given multi-label project_id/run_id.


        This is for multi-label runs, otherwise it will raise an exception"
      operationId: get_run_tasks_projects__project_id__runs__run_id__tasks_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: run_id
          required: true
          schema:
            format: uuid4
            title: Run Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Run Tasks
      tags:
        - runs
  /projects/{project_id}/scorers:
    put:
      description: Trigger jobs to recompute a metric based on recompute settings.
      operationId: submit_scorers_projects__project_id__scorers_put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateComputeScoreRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Submit Scorers
      tags:
        - prompts
        - models
        - integrations
  /projects/{project_id}/settings:
    get:
      operationId: get_settings_projects__project_id__settings_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenAIProjectSettings"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Settings
      tags:
        - project_settings
    put:
      operationId: update_project_settings_projects__project_id__settings_put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenAIProjectSettings"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectSettingsDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Project Settings
      tags:
        - project_settings
  /projects/{project_id}/settings/evaluate:
    get:
      operationId: get_evaluate_settings_projects__project_id__settings_evaluate_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluateProjectSettings"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Evaluate Settings
      tags:
        - project_settings
  /projects/{project_id}/settings/observe:
    get:
      operationId: get_observe_settings_projects__project_id__settings_observe_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObserveProjectSettings"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Observe Settings
      tags:
        - project_settings
  /projects/{project_id}/settings/scorers_config:
    get:
      operationId: get_scorers_config_projects__project_id__settings_scorers_config_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScorersConfig"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Scorers Config
      tags:
        - project_settings
  /projects/{project_id}/slices:
    get:
      description: "Gets all slices in a project.


        If slice_name is provided, returns the slice with that name, else []"
      operationId: get_project_slices_projects__project_id__slices_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: slice_name
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Slice Name
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SliceDB"
                title: Response Get Project Slices Projects  Project Id  Slices Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project Slices
      tags:
        - slices
    post:
      description: 'Creates a Slice.


        The "logic" field of a slice should be dictionary that matches the fields
        of a ProcRequest (without the project,

        run, or split). On request, the logic will be validated. The returned Slice''s
        "logic" field should fit directly into

        a ProcRequest (barring the run_id and Split. Those must be provided by the
        client).'
      operationId: create_slice_projects__project_id__slices_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SliceCreate"
              examples:
                - logic:
                    data_error_potential_low: 0.3
                    misclassified_only: true
                    similar_to: 5
                  name: my_first_slice
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SliceCreateResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Slice
      tags:
        - slices
  /projects/{project_id}/slices/{slice_id}:
    delete:
      operationId: delete_slice_projects__project_id__slices__slice_id__delete
      parameters:
        - in: path
          name: slice_id
          required: true
          schema:
            format: uuid4
            title: Slice Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SliceDeleteResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Slice
      tags:
        - slices
    get:
      description: 'Gets a slice.


        The returned slice will have a "logic" field that will be directly usable
        in a ProcRequest (barring the run_id and

        Split. Those must be provided by the client).'
      operationId: get_slice_projects__project_id__slices__slice_id__get
      parameters:
        - in: path
          name: slice_id
          required: true
          schema:
            format: uuid4
            title: Slice Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SliceDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Slice
      tags:
        - slices
    put:
      description: "Updates a slice.


        When updating a slice, you cannot update individual fields. You must update
        the ENTIRE slice. Meaning whatever is

        sent in the request will become the new slice."
      operationId: update_slice_projects__project_id__slices__slice_id__put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: slice_id
          required: true
          schema:
            format: uuid4
            title: Slice Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SliceUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SliceUpdateResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Slice
      tags:
        - slices
  /projects/{project_id}/spans/available_columns:
    post:
      operationId: spans_available_columns_projects__project_id__spans_available_columns_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogDataAvailableColumnsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataAvailableColumnsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Spans Available Columns
      tags:
        - trace
  /projects/{project_id}/spans/search:
    post:
      operationId: query_spans_projects__project_id__spans_search_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogDataQueryRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataQueryResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Query Spans
      tags:
        - trace
  /projects/{project_id}/spans/{span_id}:
    get:
      operationId: get_span_projects__project_id__spans__span_id__get
      parameters:
        - in: path
          name: span_id
          required: true
          schema:
            format: uuid4
            title: Span Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataGetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Span
      tags:
        - trace
  /projects/{project_id}/split/{split}/insights/compare:
    post:
      description: Gets overall statistics for multiple runs as well as slice statistics.
      operationId: compare_runs_projects__project_id__split__split__insights_compare_post
      parameters:
        - in: path
          name: split
          required: true
          schema:
            $ref: "#/components/schemas/Split"
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompareRunsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Compare Runs
      tags:
        - insights
  /projects/{project_id}/stages:
    get:
      operationId: get_stage_projects__project_id__stages_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: stage_name
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Stage Name
        - in: query
          name: stage_id
          required: false
          schema:
            anyOf:
              - format: uuid4
                type: string
              - type: "null"
            title: Stage Id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StageDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Stage
      tags:
        - protect
        - stage
    post:
      operationId: create_stage_projects__project_id__stages_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StageWithRulesets"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StageDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Stage
      tags:
        - protect
        - stage
  /projects/{project_id}/stages/{stage_id}:
    post:
      operationId: update_stage_projects__project_id__stages__stage_id__post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: stage_id
          required: true
          schema:
            format: uuid4
            title: Stage Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RulesetsMixin"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StageDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Stage
      tags:
        - protect
        - stage
    put:
      operationId: pause_stage_projects__project_id__stages__stage_id__put
      parameters:
        - in: path
          name: stage_id
          required: true
          schema:
            format: uuid4
            title: Stage Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: pause
          required: false
          schema:
            default: false
            title: Pause
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StageDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Pause Stage
      tags:
        - protect
        - stage
  /projects/{project_id}/templates:
    get:
      description:
        "Get all prompt templates for a project.\n\nParameters\n----------\n\
        project_id : UUID4\n    Project ID.\ndb_read : Session, optional\n    Session\
        \ object to execute DB reads, by default Depends(get_db_read).\n\nReturns\n\
        -------\nList[GetTemplateResponse]\n    List of prompt template responses."
      operationId: get_project_templates_projects__project_id__templates_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BasePromptTemplateResponse"
                title:
                  Response Get Project Templates Projects  Project Id  Templates
                  Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project Templates
      tags:
        - prompts
    post:
      description:
        "For a given project, create a prompt template.\n\nWe first create\
        \ a prompt template version, and then create a prompt template that\npoints\
        \ to that version as the selected version.\n\nParameters\n----------\nproject_id\
        \ : UUID4\n    Project ID.\ncurrent_user : User, optional\n    User who sent\
        \ the request, by default Depends(authentication_service.current_user)\ncreate_request\
        \ : CreatePromptTemplateWithVersionRequestBody, optional\n    Request body,\
        \ by default Body( ...,\n        examples=\n        [BasePromptTemplateVersion.test_data()\
        \ | BasePromptTemplate.test_data()],\n    )\ndb_read : Session, optional\n\
        \    Session object to execute DB reads, by default Depends(get_db_read)\n\
        \nReturns\n-------\nCreatePromptTemplateResponse\n    Details about the created\
        \ prompt template."
      operationId: create_prompt_template_with_version_projects__project_id__templates_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePromptTemplateWithVersionRequestBody"
              examples:
                - name: test_template
                  template: tell me a story about {a} and {b}
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePromptTemplateResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Prompt Template With Version
      tags:
        - prompts
  /projects/{project_id}/templates/versions:
    get:
      description:
        "Get a prompt template from a project.\n\nParameters\n----------\n\
        project_id : UUID4\n    Prokect ID.\ntemplate_name : str\n    Prompt template\
        \ name.\nversion : Optional[int]\n    Version number to fetch. defaults to\
        \ selected version.\ndb_read : Session, optional\n    Session object to execute\
        \ DB reads, by default Depends(get_db_read).\n\n\nReturns\n-------\nGetTemplateResponse\n\
        \    Prompt template response."
      operationId: get_template_version_by_name_projects__project_id__templates_versions_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: template_name
          required: true
          schema:
            title: Template Name
            type: string
        - in: query
          name: version
          required: false
          schema:
            anyOf:
              - type: integer
              - type: "null"
            title: Version
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePromptTemplateVersionResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Template Version By Name
      tags:
        - prompts
  /projects/{project_id}/templates/{template_id}:
    delete:
      operationId: delete_template_projects__project_id__templates__template_id__delete
      parameters:
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePromptResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Template
      tags:
        - prompts
    get:
      description:
        "Get a prompt template from a project.\n\nParameters\n----------\n\
        template_id : UUID4\n    Prompt template ID.\nproject_id : UUID4\n    Prokect\
        \ ID.\ndb_read : Session, optional\n    Session object to execute DB reads,\
        \ by default Depends(get_db_read).\n\nReturns\n-------\nGetTemplateResponse\n\
        \    Prompt template response."
      operationId: get_template_from_project_projects__project_id__templates__template_id__get
      parameters:
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePromptTemplateResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Template From Project
      tags:
        - prompts
  /projects/{project_id}/templates/{template_id}/versions:
    post:
      description:
        "Create a prompt template version for a given prompt template.\n\
        \nParameters\n----------\nproject_id : UUID4\n    Project ID.\ntemplate_id\
        \ : UUID4\n    Prompt template ID.\ncurrent_user : User, optional\n    Authenticated\
        \ user, by default Depends(authentication_service.current_user)\nbody : dict,\
        \ optional\n    Body of the request, by default Body( ...,\n        examples=[CreatePromptTemplateVersionRequest.test_data()],\n\
        \    )\ndb_read : Session, optional\n    Database session, by default Depends(get_db_read)\n\
        \nReturns\n-------\nBasePromptTemplateVersionResponse\n    Response with details\
        \ about the created prompt template version."
      operationId: create_prompt_template_version_projects__project_id__templates__template_id__versions_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BasePromptTemplateVersion"
              examples:
                - template: tell me a story about {a} and {b}
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePromptTemplateVersionResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Prompt Template Version
      tags:
        - prompts
  /projects/{project_id}/templates/{template_id}/versions/{version}:
    get:
      description:
        "Get a specific version of a prompt template.\n\nParameters\n----------\n\
        template_id : UUID4\n    Template ID.\nversion : int\n    Version number to\
        \ fetch.\ncurrent_user : User, optional\n    User who is authorized, by default\
        \ Depends(authentication_service.current_user).\ndb_read : Session, optional\n\
        \    Database session, by default Depends(get_db_read)\n\nReturns\n-------\n\
        BasePromptTemplateVersionResponse\n    Prompt template version response."
      operationId: get_template_version_projects__project_id__templates__template_id__versions__version__get
      parameters:
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePromptTemplateVersionResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Template Version
      tags:
        - prompts
    put:
      operationId: set_selected_template_version_projects__project_id__templates__template_id__versions__version__put
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: template_id
          required: true
          schema:
            format: uuid4
            title: Template Id
            type: string
        - in: path
          name: version
          required: true
          schema:
            title: Version
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasePromptTemplateResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Set Selected Template Version
      tags:
        - prompts
  /projects/{project_id}/traces:
    post:
      operationId: log_traces_projects__project_id__traces_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TracesIngestRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TracesIngestResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Log Traces
      tags:
        - trace
  /projects/{project_id}/traces/available_columns:
    post:
      operationId: traces_available_columns_projects__project_id__traces_available_columns_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogDataAvailableColumnsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataAvailableColumnsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Traces Available Columns
      tags:
        - trace
  /projects/{project_id}/traces/search:
    post:
      operationId: query_traces_projects__project_id__traces_search_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogDataQueryRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataQueryResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Query Traces
      tags:
        - trace
  /projects/{project_id}/traces/{trace_id}:
    get:
      operationId: get_trace_projects__project_id__traces__trace_id__get
      parameters:
        - in: path
          name: trace_id
          required: true
          schema:
            format: uuid4
            title: Trace Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataGetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Trace
      tags:
        - trace
  /projects/{project_id}/training/{training_job_id}/status/:
    get:
      description: Get the status for a training job.
      operationId: training_status_projects__project_id__training__training_job_id__status__get
      parameters:
        - in: path
          name: training_job_id
          required: true
          schema:
            format: uuid4
            title: Training Job Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainJobStatusResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Training Status
      tags:
        - projects
  /projects/{project_id}/upload_file:
    post:
      operationId: upload_file_projects__project_id__upload_file_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_upload_file_projects__project_id__upload_file_post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Upload File
      tags:
        - projects
  /projects/{project_id}/users:
    get:
      description: List the users with which the project has been shared.
      operationId: list_user_project_collaborators_projects__project_id__users_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserCollaboratorsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List User Project Collaborators
      tags:
        - projects
    post:
      description: Share a project with users.
      operationId: create_user_project_collaborators_projects__project_id__users_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/UserCollaboratorCreate"
              title: Body
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/UserCollaborator"
                title:
                  Response Create User Project Collaborators Projects  Project
                  Id  Users Post
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create User Project Collaborators
      tags:
        - projects
  /projects/{project_id}/users/{user_id}:
    delete:
      description: Remove a user's access to a project.
      operationId: delete_user_project_collaborator_projects__project_id__users__user_id__delete
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete User Project Collaborator
      tags:
        - projects
    patch:
      description: Update the sharing permissions of a user on a project.
      operationId: update_user_project_collaborator_projects__project_id__users__user_id__patch
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollaboratorUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCollaborator"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update User Project Collaborator
      tags:
        - projects
  /projects/{project_id}/{training_mode}/start:
    post:
      description: Start training.
      operationId: start_training_job_projects__project_id___training_mode__start_post
      parameters:
        - in: path
          name: training_mode
          required: true
          schema:
            title: Training Mode
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Request Body
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Start Training Job
      tags:
        - projects
  /projects/{project_id}/{training_or_inference}/validate_dataset:
    post:
      description: Validate a dataset for training.
      operationId: validate_dataset_projects__project_id___training_or_inference__validate_dataset_post
      parameters:
        - in: path
          name: training_or_inference
          required: true
          schema:
            $ref: "#/components/schemas/DatasetType"
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidationRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Validate Dataset
      tags:
        - projects
  /prompts/models/all:
    get:
      operationId: get_all_models_prompts_models_all_get
      parameters:
        - in: query
          name: with_custom_models
          required: false
          schema:
            default: false
            title: With Custom Models
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ModelInfo"
                title: Response Get All Models Prompts Models All Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get All Models
      tags:
        - prompts
        - models
        - integrations
  /prompts/rows/groups:
    get:
      operationId: get_groups_prompts_rows_groups_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PromptGroupResponse"
                title: Response Get Groups Prompts Rows Groups Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Groups
      tags:
        - data
        - prompts
        - rows
  /protect/invoke:
    post:
      operationId: invoke_protect_invoke_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Response"
                  - $ref: "#/components/schemas/InvokeResponse"
                title: Response Invoke Protect Invoke Post
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Invoke
      tags:
        - protect
  /registered-scorers:
    get:
      operationId: list_scorers_registered_scorers_get
      parameters:
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegisteredScorersResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Scorers
      tags:
        - scorer
        - llm
    put:
      operationId: create_or_update_registered_scorers_put
      parameters:
        - in: query
          name: name
          required: true
          schema:
            title: Name
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_create_or_update_registered_scorers_put"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUpdateRegisteredScorerResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Or Update
      tags:
        - scorer
        - llm
  /registered-scorers/{registered_scorer_id}:
    delete:
      operationId: delete_scorer_registered_scorers__registered_scorer_id__delete
      parameters:
        - in: path
          name: registered_scorer_id
          required: true
          schema:
            format: uuid4
            title: Registered Scorer Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Scorer
      tags:
        - scorer
        - llm
  /request_access:
    post:
      description: "Endpoint for a user to request access to the console.


        This is often the first step for a user to sign up for the console. The user
        record is created with

        `email_is_verified=None`, which signifies that the user has requested access
        but hasn't been invited yet."
      operationId: request_access_request_access_post
      parameters:
        - in: query
          name: user_email
          required: true
          schema:
            format: email
            title: User Email
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Request Access
      tags:
        - users
  /scorers:
    post:
      operationId: list_scorers_with_filters_scorers_post
      parameters:
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListScorersRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListScorersResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Scorers With Filters
      tags:
        - data
        - prompts
        - rows
  /scorers/tags:
    get:
      operationId: list_tags_scorers_tags_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response List Tags Scorers Tags Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Tags
      tags:
        - data
        - prompts
        - rows
  /scorers/{scorer_id}:
    get:
      operationId: get_scorer_scorers__scorer_id__get
      parameters:
        - in: path
          name: scorer_id
          required: true
          schema:
            format: uuid4
            title: Scorer Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScorerResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Scorer
      tags:
        - data
        - prompts
        - rows
  /scorers/{scorer_id}/versions:
    get:
      operationId: get_scorer_versions_scorers__scorer_id__versions_get
      parameters:
        - in: path
          name: scorer_id
          required: true
          schema:
            format: uuid4
            title: Scorer Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScorerVersionsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Scorer Versions
      tags:
        - data
        - prompts
        - rows
  /signup_link:
    post:
      description: "Generate a signup link for a new user.


        This endpoint is used by admins in the console Command Center.

        We create an unverified user entry and send a signup email to the new user.


        The user is then verified via one of the following endpoints:

        - POST /users

        - POST /users/social"
      operationId: generate_signup_link_signup_link_post
      parameters:
        - in: query
          name: user_email
          required: true
          schema:
            format: email
            title: User Email
            type: string
        - in: query
          name: send_email
          required: false
          schema:
            default: true
            title: Send Email
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSignupLinkResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Generate Signup Link
      tags:
        - users
  /token:
    get:
      operationId: get_token_token_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTokenResponse"
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Token
      tags:
        - auth
  /training/{training_job_id}/token:
    post:
      description: Get the status for a training job.
      operationId: get_token_for_training_job_training__training_job_id__token_post
      parameters:
        - in: path
          name: training_job_id
          required: true
          schema:
            format: uuid4
            title: Training Job Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Request Body
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrainJobAuthTokenResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Get Token For Training Job
      tags:
        - projects
  /user_roles:
    get:
      description: Get all user roles.
      operationId: get_user_roles_user_roles_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/UserRoleInfo"
                title: Response Get User Roles User Roles Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get User Roles
      tags:
        - users
  /users:
    delete:
      operationId: delete_user_self_users_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResponse"
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete User Self
      tags:
        - users
    get:
      operationId: list_users_users_get
      parameters:
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUsersResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Users
      tags:
        - users
    post:
      description: "Create a new user with an email and password.


        If no admin exists (first user), the user will be created as an admin.


        Otherwise:

        - User record was already created when the admin invited the user

        - We should verify the user's email"
      operationId: create_or_verify_user_users_post
      parameters:
        - in: query
          name: signup_token
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Signup Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
              examples:
                - auth_method: email
                  email: user@example.com
                  first_name: Alice
                  last_name: Appleseed
                  password: Th3secret_
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Create Or Verify User
      tags:
        - users
  /users/all:
    get:
      deprecated: true
      description: 'List all users in the system.


        This endpoint is optimized to count project and runs for each user. This endpoint
        must be placed before

        `/users/{user_id}` so that "all" is not interpreted as a UUID4.'
      operationId: list_all_users_users_all_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GetUserResponse"
                title: Response List All Users Users All Get
                type: array
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List All Users
      tags:
        - users
  /users/api_keys:
    post:
      operationId: create_api_key_users_api_keys_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApiKeyRequest"
              examples:
                - description: My cool api_key
                  expires_at: "2024-04-01 09:00:00"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateApiKeyResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Api Key
      tags:
        - api_keys
  /users/api_keys/{api_key_id}:
    delete:
      operationId: delete_api_key_users_api_keys__api_key_id__delete
      parameters:
        - in: path
          name: api_key_id
          required: true
          schema:
            format: uuid4
            title: Api Key Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyDeleteResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Api Key
      tags:
        - api_keys
  /users/social:
    post:
      description: "Create a user using a social login provider.


        All social users are created with `email_is_verified=True`, don't need to
        be invited and are by default read-only

        (unless they are the first user, in which case they are set to admin)."
      operationId: create_or_verify_user_social_users_social_post
      parameters:
        - in: query
          name: signup_token
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Signup Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SocialLoginRequest"
              examples:
                - id_token: token1234
                  provider: google
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Create Or Verify User Social
      tags:
        - users
  /users/{user_id}:
    delete:
      operationId: delete_user_users__user_id__delete
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete User
      tags:
        - users
    get:
      operationId: get_user_users__user_id__get
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get User
      tags:
        - users
    put:
      operationId: update_user_users__user_id__put
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
              examples:
                - email: bigtony@rungalileo.io
                  first_name: Tony
                  last_name: Newname
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update User
      tags:
        - users
  /users/{user_id}/api_keys:
    get:
      operationId: get_api_keys_users__user_id__api_keys_get
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListApiKeyResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Api Keys
      tags:
        - api_keys
  /users/{user_id}/runs:
    get:
      description:
        "Get all user created runs across all projects they can access.


        This returns a filtered list of projects with only runs created by this user."
      operationId: get_project_runs_for_user_users__user_id__runs_get
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
        - in: query
          name: project_type
          required: false
          schema:
            anyOf:
              - $ref: "#/components/schemas/ProjectType"
              - type: "null"
            title: Project Type
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProjectDB"
                title: Response Get Project Runs For User Users  User Id  Runs Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Project Runs For User
      tags:
        - users
  /users/{user_id}/runs/latest:
    get:
      description: Gets the most recent run for a User, ordered by last updated.
      operationId: get_latest_user_run_users__user_id__runs_latest_get
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
        - in: query
          name: project_type
          required: false
          schema:
            $ref: "#/components/schemas/ProjectType"
            default: training_inference
        - in: query
          name: starting_token
          required: false
          schema:
            default: 0
            title: Starting Token
            type: integer
        - in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserLatestRunsDB"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Latest User Run
      tags:
        - users
  /users/{user_id}/transfer:
    post:
      description:
        Transfers all projects, runs, and edits created by a user to another
        user.
      operationId: transfer_user_data_users__user_id__transfer_post
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            format: uuid4
            title: User Id
            type: string
        - in: query
          name: new_user_id
          required: true
          schema:
            format: uuid4
            title: New User Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Transfer User Data
      tags:
        - users
  /v1/evaluate/run-workflows:
    post:
      description:
        Fetch evaluation results for a specific run including rows and
        aggregate information.
      operationId: get_evaluate_run_results_v1_evaluate_run_workflows_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluateRunResultsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowsReadResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Evaluate Run Results
      tags:
        - evaluate
  /v1/evaluate/runs:
    post:
      description: "Create a new Evaluate run with workflows.


        Use this endpoint to create a new Evaluate run with workflows. The request
        body should contain the `workflows` to be ingested and evaluated.


        Additionally, specify the `project_id` or `project_name` to which the workflows
        should be ingested. If the project does not exist, it will be created. If
        the project exists, the workflows will be logged to it. If both `project_id`
        and `project_name` are provided, `project_id` will take precedence. The `run_name`
        is optional and will be auto-generated (timestamp-based) if not provided.


        The body is also expected to include the configuration for the scorers to
        be used in the evaluation. This configuration will be used to evaluate the
        workflows and generate the results."
      operationId: create_workflows_run_v1_evaluate_runs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluateRunRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluateRunResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Workflows Run
      tags:
        - evaluate
  /v1/healthcheck:
    get:
      operationId: healthcheck_v1_healthcheck_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthcheckResponse"
          description: Successful Response
      summary: Healthcheck
      tags:
        - health
  /v1/observe/projects/{project_id}/workflows:
    post:
      description: Get workflows for a specific run in an Observe project.
      operationId: get_workflows_v1_observe_projects__project_id__workflows_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
        - in: query
          name: start_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: Start Time
        - in: query
          name: end_time
          required: false
          schema:
            anyOf:
              - format: date-time
                type: string
              - type: "null"
            title: End Time
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetObserveWorkflowsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowsReadResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Workflows
      tags:
        - observe
  /v1/observe/workflows:
    post:
      description: "Log workflows to an Observe project.


        Use this endpoint to log workflows to an Observe project. The request body
        should contain the

        `workflows` to be ingested.


        Additionally, specify the `project_id` or `project_name` to which the workflows
        should be ingested.

        If the project does not exist, it will be created. If the project exists,
        the workflows will be logged to it.

        If both `project_id` and `project_name` are provided, `project_id` will take
        precedence."
      operationId: log_workflows_v1_observe_workflows_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowsIngestRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowsIngestResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Log Workflows
      tags:
        - observe
  /v1/protect/invoke:
    post:
      operationId: invoke_v1_protect_invoke_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/Response"
                  - $ref: "#/components/schemas/InvokeResponse"
                title: Response Invoke V1 Protect Invoke Post
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Invoke
      tags:
        - protect
  /v1/token:
    get:
      operationId: get_token_v1_token_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTokenResponse"
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Token
      tags:
        - auth
  /v2/healthcheck:
    get:
      operationId: healthcheck_v2_healthcheck_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthcheckResponse"
          description: Successful Response
      summary: Healthcheck
      tags:
        - health
  /v2/projects/{project_id}/experiments:
    get:
      description: Retrieve all experiments for a project.
      operationId: list_experiments_v2_projects__project_id__experiments_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExperimentResponse"
                title:
                  Response List Experiments V2 Projects  Project Id  Experiments
                  Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Experiments
      tags:
        - experiment
    post:
      description: Create a new experiment for a project.
      operationId: create_experiment_v2_projects__project_id__experiments_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentCreateRequest"
              examples:
                - name: my_first_experiment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Experiment
      tags:
        - experiment
  /v2/projects/{project_id}/experiments/{experiment_id}:
    delete:
      description: Delete a specific experiment.
      operationId: delete_experiment_v2_projects__project_id__experiments__experiment_id__delete
      parameters:
        - in: path
          name: experiment_id
          required: true
          schema:
            format: uuid4
            title: Experiment Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "204":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Experiment
      tags:
        - experiment
    get:
      description: Retrieve a specific experiment.
      operationId: get_experiment_v2_projects__project_id__experiments__experiment_id__get
      parameters:
        - in: path
          name: experiment_id
          required: true
          schema:
            format: uuid4
            title: Experiment Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Experiment
      tags:
        - experiment
    put:
      description: Update a specific experiment.
      operationId: update_experiment_v2_projects__project_id__experiments__experiment_id__put
      parameters:
        - in: path
          name: experiment_id
          required: true
          schema:
            format: uuid4
            title: Experiment Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentUpdateRequest"
              examples:
                - name: my_first_experiment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Experiment
      tags:
        - experiment
  /v2/projects/{project_id}/log_streams:
    get:
      description: Retrieve all log streams for a project.
      operationId: list_log_streams_v2_projects__project_id__log_streams_get
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LogStreamResponse"
                title:
                  Response List Log Streams V2 Projects  Project Id  Log Streams
                  Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: List Log Streams
      tags:
        - log_stream
    post:
      description: Create a new log stream for a project.
      operationId: create_log_stream_v2_projects__project_id__log_streams_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogStreamCreateRequest"
              examples:
                - name: my_first_log_stream
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogStreamResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Create Log Stream
      tags:
        - log_stream
  /v2/projects/{project_id}/log_streams/{log_stream_id}:
    delete:
      description: Delete a specific log stream.
      operationId: delete_log_stream_v2_projects__project_id__log_streams__log_stream_id__delete
      parameters:
        - in: path
          name: log_stream_id
          required: true
          schema:
            format: uuid4
            title: Log Stream Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "204":
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Delete Log Stream
      tags:
        - log_stream
    get:
      description: Retrieve a specific log stream.
      operationId: get_log_stream_v2_projects__project_id__log_streams__log_stream_id__get
      parameters:
        - in: path
          name: log_stream_id
          required: true
          schema:
            format: uuid4
            title: Log Stream Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogStreamResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Log Stream
      tags:
        - log_stream
    put:
      description: Update a specific log stream.
      operationId: update_log_stream_v2_projects__project_id__log_streams__log_stream_id__put
      parameters:
        - in: path
          name: log_stream_id
          required: true
          schema:
            format: uuid4
            title: Log Stream Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogStreamUpdateRequest"
              examples:
                - name: my_first_log_stream
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogStreamResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Update Log Stream
      tags:
        - log_stream
  /v2/projects/{project_id}/spans/available_columns:
    post:
      operationId: spans_available_columns_v2_projects__project_id__spans_available_columns_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogDataAvailableColumnsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataAvailableColumnsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Spans Available Columns
      tags:
        - trace
  /v2/projects/{project_id}/spans/search:
    post:
      operationId: query_spans_v2_projects__project_id__spans_search_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogDataQueryRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataQueryResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Query Spans
      tags:
        - trace
  /v2/projects/{project_id}/spans/{span_id}:
    get:
      operationId: get_span_v2_projects__project_id__spans__span_id__get
      parameters:
        - in: path
          name: span_id
          required: true
          schema:
            format: uuid4
            title: Span Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataGetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Span
      tags:
        - trace
  /v2/projects/{project_id}/traces:
    post:
      operationId: log_traces_v2_projects__project_id__traces_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TracesIngestRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TracesIngestResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Log Traces
      tags:
        - trace
  /v2/projects/{project_id}/traces/available_columns:
    post:
      operationId: traces_available_columns_v2_projects__project_id__traces_available_columns_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogDataAvailableColumnsRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataAvailableColumnsResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Traces Available Columns
      tags:
        - trace
  /v2/projects/{project_id}/traces/search:
    post:
      operationId: query_traces_v2_projects__project_id__traces_search_post
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogDataQueryRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataQueryResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Query Traces
      tags:
        - trace
  /v2/projects/{project_id}/traces/{trace_id}:
    get:
      operationId: get_trace_v2_projects__project_id__traces__trace_id__get
      parameters:
        - in: path
          name: trace_id
          required: true
          schema:
            format: uuid4
            title: Trace Id
            type: string
        - in: path
          name: project_id
          required: true
          schema:
            format: uuid4
            title: Project Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogDataGetResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Trace
      tags:
        - trace
  /v2/token:
    get:
      operationId: get_token_v2_token_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTokenResponse"
          description: Successful Response
      security:
        - APIKeyHeader: []
        - OAuth2PasswordBearer: []
        - HTTPBasic: []
      summary: Get Token
      tags:
        - auth
  /verify_email:
    post:
      operationId: verify_email_verify_email_post
      parameters:
        - in: query
          name: verification_token
          required: true
          schema:
            title: Verification Token
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailVerificationRequest"
              examples:
                - email: user@example.com
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Verify Email
      tags:
        - auth
servers:
  - description: Galileo API Server - local
    url: http://localhost:8088
